{"id":"4167fb07085a518fed62f5efa9d321ae","_format":"hh-sol-build-info-1","solcVersion":"0.8.1","solcLongVersion":"0.8.1+commit.df193b15","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/AreaCalculator.sol":{"content":"// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.5.16;\n\n// contract AreaCalculator {\n//     function calculateTriangleArea(uint256 base, uint256 height) public pure returns (uint256) {\n//         return (base * height) / 2;\n//     }\n\n//     function calculateRectangleArea(uint256 length, uint256 width) public pure returns (uint256) {\n//         return length * width;\n//     }\n\n//     function calculateSquareArea(uint256 side) public pure returns (uint256) {\n//         return side * side;\n//     }\n// }\n"},"contracts/Bank.sol":{"content":"// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.5.16;\n\n// contract Bank {\n//     struct Account {\n//         address owner;\n//         uint balance;\n//     }\n\n//     mapping(address => Account) public accounts;\n\n//     // Create a new account\n//     function createAccount() public {\n//         require(accounts[msg.sender].owner == address(0), \"Account already exists\");\n//         accounts[msg.sender] = Account({owner: msg.sender, balance: 0});\n//     }\n\n//     // Deposit funds into an account\n//     function deposit() public payable {\n//         require(accounts[msg.sender].owner != address(0), \"Account does not exist\");\n//         accounts[msg.sender].balance += msg.value;\n//     }\n\n//     // Transfer funds to another account\n//     function transfer(address to, uint amount) public {\n//         require(accounts[msg.sender].balance >= amount, \"Insufficient funds\");\n//         require(accounts[to].owner != address(0), \"Recipient account does not exist\");\n//         accounts[msg.sender].balance -= amount;\n//         accounts[to].balance += amount;\n//     }\n\n//     // Withdraw funds from an account\n//     function withdraw(uint amount) public {\n//         require(accounts[msg.sender].balance >= amount, \"Insufficient funds\");\n//         accounts[msg.sender].balance -= amount;\n//         msg.sender.transfer(amount);\n//     }\n\n//     // Check the balance of an account\n//     function getBalance() public view returns (uint) {\n//         return accounts[msg.sender].balance;\n//     }\n// }\n"},"contracts/CrowdFunding.sol":{"content":"// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.5.16;\n\n// contract Crowdfunding {\n//     // Define the structure of a campaign\n//     struct Campaign {\n//         string title; // Title of the campaign\n//         string description; // Description of the campaign\n//         address payable benefactor; // Address of the campaign's benefactor\n//         uint goal; // Fundraising goal (in wei)\n//         uint deadline; // Deadline for the campaign (Unix timestamp)\n//         uint amountRaised; // Total amount raised so far\n//         bool ended; // Indicates if the campaign has ended\n//         mapping(address => uint) donations; // Track donations from each address\n//     }\n\n//     address public owner; // Address of the contract owner\n//     uint public campaignCount; // Total number of campaigns\n//     mapping(uint => Campaign) public campaigns; // Mapping of campaign ID to Campaign\n\n//     // Events to log important actions\n//     event CampaignCreated(uint campaignId, string title, string description, address benefactor, uint goal, uint deadline);\n//     event DonationReceived(uint campaignId, address donor, uint amount);\n//     event CampaignEnded(uint campaignId, uint amountRaised, address benefactor);\n//     event RefundIssued(uint campaignId, address donor, uint amount);\n\n//     // Modifier to restrict function access to the contract owner\n//     modifier onlyOwner() {\n//         require(msg.sender == owner, \"Not the contract owner\");\n//         _;\n//     }\n\n//     // Modifier to check if the campaign exists\n//     modifier campaignExists(uint campaignId) {\n//         require(campaignId < campaignCount, \"Campaign does not exist\");\n//         _;\n//     }\n\n//     // Modifier to check if the campaign is still active (hasn't ended yet)\n//     modifier campaignActive(uint campaignId) {\n//         require(now < campaigns[campaignId].deadline, \"Campaign has ended\");\n//         _;\n//     }\n\n//     // Modifier to check if the campaign has ended\n//     modifier campaignEnded(uint campaignId) {\n//         require(now >= campaigns[campaignId].deadline, \"Campaign has not ended yet\");\n//         require(!campaigns[campaignId].ended, \"Campaign already ended\");\n//         _;\n//     }\n\n//     // Constructor to set the initial owner of the contract\n//     constructor() public {\n//         owner = msg.sender;\n//     }\n\n//     // Function to create a new campaign\n//     function createCampaign(\n//         string memory _title,\n//         string memory _description,\n//         address payable _benefactor,\n//         uint _goal,\n//         uint _duration\n//     ) public {\n//         require(_goal > 0, \"Goal must be greater than zero\"); // Ensure goal is greater than zero\n//         require(_benefactor != address(0), \"Benefactor address cannot be zero\"); // Ensure benefactor address is valid\n\n//         uint campaignId = campaignCount++; // Increment campaign count and use as campaign ID\n//         Campaign storage campaign = campaigns[campaignId];\n//         campaign.title = _title;\n//         campaign.description = _description;\n//         campaign.benefactor = _benefactor;\n//         campaign.goal = _goal;\n//         campaign.deadline = now + _duration; // Set deadline based on duration\n//         campaign.amountRaised = 0;\n//         campaign.ended = false;\n\n//         emit CampaignCreated(campaignId, _title, _description, _benefactor, _goal, campaign.deadline); // Emit event\n//     }\n\n//     // Function to donate to a campaign\n//     function donateToCampaign(uint campaignId) public payable campaignExists(campaignId) campaignActive(campaignId) {\n//         require(msg.value > 0, \"Donation must be greater than zero\"); // Ensure donation is positive\n\n//         Campaign storage campaign = campaigns[campaignId];\n//         campaign.donations[msg.sender] += msg.value; // Track donation from sender\n//         campaign.amountRaised += msg.value; // Update total amount raised\n\n//         emit DonationReceived(campaignId, msg.sender, msg.value); // Emit event\n//     }\n\n//     // Function to end a campaign and transfer funds to the benefactor\n//     function endCampaign(uint campaignId) public campaignExists(campaignId) campaignEnded(campaignId) {\n//         Campaign storage campaign = campaigns[campaignId];\n//         campaign.ended = true;\n\n//         uint amountToTransfer = campaign.amountRaised; // Amount to transfer to the benefactor\n//         if (amountToTransfer > 0) {\n//             campaign.benefactor.transfer(amountToTransfer); // Transfer funds to the benefactor\n//         }\n\n//         emit CampaignEnded(campaignId, amountToTransfer, campaign.benefactor); // Emit event\n//     }\n\n//     // Function for users to claim refunds if the campaign did not meet its goal\n//     function claimRefund(uint campaignId) public campaignExists(campaignId) campaignEnded(campaignId) {\n//         Campaign storage campaign = campaigns[campaignId];\n//         require(campaign.amountRaised < campaign.goal, \"Campaign goal met, no refunds\"); // Check if the goal was met\n\n//         uint donationAmount = campaign.donations[msg.sender]; // Get the amount donated by the sender\n//         require(donationAmount > 0, \"No donations to refund\"); // Ensure the sender has made a donation\n\n//         campaign.donations[msg.sender] = 0; // Reset donation amount\n//         msg.sender.transfer(donationAmount); // Refund the donation\n\n//         emit RefundIssued(campaignId, msg.sender, donationAmount); // Emit event\n//     }\n\n//     // Function for the owner to withdraw leftover funds from the contract\n//     function withdrawLeftoverFunds() public onlyOwner {\n//         uint balance = address(this).balance; // Get the contract's balance\n//         require(balance > 0, \"No funds available for withdrawal\"); // Ensure there are funds to withdraw\n//         msg.sender.transfer(balance); // Transfer funds to the owner\n//     }\n\n//     // Fallback function to prevent accidental ETH transfers\n//     function() external payable {\n//         revert(\"Direct ether transfers are not allowed\");\n//     }\n// }\n"},"contracts/MyNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.1;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\n\ncontract MyNFT is ERC721URIStorage, Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private _tokenIds;\n\n    constructor() ERC721(\"MyNFT\", \"NFT\") {}\n\n    function mintNFT(address recipient, string memory tokenURI) public onlyOwner returns (uint256) {\n        _tokenIds.increment();\n\n        uint256 newItemId = _tokenIds.current();\n        _mint(recipient, newItemId);\n        _setTokenURI(newItemId, tokenURI);\n\n        return newItemId;\n    }\n\n    function totalSupply() public view returns (uint256) {\n        return _tokenIds.current();\n    }\n}\n"},"contracts/StudentPortal.sol":{"content":"// // SPDX-License-Identifier: MIT\n// pragma solidity ^0.8.0;\n\n// contract StudentPortal {\n//     struct Student {\n//         string name;\n//         string email;\n//         string dateOfBirth;\n//         string lga;\n//         string country;\n//         string state;\n//     }\n\n//     mapping(uint256 => Student) private students;\n//     address public owner;\n\n//     event StudentRegistered(uint256 studentId, string name, string email);\n//     event StudentUpdated(\n//         uint256 studentId,\n//         string name,\n//         string dateOfBirth,\n//         string lga,\n//         string country,\n//         string state\n//     );\n//     event StudentDeleted(uint256 studentId);\n\n//     modifier onlyOwner() {\n//         require(msg.sender == owner, \"Only the owner can perform this action\");\n//         _;\n//     }\n\n//     constructor() {\n//         owner = msg.sender;\n//     }\n\n//     function registerStudent(\n//         uint256 studentId,\n//         string memory name,\n//         string memory email,\n//         string memory dateOfBirth,\n//         string memory lga,\n//         string memory country,\n//         string memory state\n//     ) public onlyOwner {\n//         students[studentId] = Student(\n//             name,\n//             email,\n//             dateOfBirth,\n//             lga,\n//             country,\n//             state\n//         );\n//         emit StudentRegistered(studentId, name, email);\n//     }\n\n//     function updateStudent(\n//         uint256 studentId,\n//         string memory name,\n//         string memory dateOfBirth,\n//         string memory lga,\n//         string memory country,\n//         string memory state\n//     ) public onlyOwner {\n//         Student storage student = students[studentId];\n//         require(bytes(student.name).length > 0, \"Student does not exist\");\n//         student.name = name;\n//         student.dateOfBirth = dateOfBirth;\n//         student.lga = lga;\n//         student.country = country;\n//         student.state = state;\n//         emit StudentUpdated(studentId, name, dateOfBirth, lga, country, state);\n//     }\n\n//     function deleteStudent(uint256 studentId) public onlyOwner {\n//         require(\n//             bytes(students[studentId].name).length > 0,\n//             \"Student does not exist\"\n//         );\n//         delete students[studentId];\n//         emit StudentDeleted(studentId);\n//     }\n\n//     function getStudent(\n//         uint256 studentId\n//     )\n//         public\n//         view\n//         returns (\n//             string memory name,\n//             string memory email,\n//             string memory dateOfBirth,\n//             string memory lga,\n//             string memory country,\n//             string memory state\n//         )\n//     {\n//         require(\n//             bytes(students[studentId].name).length > 0,\n//             \"Student does not exist\"\n//         );\n//         Student memory student = students[studentId];\n//         return (\n//             student.name,\n//             student.email,\n//             student.dateOfBirth,\n//             student.lga,\n//             student.country,\n//             student.state\n//         );\n//     }\n\n//     function studentExists(uint256 studentId) public view returns (bool) {\n//         return bytes(students[studentId].name).length > 0;\n//     }\n// }\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"\n--> contracts/AreaCalculator.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/AreaCalculator.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"\n--> contracts/Bank.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Bank.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"\n--> contracts/CrowdFunding.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/CrowdFunding.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"3420","formattedMessage":"Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"\n--> contracts/StudentPortal.sol\n\n","message":"Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.1;\"","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/StudentPortal.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:199:5:\n    |\n199 |     function log2(uint256 value) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":9616,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":8633},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"Warning: Variable is shadowed in inline assembly by an instruction of the same name\n   --> @openzeppelin/contracts/utils/math/Math.sol:241:5:\n    |\n241 |     function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":10014,"file":"@openzeppelin/contracts/utils/math/Math.sol","start":9769},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":7863,"file":"@openzeppelin/contracts/utils/Address.sol","start":7851},"type":"Warning"},{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":8678,"file":"@openzeppelin/contracts/utils/Address.sol","start":8666},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1744],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":113,"sourceUnit":1745,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"contractDependencies":[1744],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1744],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"modifierName":{"id":57,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"modifierName":{"id":73,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0"}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2083]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":115,"nodeType":"ImportDirective","scope":116,"sourceUnit":2084,"src":"116:44:1","symbolAliases":[],"unitAlias":""}],"src":"91:70:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2083],"IERC4906":[137],"IERC721":[1183]},"id":138,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":118,"nodeType":"ImportDirective","scope":138,"sourceUnit":116,"src":"132:23:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":119,"nodeType":"ImportDirective","scope":138,"sourceUnit":141,"src":"156:23:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":121,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2083,"src":"248:7:2"},"id":122,"nodeType":"InheritanceSpecifier","src":"248:7:2"},{"baseName":{"id":123,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"257:7:2"},"id":124,"nodeType":"InheritanceSpecifier","src":"257:7:2"}],"contractDependencies":[1183,2083],"contractKind":"interface","documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"181:45:2","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":137,"linearizedBaseContracts":[137,1183,2083],"name":"IERC4906","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"271:201:2","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"id":129,"name":"MetadataUpdate","nodeType":"EventDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"indexed":false,"mutability":"mutable","name":"_tokenId","nodeType":"VariableDeclaration","scope":129,"src":"498:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:2"},"src":"477:39:2"},{"anonymous":false,"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"522:212:2","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"id":136,"name":"BatchMetadataUpdate","nodeType":"EventDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nodeType":"VariableDeclaration","scope":136,"src":"765:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"indexed":false,"mutability":"mutable","name":"_toTokenId","nodeType":"VariableDeclaration","scope":136,"src":"787:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:2"},"src":"739:68:2"}],"scope":138,"src":"226:583:2"}],"src":"107:703:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[2083],"IERC721":[1183]},"id":141,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":139,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":140,"nodeType":"ImportDirective","scope":141,"sourceUnit":1184,"src":"116:37:3","symbolAliases":[],"unitAlias":""}],"src":"91:63:3"},"id":3},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1714],"Context":[1744],"ERC165":[2071],"ERC721":[1067],"IERC165":[2083],"IERC721":[1183],"IERC721Metadata":[1384],"IERC721Receiver":[1201],"Math":[2949],"SignedMath":[3054],"Strings":[2047]},"id":1068,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":142,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":143,"nodeType":"ImportDirective","scope":1068,"sourceUnit":1184,"src":"132:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":144,"nodeType":"ImportDirective","scope":1068,"sourceUnit":1202,"src":"156:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":145,"nodeType":"ImportDirective","scope":1068,"sourceUnit":1385,"src":"188:42:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":146,"nodeType":"ImportDirective","scope":1068,"sourceUnit":1715,"src":"231:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":147,"nodeType":"ImportDirective","scope":1068,"sourceUnit":1745,"src":"265:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":148,"nodeType":"ImportDirective","scope":1068,"sourceUnit":2048,"src":"299:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":149,"nodeType":"ImportDirective","scope":1068,"sourceUnit":2072,"src":"333:46:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":151,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1744,"src":"647:7:4"},"id":152,"nodeType":"InheritanceSpecifier","src":"647:7:4"},{"baseName":{"id":153,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"656:6:4"},"id":154,"nodeType":"InheritanceSpecifier","src":"656:6:4"},{"baseName":{"id":155,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"664:7:4"},"id":156,"nodeType":"InheritanceSpecifier","src":"664:7:4"},{"baseName":{"id":157,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"673:15:4"},"id":158,"nodeType":"InheritanceSpecifier","src":"673:15:4"}],"contractDependencies":[1183,1384,1744,2071,2083],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"381:246:4","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1067,"linearizedBaseContracts":[1067,1384,1183,2071,2083,1744],"name":"ERC721","nodeType":"ContractDefinition","nodes":[{"id":161,"libraryName":{"id":159,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"701:7:4"},"nodeType":"UsingForDirective","src":"695:26:4","typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":164,"libraryName":{"id":162,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"732:7:4"},"nodeType":"UsingForDirective","src":"726:26:4","typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":166,"mutability":"mutable","name":"_name","nodeType":"VariableDeclaration","scope":1067,"src":"776:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":165,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":168,"mutability":"mutable","name":"_symbol","nodeType":"VariableDeclaration","scope":1067,"src":"823:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":167,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":172,"mutability":"mutable","name":"_owners","nodeType":"VariableDeclaration","scope":1067,"src":"898:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":171,"keyType":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":176,"mutability":"mutable","name":"_balances","nodeType":"VariableDeclaration","scope":1067,"src":"992:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":175,"keyType":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":180,"mutability":"mutable","name":"_tokenApprovals","nodeType":"VariableDeclaration","scope":1067,"src":"1093:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":179,"keyType":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":186,"mutability":"mutable","name":"_operatorApprovals","nodeType":"VariableDeclaration","scope":1067,"src":"1199:71:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":185,"keyType":{"id":181,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":184,"keyType":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":202,"nodeType":"Block","src":"1446:57:4","statements":[{"expression":{"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"1456:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":195,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":197,"nodeType":"ExpressionStatement","src":"1456:13:4"},{"expression":{"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":198,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":199,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":201,"nodeType":"ExpressionStatement","src":"1479:17:4"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1277:108:4","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":203,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"name_","nodeType":"VariableDeclaration","scope":203,"src":"1402:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":188,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"symbol_","nodeType":"VariableDeclaration","scope":203,"src":"1423:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":190,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:4"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[],"src":"1446:0:4"},"scope":1067,"src":"1390:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2070,2082],"body":{"id":233,"nodeType":"Block","src":"1678:192:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":214,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"1707:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":216,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"1727:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1183_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1183_$","typeString":"type(contract IERC721)"}],"id":215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1183","typeString":"type(contract IERC721)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"1763:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":222,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"1783:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1384_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1384_$","typeString":"type(contract IERC721Metadata)"}],"id":221,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1384","typeString":"type(contract IERC721Metadata)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":229,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"1851:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":227,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1067_$","typeString":"type(contract super ERC721)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"1827:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":213,"id":232,"nodeType":"Return","src":"1688:175:4"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"1509:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":210,"nodeType":"OverrideSpecifier","overrides":[{"id":208,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"1646:6:4"},{"id":209,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2083,"src":"1654:7:4"}],"src":"1637:25:4"},"parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":234,"src":"1597:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":205,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:4"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":234,"src":"1672:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":211,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:4"},"scope":1067,"src":"1570:300:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1108],"body":{"id":257,"nodeType":"Block","src":"2010:123:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":244,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2028:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{}}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":252,"nodeType":"ExpressionStatement","src":"2020:73:4"},{"expression":{"baseExpression":{"id":253,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2110:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":255,"indexExpression":{"id":254,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2120:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":242,"id":256,"nodeType":"Return","src":"2103:23:4"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"1876:48:4","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":258,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","overrides":{"id":239,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:4"},"parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":258,"src":"1948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:4"},"returnParameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":258,"src":"2001:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:4"},"scope":1067,"src":"1929:204:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1116],"body":{"id":285,"nodeType":"Block","src":"2271:138:4","statements":[{"assignments":[268],"declarations":[{"constant":false,"id":268,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":285,"src":"2281:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":272,"initialValue":{"arguments":[{"id":270,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":269,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2297:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":274,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2332:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","typeDescriptions":{}}},"id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":273,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":282,"nodeType":"ExpressionStatement","src":"2324:56:4"},{"expression":{"id":283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"2397:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":266,"id":284,"nodeType":"Return","src":"2390:12:4"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"2139:46:4","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":286,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nodeType":"FunctionDefinition","overrides":{"id":263,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:4"},"parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":286,"src":"2207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:4"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":286,"src":"2262:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:4"},"scope":1067,"src":"2190:219:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1369],"body":{"id":295,"nodeType":"Block","src":"2540:29:4","statements":[{"expression":{"id":293,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2557:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":292,"id":294,"nodeType":"Return","src":"2550:12:4"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"2415:51:4","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":296,"implemented":true,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","overrides":{"id":289,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:4"},"parameters":{"id":288,"nodeType":"ParameterList","parameters":[],"src":"2484:2:4"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":296,"src":"2525:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":290,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:4"},"scope":1067,"src":"2471:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1375],"body":{"id":305,"nodeType":"Block","src":"2704:31:4","statements":[{"expression":{"id":303,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":302,"id":304,"nodeType":"Return","src":"2714:14:4"}]},"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"2575:53:4","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":306,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","overrides":{"id":299,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:4"},"parameters":{"id":298,"nodeType":"ParameterList","parameters":[],"src":"2648:2:4"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":306,"src":"2689:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":300,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:4"},"scope":1067,"src":"2633:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1383],"body":{"id":344,"nodeType":"Block","src":"2889:188:4","statements":[{"expression":{"arguments":[{"id":316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"2914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"2899:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"ExpressionStatement","src":"2899:23:4"},{"assignments":[320],"declarations":[{"constant":false,"id":320,"mutability":"mutable","name":"baseURI","nodeType":"VariableDeclaration","scope":344,"src":"2933:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":319,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":323,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":321,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"2957:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:4"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":326,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"2990:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":324,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:4","typeDescriptions":{}}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:4","trueExpression":{"arguments":[{"arguments":[{"id":335,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"3036:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":336,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1877,"src":"3045:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":333,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":331,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:4","typeDescriptions":{}}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":314,"id":343,"nodeType":"Return","src":"2977:93:4"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"2741:55:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","overrides":{"id":311,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:4"},"parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":345,"src":"2819:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:4"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":345,"src":"2874:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":312,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:4"},"scope":1067,"src":"2801:276:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":353,"nodeType":"Block","src":"3385:26:4","statements":[{"expression":{"hexValue":"","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"3395:9:4"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"3083:231:4","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":354,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"3336:2:4"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":354,"src":"3370:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:4"},"scope":1067,"src":"3319:92:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1156],"body":{"id":396,"nodeType":"Block","src":"3538:336:4","statements":[{"assignments":[364],"declarations":[{"constant":false,"id":364,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":396,"src":"3548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":369,"initialValue":{"arguments":[{"id":367,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3579:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":365,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"3564:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"3564:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3605:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":372,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3611:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"ExpressionStatement","src":"3597:57:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":378,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3686:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":380,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3702:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":383,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"3728:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":384,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3735:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":382,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"3711:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"3665:170:4"},{"expression":{"arguments":[{"id":392,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3855:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":393,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":391,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"3846:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"3846:21:4"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"3417:46:4","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:4"},"parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":397,"src":"3485:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":397,"src":"3497:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:4"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"3538:0:4"},"scope":1067,"src":"3468:406:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1172],"body":{"id":414,"nodeType":"Block","src":"4020:82:4","statements":[{"expression":{"arguments":[{"id":407,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"4045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":406,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"4030:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"4030:23:4"},{"expression":{"baseExpression":{"id":410,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4071:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":412,"indexExpression":{"id":411,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"4087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":405,"id":413,"nodeType":"Return","src":"4064:31:4"}]},"documentation":{"id":398,"nodeType":"StructuredDocumentation","src":"3880:50:4","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":415,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nodeType":"FunctionDefinition","overrides":{"id":402,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:4"},"parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":415,"src":"3956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:4"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":415,"src":"4011:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:4"},"scope":1067,"src":"3935:167:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1164],"body":{"id":431,"nodeType":"Block","src":"4253:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":425,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4282:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":427,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4296:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":428,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"4306:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":424,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4263:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":430,"nodeType":"ExpressionStatement","src":"4263:52:4"}]},"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"4108:56:4","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":432,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","overrides":{"id":422,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:4"},"parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":432,"src":"4196:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":432,"src":"4214:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":419,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:4"},"returnParameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"4253:0:4"},"scope":1067,"src":"4169:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1182],"body":{"id":449,"nodeType":"Block","src":"4491:59:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":443,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4508:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":445,"indexExpression":{"id":444,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":447,"indexExpression":{"id":446,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4534:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":442,"id":448,"nodeType":"Return","src":"4501:42:4"}]},"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"4328:55:4","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","overrides":{"id":439,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:4"},"parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":450,"src":"4414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":450,"src":"4429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:4"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":450,"src":"4485:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":440,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:4"},"scope":1067,"src":"4388:162:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1148],"body":{"id":476,"nodeType":"Block","src":"4701:207:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4790:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4804:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":462,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"4771:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"4763:99:4"},{"expression":{"arguments":[{"id":471,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4883:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4889:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":470,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4873:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4873:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"4873:28:4"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4556:51:4","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":477,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","overrides":{"id":459,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:4"},"parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":477,"src":"4634:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":477,"src":"4648:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":477,"src":"4660:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:4"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"4701:0:4"},"scope":1067,"src":"4612:296:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1138],"body":{"id":495,"nodeType":"Block","src":"5067:56:4","statements":[{"expression":{"arguments":[{"id":489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5094:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":490,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"5100:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"5104:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":488,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[496,526],"referencedDeclaration":526,"src":"5077:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5077:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":494,"nodeType":"ExpressionStatement","src":"5077:39:4"}]},"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"4914:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":496,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","overrides":{"id":486,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:4"},"parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":496,"src":"5000:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":496,"src":"5014:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":484,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":496,"src":"5026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:4"},"returnParameters":{"id":487,"nodeType":"ParameterList","parameters":[],"src":"5067:0:4"},"scope":1067,"src":"4974:149:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1128],"body":{"id":525,"nodeType":"Block","src":"5301:164:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":511,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5338:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":513,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":510,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5319:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5319:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5311:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"ExpressionStatement","src":"5311:99:4"},{"expression":{"arguments":[{"id":519,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"5434:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"5440:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"5444:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5453:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":518,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"5420:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5420:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"5420:38:4"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"5129:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":526,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","overrides":{"id":507,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:4"},"parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":526,"src":"5215:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":498,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":526,"src":"5229:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":526,"src":"5241:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":526,"src":"5258:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":504,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:4"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[],"src":"5301:0:4"},"scope":1067,"src":"5189:276:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":554,"nodeType":"Block","src":"6428:165:4","statements":[{"expression":{"arguments":[{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6448:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":540,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6454:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":541,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":538,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"6438:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"6438:28:4"},{"expression":{"arguments":[{"arguments":[{"id":546,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6507:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":547,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6513:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":548,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6517:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":549,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"6526:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":545,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"6484:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6484:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:110:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"6476:110:4"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"5471:850:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":555,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":555,"src":"6349:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":555,"src":"6363:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":555,"src":"6375:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":555,"src":"6392:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":534,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:4"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"6428:0:4"},"scope":1067,"src":"6326:267:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":567,"nodeType":"Block","src":"6777:40:4","statements":[{"expression":{"baseExpression":{"id":563,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"6794:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":565,"indexExpression":{"id":564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6802:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":562,"id":566,"nodeType":"Return","src":"6787:23:4"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"6599:98:4","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":568,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nodeType":"FunctionDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":568,"src":"6720:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:4"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":568,"src":"6768:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:4"},"scope":1067,"src":"6702:115:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7191:55:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":577,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7217:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":576,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"7208:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7208:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:4","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":575,"id":584,"nodeType":"Return","src":"7201:38:4"}]},"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"6823:292:4","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nodeType":"FunctionDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":586,"src":"7137:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:4"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":574,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":586,"src":"7185:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":573,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:4"},"scope":1067,"src":"7120:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":619,"nodeType":"Block","src":"7503:162:4","statements":[{"assignments":[597],"declarations":[{"constant":false,"id":597,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":619,"src":"7513:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":602,"initialValue":{"arguments":[{"id":600,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":598,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7529:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"7529:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7570:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":604,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7581:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":607,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"7607:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7614:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":606,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"7590:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7590:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"7638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"7626:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7626:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":614,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"7650:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":595,"id":618,"nodeType":"Return","src":"7562:96:4"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"7252:147:4","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":620,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":620,"src":"7432:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":620,"src":"7449:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:4"},"returnParameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":620,"src":"7497:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":593,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:4"},"scope":1067,"src":"7404:261:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":634,"nodeType":"Block","src":"8060:43:4","statements":[{"expression":{"arguments":[{"id":629,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"8080:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"8084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":628,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[635,664],"referencedDeclaration":664,"src":"8070:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8070:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"8070:26:4"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"7671:319:4","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":635,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":635,"src":"8014:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":635,"src":"8026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:4"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"8060:0:4"},"scope":1067,"src":"7995:108:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":663,"nodeType":"Block","src":"8408:195:4","statements":[{"expression":{"arguments":[{"id":646,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"8424:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"8428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":645,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"8418:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8418:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"8418:18:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":652,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:4","typeDescriptions":{}}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8490:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":656,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"8502:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":657,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"8506:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":658,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8515:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":651,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"8467:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8467:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":650,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8446:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"8446:150:4"}]},"documentation":{"id":636,"nodeType":"StructuredDocumentation","src":"8109:210:4","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":664,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nodeType":"FunctionDefinition","parameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":664,"src":"8343:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":637,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":640,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":664,"src":"8355:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":639,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":642,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":664,"src":"8372:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":641,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:4"},"returnParameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"8408:0:4"},"scope":1067,"src":"8324:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"8986:859:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9004:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:4","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":672,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"ExpressionStatement","src":"8996:61:4"},{"expression":{"arguments":[{"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:4","subExpression":{"arguments":[{"id":684,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"9084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":683,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9076:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":682,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":689,"nodeType":"ExpressionStatement","src":"9067:58:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:4","typeDescriptions":{}}},"id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9157:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":695,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9169:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"9173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":690,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"9136:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9136:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"ExpressionStatement","src":"9136:48:4"},{"expression":{"arguments":[{"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:4","subExpression":{"arguments":[{"id":702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"9288:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9280:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9280:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9271:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"9271:58:4"},{"id":714,"nodeType":"UncheckedBlock","src":"9340:360:4","statements":[{"expression":{"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":708,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"9671:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":710,"indexExpression":{"id":709,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9681:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":713,"nodeType":"ExpressionStatement","src":"9671:18:4"}]},{"expression":{"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":715,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"9710:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":717,"indexExpression":{"id":716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"9718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":718,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9729:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":720,"nodeType":"ExpressionStatement","src":"9710:21:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":722,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:4","typeDescriptions":{}}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9756:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9768:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":727,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"9772:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9747:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9747:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":729,"nodeType":"EmitStatement","src":"9742:38:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:4","typeDescriptions":{}}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9811:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":667,"src":"9823:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"9827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":730,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9791:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"9791:47:4"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"8609:311:4","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":741,"src":"8940:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":741,"src":"8952:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":668,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:4"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"8986:0:4"},"scope":1067,"src":"8925:920:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"10220:713:4","statements":[{"assignments":[748],"declarations":[{"constant":false,"id":748,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":807,"src":"10230:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[{"id":751,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10261:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":749,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"10246:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"10246:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10246:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:4"},{"expression":{"arguments":[{"id":755,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"10301:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:4","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10308:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":760,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10320:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":754,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"10280:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10280:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"10280:51:4"},{"expression":{"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":764,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"10433:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":767,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":765,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"10441:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"10441:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":770,"nodeType":"ExpressionStatement","src":"10433:31:4"},{"expression":{"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:4","subExpression":{"baseExpression":{"id":771,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"10509:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":773,"indexExpression":{"id":772,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10525:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"ExpressionStatement","src":"10502:31:4"},{"id":782,"nodeType":"UncheckedBlock","src":"10544:237:4","statements":[{"expression":{"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":776,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"10749:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":778,"indexExpression":{"id":777,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"10759:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":781,"nodeType":"ExpressionStatement","src":"10749:21:4"}]},{"expression":{"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:4","subExpression":{"baseExpression":{"id":783,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"10797:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":785,"indexExpression":{"id":784,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":787,"nodeType":"ExpressionStatement","src":"10790:23:4"},{"eventCall":{"arguments":[{"id":789,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"10838:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:4","typeDescriptions":{}}},"id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10845:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":794,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10857:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"10829:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10829:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"EmitStatement","src":"10824:41:4"},{"expression":{"arguments":[{"id":798,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"10896:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:4","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"10915:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":797,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"10876:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10876:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"10876:50:4"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"9851:315:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","parameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":808,"src":"10186:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:4"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"10220:0:4"},"scope":1067,"src":"10171:762:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"11336:1124:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":821,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"11369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":819,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"11354:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"11354:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11354:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":823,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11381:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":818,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":827,"nodeType":"ExpressionStatement","src":"11346:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"11445:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:4","typeDescriptions":{}}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11451:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11437:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":837,"nodeType":"ExpressionStatement","src":"11437:65:4"},{"expression":{"arguments":[{"id":839,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11534:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"11540:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"11544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":838,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"11513:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11513:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"ExpressionStatement","src":"11513:42:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"11670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":846,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"11655:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"11655:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11655:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"11682:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":845,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"ExpressionStatement","src":"11647:81:4"},{"expression":{"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:4","subExpression":{"baseExpression":{"id":855,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"11797:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":857,"indexExpression":{"id":856,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"11813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"ExpressionStatement","src":"11790:31:4"},{"id":872,"nodeType":"UncheckedBlock","src":"11832:496:4","statements":[{"expression":{"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":860,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"12265:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":862,"indexExpression":{"id":861,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"12275:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":865,"nodeType":"ExpressionStatement","src":"12265:20:4"},{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":866,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"12299:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":868,"indexExpression":{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"12309:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":871,"nodeType":"ExpressionStatement","src":"12299:18:4"}]},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":873,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"12337:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":875,"indexExpression":{"id":874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"12345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"12356:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":878,"nodeType":"ExpressionStatement","src":"12337:21:4"},{"eventCall":{"arguments":[{"id":880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"12383:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"12389:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":882,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"12393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":879,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12374:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12374:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"EmitStatement","src":"12369:32:4"},{"expression":{"arguments":[{"id":886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"12432:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"12438:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":888,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"12442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":885,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12412:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12412:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"12412:41:4"}]},"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"10939:313:4","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":893,"src":"11276:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":893,"src":"11290:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":893,"src":"11302:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:4"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[],"src":"11336:0:4"},"scope":1067,"src":"11257:1203:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"12636:107:4","statements":[{"expression":{"id":905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":901,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"12646:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":903,"indexExpression":{"id":902,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"12662:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":904,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"12673:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":906,"nodeType":"ExpressionStatement","src":"12646:29:4"},{"eventCall":{"arguments":[{"arguments":[{"id":910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"12714:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":908,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"12699:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1067_$","typeString":"type(contract ERC721)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":286,"src":"12699:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12699:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"12724:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"12728:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":907,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"12690:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12690:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"EmitStatement","src":"12685:51:4"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"12466:101:4","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":917,"src":"12590:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":917,"src":"12602:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"12636:0:4"},"scope":1067,"src":"12572:171:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"12972:184:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"12990:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":929,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"12999:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12982:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"12982:55:4"},{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":934,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"13047:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":937,"indexExpression":{"id":935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"13066:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":938,"indexExpression":{"id":936,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"13073:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":939,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"13085:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"ExpressionStatement","src":"13047:46:4"},{"eventCall":{"arguments":[{"id":943,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"13123:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"13130:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"13140:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":942,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"13108:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13108:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"EmitStatement","src":"13103:46:4"}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"12749:125:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":949,"src":"12907:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":949,"src":"12922:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":949,"src":"12940:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":923,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:4"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"12972:0:4"},"scope":1067,"src":"12879:277:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":962,"nodeType":"Block","src":"13303:70:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":957,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"13329:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":956,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"13321:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13313:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"13313:53:4"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"13162:73:4","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":963,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":963,"src":"13264:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:4"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"13303:0:4"},"scope":1067,"src":"13240:133:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1024,"nodeType":"Block","src":"14080:676:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":977,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"14094:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1402,"src":"14094:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14094:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1022,"nodeType":"Block","src":"14714:36:4","statements":[{"expression":{"hexValue":"74727565","id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":976,"id":1021,"nodeType":"Return","src":"14728:11:4"}]},"id":1023,"nodeType":"IfStatement","src":"14090:660:4","trueBody":{"id":1019,"nodeType":"Block","src":"14111:597:4","statements":[{"clauses":[{"block":{"id":999,"nodeType":"Block","src":"14225:91:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":993,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"14250:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":994,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"14260:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1201_$","typeString":"type(contract IERC721Receiver)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1200,"src":"14260:32:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14260:41:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":976,"id":998,"nodeType":"Return","src":"14243:58:4"}]},"errorName":"","id":1000,"nodeType":"TryCatchClause","parameters":{"id":992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"retval","nodeType":"VariableDeclaration","scope":1000,"src":"14210:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":990,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:4"},"src":"14201:115:4"},{"block":{"id":1016,"nodeType":"Block","src":"14345:353:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1004,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"14367:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14367:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1014,"nodeType":"Block","src":"14494:190:4","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:4","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:4","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:4"},"nodeType":"YulFunctionCall","src":"14613:15:4"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:4"},"nodeType":"YulFunctionCall","src":"14630:13:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:4"},"nodeType":"YulFunctionCall","src":"14606:38:4"},"nodeType":"YulExpressionStatement","src":"14606:38:4"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1002,"isOffset":false,"isSlot":false,"src":"14621:6:4","valueSize":1},{"declaration":1002,"isOffset":false,"isSlot":false,"src":"14636:6:4","valueSize":1}],"id":1013,"nodeType":"InlineAssembly","src":"14571:95:4"}]},"id":1015,"nodeType":"IfStatement","src":"14363:321:4","trueBody":{"id":1012,"nodeType":"Block","src":"14387:101:4","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1008,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14409:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1011,"nodeType":"ExpressionStatement","src":"14409:60:4"}]}}]},"errorName":"","id":1017,"nodeType":"TryCatchClause","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":1017,"src":"14324:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1001,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:4"},"src":"14317:381:4"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":984,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"14166:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14166:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":986,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"14180:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"14186:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":988,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"14195:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":981,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"14145:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"14129:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1201_$","typeString":"type(contract IERC721Receiver)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1201","typeString":"contract IERC721Receiver"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1200,"src":"14129:36:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:71:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1018,"nodeType":"TryStatement","src":"14125:573:4"}]}}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"13379:541:4","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1025,"src":"13966:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1025,"src":"13988:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":967,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1025,"src":"14008:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1025,"src":"14033:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":971,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:4"},"returnParameters":{"id":976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":975,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1025,"src":"14074:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":974,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:4"},"scope":1067,"src":"13925:831:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1037,"nodeType":"Block","src":"15586:2:4","statements":[]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"14762:705:4","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1038,"src":"15502:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1038,"src":"15516:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"firstTokenId","nodeType":"VariableDeclaration","scope":1038,"src":"15528:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"batchSize","nodeType":"VariableDeclaration","scope":1038,"src":"15550:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:4"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[],"src":"15586:0:4"},"scope":1067,"src":"15472:116:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"16407:2:4","statements":[]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"15594:695:4","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1051,"src":"16323:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1051,"src":"16337:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1042,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"firstTokenId","nodeType":"VariableDeclaration","scope":1051,"src":"16349:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1044,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"batchSize","nodeType":"VariableDeclaration","scope":1051,"src":"16371:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:4"},"returnParameters":{"id":1049,"nodeType":"ParameterList","parameters":[],"src":"16407:0:4"},"scope":1067,"src":"16294:115:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1065,"nodeType":"Block","src":"16958:45:4","statements":[{"expression":{"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1059,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"16968:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1061,"indexExpression":{"id":1060,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"16978:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1062,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"16990:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1064,"nodeType":"ExpressionStatement","src":"16968:28:4"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"16415:409:4","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1066,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nodeType":"FunctionDefinition","parameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1066,"src":"16916:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1066,"src":"16933:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:4"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[],"src":"16958:0:4"},"scope":1067,"src":"16882:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1068,"src":"628:16377:4"}],"src":"107:16899:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2083],"IERC721":[1183]},"id":1184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1069,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1070,"nodeType":"ImportDirective","scope":1184,"sourceUnit":2084,"src":"133:47:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1072,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2083,"src":"271:7:5"},"id":1073,"nodeType":"InheritanceSpecifier","src":"271:7:5"}],"contractDependencies":[2083],"contractKind":"interface","documentation":{"id":1071,"nodeType":"StructuredDocumentation","src":"182:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1183,"linearizedBaseContracts":[1183,2083],"name":"IERC721","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"285:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1082,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1082,"src":"393:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1082,"src":"415:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1077,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1080,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1082,"src":"435:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:5"},"src":"378:82:5"},{"anonymous":false,"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"466:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1091,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1091,"src":"580:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"indexed":true,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1091,"src":"603:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1086,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1089,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1091,"src":"629:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:5"},"src":"565:89:5"},{"anonymous":false,"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"660:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1100,"name":"ApprovalForAll","nodeType":"EventDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1100,"src":"803:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":true,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1100,"src":"826:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"indexed":false,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1100,"src":"852:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1097,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:5"},"src":"782:85:5"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"873:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1108,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1108,"src":"973:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"balance","nodeType":"VariableDeclaration","scope":1108,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:5"},"scope":1183,"src":"954:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"1034:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1116,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1116,"src":"1187:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:5"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1116,"src":"1227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:5"},"scope":1183,"src":"1170:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"1248:556:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1128,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1128,"src":"1835:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1128,"src":"1849:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1128,"src":"1861:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1128,"src":"1878:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1124,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:5"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"1907:0:5"},"scope":1183,"src":"1809:99:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"1914:687:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1138,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1138,"src":"2632:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1138,"src":"2646:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1138,"src":"2658:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:5"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"2683:0:5"},"scope":1183,"src":"2606:78:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"2690:732:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1148,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1148,"src":"3449:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1148,"src":"3463:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1148,"src":"3475:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:5"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"3500:0:5"},"scope":1183,"src":"3427:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"3507:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1156,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":1156,"src":"3981:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1156,"src":"3993:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1152,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:5"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"4018:0:5"},"scope":1183,"src":"3964:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1157,"nodeType":"StructuredDocumentation","src":"4025:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1164,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":1162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1164,"src":"4366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1158,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":1164,"src":"4384:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1160,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:5"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[],"src":"4407:0:5"},"scope":1183,"src":"4339:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"4414:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1172,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nodeType":"FunctionDefinition","parameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1172,"src":"4579:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:5"},"returnParameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1172,"src":"4619:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:5"},"scope":1183,"src":"4558:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"4643:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1182,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1182,"src":"4812:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1182,"src":"4827:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:5"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1182,"src":"4868:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1179,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:5"},"scope":1183,"src":"4786:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1184,"src":"250:4626:5"}],"src":"108:4769:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1201]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1185,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1201,"linearizedBaseContracts":[1201],"name":"IERC721Receiver","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1200,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nodeType":"FunctionDefinition","parameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":1200,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":1200,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1200,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1200,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1194,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1200,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1197,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":1201,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1202,"src":"294:692:6"}],"src":"116:871:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1714],"Context":[1744],"ERC165":[2071],"ERC721":[1067],"ERC721URIStorage":[1357],"IERC165":[2083],"IERC4906":[137],"IERC721":[1183],"IERC721Metadata":[1384],"IERC721Receiver":[1201],"Math":[2949],"SignedMath":[3054],"Strings":[2047]},"id":1358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1204,"nodeType":"ImportDirective","scope":1358,"sourceUnit":1068,"src":"153:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1205,"nodeType":"ImportDirective","scope":1358,"sourceUnit":138,"src":"177:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1207,"name":"IERC4906","nodeType":"IdentifierPath","referencedDeclaration":137,"src":"329:8:7"},"id":1208,"nodeType":"InheritanceSpecifier","src":"329:8:7"},{"baseName":{"id":1209,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"339:6:7"},"id":1210,"nodeType":"InheritanceSpecifier","src":"339:6:7"}],"contractDependencies":[137,1067,1183,1384,1744,2071,2083],"contractKind":"contract","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"221:69:7","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1357,"linearizedBaseContracts":[1357,1067,1384,137,1183,2071,2083,1744],"name":"ERC721URIStorage","nodeType":"ContractDefinition","nodes":[{"id":1213,"libraryName":{"id":1211,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"358:7:7"},"nodeType":"UsingForDirective","src":"352:26:7","typeName":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1217,"mutability":"mutable","name":"_tokenURIs","nodeType":"VariableDeclaration","scope":1357,"src":"423:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1216,"keyType":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1215,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[234,2082],"body":{"id":1240,"nodeType":"Block","src":"643:97:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1228,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"660:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:7","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1229,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:7","typeDescriptions":{}}},"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"675:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1236,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"721:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1234,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1357_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":234,"src":"697:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1227,"id":1239,"nodeType":"Return","src":"653:80:7"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"475:55:7","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":1224,"nodeType":"OverrideSpecifier","overrides":[{"id":1222,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"611:6:7"},{"id":1223,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2083,"src":"619:7:7"}],"src":"602:25:7"},"parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":1241,"src":"562:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1219,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:7"},"returnParameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1241,"src":"637:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1225,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:7"},"scope":1357,"src":"535:205:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":1299,"nodeType":"Block","src":"894:520:7","statements":[{"expression":{"arguments":[{"id":1251,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"919:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1250,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"904:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"ExpressionStatement","src":"904:23:7"},{"assignments":[1255],"declarations":[{"constant":false,"id":1255,"mutability":"mutable","name":"_tokenURI","nodeType":"VariableDeclaration","scope":1299,"src":"938:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1254,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1259,"initialValue":{"baseExpression":{"id":1256,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"964:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1258,"indexExpression":{"id":1257,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"975:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:7"},{"assignments":[1261],"declarations":[{"constant":false,"id":1261,"mutability":"mutable","name":"base","nodeType":"VariableDeclaration","scope":1299,"src":"993:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1264,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1262,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"1014:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1267,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"1103:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1265,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:7","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1097:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1097:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1275,"nodeType":"IfStatement","src":"1093:70:7","trueBody":{"id":1274,"nodeType":"Block","src":"1122:41:7","statements":[{"expression":{"id":1272,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1143:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1249,"id":1273,"nodeType":"Return","src":"1136:16:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1278,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1271:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1276,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:7","typeDescriptions":{}}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1265:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1265:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1293,"nodeType":"IfStatement","src":"1261:106:7","trueBody":{"id":1292,"nodeType":"Block","src":"1294:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1287,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"1339:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1288,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1345:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1285,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1322:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1283,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:7","typeDescriptions":{}}},"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1249,"id":1291,"nodeType":"Return","src":"1308:48:7"}]}},{"expression":{"arguments":[{"id":1296,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"1399:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1294,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1357_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":345,"src":"1384:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1249,"id":1298,"nodeType":"Return","src":"1377:30:7"}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"746:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","overrides":{"id":1246,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:7"},"parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1300,"src":"824:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:7"},"returnParameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1300,"src":"879:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:7"},"scope":1357,"src":"806:608:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1325,"nodeType":"Block","src":"1680:172:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1310,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1706:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1309,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1698:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1698:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1314,"nodeType":"ExpressionStatement","src":"1690:75:7"},{"expression":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1315,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1775:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1317,"indexExpression":{"id":1316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1786:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1318,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1797:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1320,"nodeType":"ExpressionStatement","src":"1775:31:7"},{"eventCall":{"arguments":[{"id":1322,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"1837:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1321,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"1822:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1822:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"EmitStatement","src":"1817:28:7"}]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"1420:174:7","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1326,"src":"1621:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"_tokenURI","nodeType":"VariableDeclaration","scope":1326,"src":"1638:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1304,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:7"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[],"src":"1680:0:7"},"scope":1357,"src":"1599:253:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[808],"body":{"id":1355,"nodeType":"Block","src":"2128:142:7","statements":[{"expression":{"arguments":[{"id":1336,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1333,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1357_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":808,"src":"2138:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"2138:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1341,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2179:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1343,"indexExpression":{"id":1342,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2190:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1339,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:7","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2173:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1354,"nodeType":"IfStatement","src":"2169:95:7","trueBody":{"id":1353,"nodeType":"Block","src":"2213:51:7","statements":[{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:7","subExpression":{"baseExpression":{"id":1348,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2234:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1350,"indexExpression":{"id":1349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1352,"nodeType":"ExpressionStatement","src":"2227:26:7"}]}}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"1858:207:7","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1356,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nodeType":"FunctionDefinition","overrides":{"id":1331,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:7"},"parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1356,"src":"2085:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:7"},"returnParameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"2128:0:7"},"scope":1357,"src":"2070:200:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1358,"src":"291:1981:7"}],"src":"128:2145:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2083],"IERC721":[1183],"IERC721Metadata":[1384]},"id":1385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1359,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1360,"nodeType":"ImportDirective","scope":1385,"sourceUnit":1184,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1362,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1183,"src":"326:7:8"},"id":1363,"nodeType":"InheritanceSpecifier","src":"326:7:8"}],"contractDependencies":[1183,2083],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"163:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1384,"linearizedBaseContracts":[1384,1183,2083],"name":"IERC721Metadata","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"340:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1369,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"416:2:8"},"returnParameters":{"id":1368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1367,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1369,"src":"442:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1366,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:8"},"scope":1384,"src":"403:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"463:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"543:2:8"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1375,"src":"569:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1372,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:8"},"scope":1384,"src":"528:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"590:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1383,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","parameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":1383,"src":"703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:8"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1383,"src":"743:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1380,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:8"},"scope":1384,"src":"685:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1385,"src":"297:463:8"}],"src":"112:649:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1714]},"id":1715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1386,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1714,"linearizedBaseContracts":[1714],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":1401,"nodeType":"Block","src":"1478:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1395,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1702:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1394,"id":1400,"nodeType":"Return","src":"1695:30:9"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"216:1191:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":1402,"src":"1432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:9"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1402,"src":"1472:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1392,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:9"},"scope":1714,"src":"1412:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1435,"nodeType":"Block","src":"2718:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1413,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:9","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1416,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2761:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1410,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1420,"nodeType":"ExpressionStatement","src":"2728:73:9"},{"assignments":[1422,null],"declarations":[{"constant":false,"id":1422,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1435,"src":"2813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1421,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1429,"initialValue":{"arguments":[{"hexValue":"","id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1423,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"2831:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1425,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2853:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:9"},{"expression":{"arguments":[{"id":1431,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"2882:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1434,"nodeType":"ExpressionStatement","src":"2874:78:9"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"1738:904:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1436,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1405,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1436,"src":"2666:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1436,"src":"2693:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:9"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"2718:0:9"},"scope":1714,"src":"2647:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1453,"nodeType":"Block","src":"3790:96:9","statements":[{"expression":{"arguments":[{"id":1447,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"3829:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1448,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"3837:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1446,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1494,1538],"referencedDeclaration":1538,"src":"3807:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1445,"id":1452,"nodeType":"Return","src":"3800:79:9"}]},"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"2965:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1454,"src":"3723:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1454,"src":"3739:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1440,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:9"},"returnParameters":{"id":1445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1454,"src":"3776:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1443,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:9"},"scope":1714,"src":"3701:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"4255:76:9","statements":[{"expression":{"arguments":[{"id":1467,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1468,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1470,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4311:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1466,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1494,1538],"referencedDeclaration":1538,"src":"4272:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1465,"id":1472,"nodeType":"Return","src":"4265:59:9"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"3892:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1474,"src":"4139:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1474,"src":"4163:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1458,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1461,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1474,"src":"4190:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1460,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:9"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1474,"src":"4241:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1463,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:9"},"scope":1714,"src":"4108:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1493,"nodeType":"Block","src":"4806:111:9","statements":[{"expression":{"arguments":[{"id":1487,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"4845:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"4853:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"4859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1486,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1494,1538],"referencedDeclaration":1538,"src":"4823:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1485,"id":1492,"nodeType":"Return","src":"4816:94:9"}]},"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"4337:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1494,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1494,"src":"4724:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1494,"src":"4740:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1478,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1494,"src":"4759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:9"},"returnParameters":{"id":1485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1494,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1483,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":1714,"src":"4693:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"5344:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1511,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:9","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"5354:81:9"},{"assignments":[1520,1522],"declarations":[{"constant":false,"id":1520,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1537,"src":"5446:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1519,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1537,"src":"5460:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1529,"initialValue":{"arguments":[{"id":1527,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1523,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"5487:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"5506:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:9"},{"expression":{"arguments":[{"id":1531,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"5562:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1532,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5570:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1533,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"5579:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1534,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"5591:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1530,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"5535:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1507,"id":1536,"nodeType":"Return","src":"5528:76:9"}]},"documentation":{"id":1495,"nodeType":"StructuredDocumentation","src":"4923:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1538,"src":"5205:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1496,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1538,"src":"5229:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1498,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1538,"src":"5256:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1538,"src":"5279:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:9"},"returnParameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1538,"src":"5330:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:9"},"scope":1714,"src":"5165:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"5888:97:9","statements":[{"expression":{"arguments":[{"id":1549,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"5924:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1550,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"5932:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1548,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1555,1584],"referencedDeclaration":1584,"src":"5905:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1547,"id":1553,"nodeType":"Return","src":"5898:80:9"}]},"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"5617:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1555,"src":"5816:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1540,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1555,"src":"5832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1542,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:9"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1546,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1555,"src":"5874:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1545,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:9"},"scope":1714,"src":"5788:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1583,"nodeType":"Block","src":"6327:168:9","statements":[{"assignments":[1568,1570],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1583,"src":"6338:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1567,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1583,"src":"6352:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1569,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1575,"initialValue":{"arguments":[{"id":1573,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"6397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1571,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6379:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:9"},{"expression":{"arguments":[{"id":1577,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"6446:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"6454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1579,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6463:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1580,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"6475:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1576,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"6419:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1566,"id":1582,"nodeType":"Return","src":"6412:76:9"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"5991:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1584,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1584,"src":"6206:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1584,"src":"6230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1559,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1584,"src":"6257:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1561,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:9"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1584,"src":"6313:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1564,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:9"},"scope":1714,"src":"6169:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1600,"nodeType":"Block","src":"6771:101:9","statements":[{"expression":{"arguments":[{"id":1595,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"6809:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"6817:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1594,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1601,1630],"referencedDeclaration":1630,"src":"6788:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1593,"id":1599,"nodeType":"Return","src":"6781:84:9"}]},"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"6501:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1601,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1601,"src":"6704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1601,"src":"6720:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:9"},"returnParameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1601,"src":"6757:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1591,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:9"},"scope":1714,"src":"6674:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"7213:170:9","statements":[{"assignments":[1614,1616],"declarations":[{"constant":false,"id":1614,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1629,"src":"7224:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1613,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1629,"src":"7238:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1615,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1621,"initialValue":{"arguments":[{"id":1619,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"7285:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1617,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"7265:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:9"},{"expression":{"arguments":[{"id":1623,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"7334:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1624,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1625,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"7351:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1626,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7363:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1622,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"7307:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1612,"id":1628,"nodeType":"Return","src":"7300:76:9"}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"6878:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1630,"src":"7097:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1630,"src":"7121:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1605,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1608,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1630,"src":"7148:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1607,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:9"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1630,"src":"7199:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1610,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:9"},"scope":1714,"src":"7058:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1668,"nodeType":"Block","src":"7865:434:9","statements":[{"condition":{"id":1644,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"7879:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1666,"nodeType":"Block","src":"8235:58:9","statements":[{"expression":{"arguments":[{"id":1662,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"8257:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1663,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"8269:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1661,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"8249:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"8249:33:9"}]},"id":1667,"nodeType":"IfStatement","src":"7875:418:9","trueBody":{"id":1660,"nodeType":"Block","src":"7888:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1645,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"7906:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1657,"nodeType":"IfStatement","src":"7902:286:9","trueBody":{"id":1656,"nodeType":"Block","src":"7930:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1651,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1650,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"8121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1649,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"8113:60:9"}]}},{"expression":{"id":1658,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"8208:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1643,"id":1659,"nodeType":"Return","src":"8201:17:9"}]}}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"7389:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1669,"src":"7716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1669,"src":"7740:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1634,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1669,"src":"7762:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1636,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1669,"src":"7795:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1638,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:9"},"returnParameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1669,"src":"7851:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1641,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:9"},"scope":1714,"src":"7671:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"8680:135:9","statements":[{"condition":{"id":1681,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"8694:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1690,"nodeType":"Block","src":"8751:58:9","statements":[{"expression":{"arguments":[{"id":1686,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"8773:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1687,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"8785:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1685,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"8765:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"ExpressionStatement","src":"8765:33:9"}]},"id":1691,"nodeType":"IfStatement","src":"8690:119:9","trueBody":{"id":1684,"nodeType":"Block","src":"8703:42:9","statements":[{"expression":{"id":1682,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"8724:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1680,"id":1683,"nodeType":"Return","src":"8717:17:9"}]}}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"8305:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1693,"src":"8555:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1671,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1674,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1693,"src":"8577:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1693,"src":"8610:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1675,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:9"},"returnParameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1693,"src":"8666:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1678,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:9"},"scope":1714,"src":"8520:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"8904:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1700,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"8980:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1710,"nodeType":"Block","src":"9310:45:9","statements":[{"expression":{"arguments":[{"id":1707,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"9331:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1706,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"9324:20:9"}]},"id":1711,"nodeType":"IfStatement","src":"8976:379:9","trueBody":{"id":1705,"nodeType":"Block","src":"9003:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:9"},"nodeType":"YulFunctionCall","src":"9202:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:9"},"nodeType":"YulFunctionCall","src":"9243:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:9"},"nodeType":"YulFunctionCall","src":"9236:44:9"},"nodeType":"YulExpressionStatement","src":"9236:44:9"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1695,"isOffset":false,"isSlot":false,"src":"9208:10:9","valueSize":1},{"declaration":1695,"isOffset":false,"isSlot":false,"src":"9251:10:9","valueSize":1}],"id":1704,"nodeType":"InlineAssembly","src":"9152:142:9"}]}}]},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1713,"src":"8838:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1694,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1713,"src":"8863:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1696,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:9"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[],"src":"8904:0:9"},"scope":1714,"src":"8821:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1715,"src":"194:9169:9"}],"src":"101:9263:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1744]},"id":1745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1716,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"126:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1744,"linearizedBaseContracts":[1744],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":1725,"nodeType":"Block","src":"717:34:10","statements":[{"expression":{"expression":{"id":1722,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"734:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1721,"id":1724,"nodeType":"Return","src":"727:17:10"}]},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"674:2:10"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1726,"src":"708:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:10"},"scope":1744,"src":"655:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"824:32:10","statements":[{"expression":{"expression":{"id":1731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"841:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1730,"id":1733,"nodeType":"Return","src":"834:15:10"}]},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[],"src":"774:2:10"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1735,"src":"808:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1728,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:10"},"scope":1744,"src":"757:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"934:25:10","statements":[{"expression":{"hexValue":"30","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1739,"id":1741,"nodeType":"Return","src":"944:8:10"}]},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"891:2:10"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1743,"src":"925:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:10"},"scope":1744,"src":"862:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1745,"src":"623:338:10"}],"src":"101:861:10"},"id":10},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1818]},"id":1819,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1746,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"112:311:11","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1818,"linearizedBaseContracts":[1818],"name":"Counters","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1750,"members":[{"constant":false,"id":1749,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","scope":1750,"src":"786:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nodeType":"StructDefinition","scope":1818,"src":"447:374:11","visibility":"public"},{"body":{"id":1761,"nodeType":"Block","src":"901:38:11","statements":[{"expression":{"expression":{"id":1758,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1759,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"918:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1757,"id":1760,"nodeType":"Return","src":"911:21:11"}]},"id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"current","nodeType":"FunctionDefinition","parameters":{"id":1754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1753,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":1762,"src":"844:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1752,"nodeType":"UserDefinedTypeName","pathNode":{"id":1751,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1750,"src":"844:7:11"},"referencedDeclaration":1750,"src":"844:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:11"},"returnParameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1762,"src":"892:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:11"},"scope":1818,"src":"827:112:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1775,"nodeType":"Block","src":"998:70:11","statements":[{"id":1774,"nodeType":"UncheckedBlock","src":"1008:54:11","statements":[{"expression":{"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1768,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"1032:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"1032:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1773,"nodeType":"ExpressionStatement","src":"1032:19:11"}]}]},"id":1776,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":1776,"src":"964:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1764,"nodeType":"UserDefinedTypeName","pathNode":{"id":1763,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1750,"src":"964:7:11"},"referencedDeclaration":1750,"src":"964:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:11"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"998:0:11"},"scope":1818,"src":"945:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1803,"nodeType":"Block","src":"1127:176:11","statements":[{"assignments":[1783],"declarations":[{"constant":false,"id":1783,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1803,"src":"1137:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1786,"initialValue":{"expression":{"id":1784,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1153:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"1153:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"1185:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"1177:49:11"},{"id":1802,"nodeType":"UncheckedBlock","src":"1236:61:11","statements":[{"expression":{"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1794,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"1260:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"1260:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"1277:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1801,"nodeType":"ExpressionStatement","src":"1260:26:11"}]}]},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":1804,"src":"1093:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1750,"src":"1093:7:11"},"referencedDeclaration":1750,"src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:11"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"1127:0:11"},"scope":1818,"src":"1074:229:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1816,"nodeType":"Block","src":"1358:35:11","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1810,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"1368:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"1368:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"1368:18:11"}]},"id":1817,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"counter","nodeType":"VariableDeclaration","scope":1817,"src":"1324:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1806,"nodeType":"UserDefinedTypeName","pathNode":{"id":1805,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1750,"src":"1324:7:11"},"referencedDeclaration":1750,"src":"1324:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:11"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"1358:0:11"},"scope":1818,"src":"1309:84:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1819,"src":"424:971:11"}],"src":"87:1309:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2949],"SignedMath":[3054],"Strings":[2047]},"id":2048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1820,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1821,"nodeType":"ImportDirective","scope":2048,"sourceUnit":2950,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1822,"nodeType":"ImportDirective","scope":2048,"sourceUnit":3055,"src":"152:31:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"185:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":2047,"linearizedBaseContracts":[2047],"name":"Strings","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1826,"mutability":"constant","name":"_SYMBOLS","nodeType":"VariableDeclaration","scope":2047,"src":"242:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1824,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1829,"mutability":"constant","name":"_ADDRESS_LENGTH","nodeType":"VariableDeclaration","scope":2047,"src":"302:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1827,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1876,"nodeType":"Block","src":"518:625:12","statements":[{"id":1875,"nodeType":"UncheckedBlock","src":"528:609:12","statements":[{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":1875,"src":"552:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"580:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1839,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"569:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2949_$","typeString":"type(library Math)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2786,"src":"569:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:12"},{"assignments":[1847],"declarations":[{"constant":false,"id":1847,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":1875,"src":"604:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1846,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1852,"initialValue":{"arguments":[{"id":1850,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"638:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1848,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:12"},{"assignments":[1854],"declarations":[{"constant":false,"id":1854,"mutability":"mutable","name":"ptr","nodeType":"VariableDeclaration","scope":1875,"src":"659:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"nodeType":"VariableDeclarationStatement","src":"659:11:12"},{"AST":{"nodeType":"YulBlock","src":"740:67:12","statements":[{"nodeType":"YulAssignment","src":"758:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:12"},"nodeType":"YulFunctionCall","src":"777:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:12"},"nodeType":"YulFunctionCall","src":"765:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:12"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1847,"isOffset":false,"isSlot":false,"src":"769:6:12","valueSize":1},{"declaration":1838,"isOffset":false,"isSlot":false,"src":"785:6:12","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"758:3:12","valueSize":1}],"id":1856,"nodeType":"InlineAssembly","src":"731:76:12"},{"body":{"id":1871,"nodeType":"Block","src":"833:267:12","statements":[{"expression":{"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:12","subExpression":{"id":1858,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1860,"nodeType":"ExpressionStatement","src":"851:5:12"},{"AST":{"nodeType":"YulBlock","src":"934:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:12"},"nodeType":"YulFunctionCall","src":"974:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:12"},"nodeType":"YulFunctionCall","src":"969:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:12"},"nodeType":"YulFunctionCall","src":"956:44:12"},"nodeType":"YulExpressionStatement","src":"956:44:12"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1826,"isOffset":false,"isSlot":false,"src":"990:8:12","valueSize":1},{"declaration":1854,"isOffset":false,"isSlot":false,"src":"964:3:12","valueSize":1},{"declaration":1832,"isOffset":false,"isSlot":false,"src":"978:5:12","valueSize":1}],"id":1861,"nodeType":"InlineAssembly","src":"925:93:12"},{"expression":{"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"1035:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1865,"nodeType":"ExpressionStatement","src":"1035:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"1068:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"IfStatement","src":"1064:21:12","trueBody":{"id":1869,"nodeType":"Break","src":"1080:5:12"}}]},"condition":{"hexValue":"74727565","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1872,"nodeType":"WhileStatement","src":"820:280:12"},{"expression":{"id":1873,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"1120:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1836,"id":1874,"nodeType":"Return","src":"1113:13:12"}]}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"352:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1877,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1877,"src":"465:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:12"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1877,"src":"503:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1834,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:12"},"scope":2047,"src":"447:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1904,"nodeType":"Block","src":"1313:103:12","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1354:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:12","trueExpression":{"hexValue":"2d","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1400:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1896,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1385:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3054_$","typeString":"type(library SignedMath)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"1385:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1895,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1877,1905],"referencedDeclaration":1877,"src":"1376:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1887,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:12","typeDescriptions":{}}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1884,"id":1903,"nodeType":"Return","src":"1323:86:12"}]},"documentation":{"id":1878,"nodeType":"StructuredDocumentation","src":"1149:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1905,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1905,"src":"1261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1879,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:12"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1905,"src":"1298:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1882,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:12"},"scope":2047,"src":"1243:173:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"1595:100:12","statements":[{"id":1923,"nodeType":"UncheckedBlock","src":"1605:84:12","statements":[{"expression":{"arguments":[{"id":1914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1648:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"1667:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1915,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"1655:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2949_$","typeString":"type(library Math)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2909,"src":"1655:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1913,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1925,2001,2021],"referencedDeclaration":2001,"src":"1636:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1912,"id":1922,"nodeType":"Return","src":"1629:49:12"}]}]},"documentation":{"id":1906,"nodeType":"StructuredDocumentation","src":"1422:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":1909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1908,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1925,"src":"1542:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:12"},"returnParameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1911,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1925,"src":"1580:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:12"},"scope":2047,"src":"1521:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"1908:347:12","statements":[{"assignments":[1936],"declarations":[{"constant":false,"id":1936,"mutability":"mutable","name":"buffer","nodeType":"VariableDeclaration","scope":2000,"src":"1918:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1945,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1940,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1954:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1937,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:12"},{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1946,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1975:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1948,"indexExpression":{"hexValue":"30","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1951,"nodeType":"ExpressionStatement","src":"1975:15:12"},{"expression":{"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1952,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2000:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1954,"indexExpression":{"hexValue":"31","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1957,"nodeType":"ExpressionStatement","src":"2000:15:12"},{"body":{"id":1986,"nodeType":"Block","src":"2070:83:12","statements":[{"expression":{"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1972,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2084:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1974,"indexExpression":{"id":1973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2091:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1975,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2096:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1979,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2105:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1981,"nodeType":"ExpressionStatement","src":"2084:33:12"},{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"nodeType":"ExpressionStatement","src":"2131:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2058:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1987,"initializationExpression":{"assignments":[1959],"declarations":[{"constant":false,"id":1959,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":1987,"src":"2030:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1958,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1965,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1961,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"2046:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:12"},"loopExpression":{"expression":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:12","subExpression":{"id":1969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"2067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1971,"nodeType":"ExpressionStatement","src":"2065:3:12"},"nodeType":"ForStatement","src":"2025:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"2170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1988,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"ExpressionStatement","src":"2162:55:12"},{"expression":{"arguments":[{"id":1997,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"2241:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1995,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:12","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1934,"id":1999,"nodeType":"Return","src":"2227:21:12"}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"1701:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":1931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2001,"src":"1839:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1930,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":2001,"src":"1854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":1934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1933,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2001,"src":"1893:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1932,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:12"},"scope":2047,"src":"1818:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2020,"nodeType":"Block","src":"2480:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2014,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"2525:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2012,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:12","typeDescriptions":{}}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2017,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2533:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2009,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1925,2001,2021],"referencedDeclaration":2001,"src":"2497:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2008,"id":2019,"nodeType":"Return","src":"2490:59:12"}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"2261:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2021,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":2021,"src":"2428:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:12"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2021,"src":"2465:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2006,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:12"},"scope":2047,"src":"2407:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2045,"nodeType":"Block","src":"2711:66:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"2744:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2032,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:12","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2031,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2040,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"2767:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:12","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2037,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2030,"id":2044,"nodeType":"Return","src":"2721:49:12"}]},"documentation":{"id":2022,"nodeType":"StructuredDocumentation","src":"2562:66:12","text":" @dev Returns true if the two strings are equal."},"id":2046,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2046,"src":"2648:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2023,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2046,"src":"2665:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2025,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:12"},"returnParameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2046,"src":"2705:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2028,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:12"},"scope":2047,"src":"2633:144:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2048,"src":"220:2559:12"}],"src":"101:2679:12"},"id":12},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2071],"IERC165":[2083]},"id":2072,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2049,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2050,"nodeType":"ImportDirective","scope":2072,"sourceUnit":2084,"src":"124:23:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2052,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2083,"src":"754:7:13"},"id":2053,"nodeType":"InheritanceSpecifier","src":"754:7:13"}],"contractDependencies":[2083],"contractKind":"contract","documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"149:576:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2071,"linearizedBaseContracts":[2071,2083],"name":"ERC165","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2082],"body":{"id":2069,"nodeType":"Block","src":"920:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"937:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2064,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2083_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2083_$","typeString":"type(contract IERC165)"}],"id":2063,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2083","typeString":"type(contract IERC165)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2061,"id":2068,"nodeType":"Return","src":"930:47:13"}]},"documentation":{"id":2054,"nodeType":"StructuredDocumentation","src":"768:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":2058,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:13"},"parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":2070,"src":"856:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2055,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:13"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2070,"src":"914:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2059,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:13"},"scope":2071,"src":"829:155:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2072,"src":"726:260:13"}],"src":"99:888:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2083]},"id":2084,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2073,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2074,"nodeType":"StructuredDocumentation","src":"125:279:14","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2083,"linearizedBaseContracts":[2083],"name":"IERC165","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2075,"nodeType":"StructuredDocumentation","src":"429:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2082,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":2082,"src":"801:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2076,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:14"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2082,"src":"844:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:14"},"scope":2083,"src":"774:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2084,"src":"405:447:14"}],"src":"100:753:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2949]},"id":2950,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2085,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"128:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2949,"linearizedBaseContracts":[2949],"name":"Math","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2090,"members":[{"id":2087,"name":"Down","nodeType":"EnumValue","src":"245:4:15"},{"id":2088,"name":"Up","nodeType":"EnumValue","src":"287:2:15"},{"id":2089,"name":"Zero","nodeType":"EnumValue","src":"318:4:15"}],"name":"Rounding","nodeType":"EnumDefinition","src":"221:122:15"},{"body":{"id":2107,"nodeType":"Block","src":"480:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"497:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"501:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2104,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"509:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:15","trueExpression":{"id":2103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"505:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2099,"id":2106,"nodeType":"Return","src":"490:20:15"}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"349:59:15","text":" @dev Returns the largest of two numbers."},"id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2108,"src":"426:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2108,"src":"437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:15"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2108,"src":"471:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:15"},"scope":2949,"src":"413:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"655:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"672:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2119,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"684:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:15","trueExpression":{"id":2121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"680:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2117,"id":2124,"nodeType":"Return","src":"665:20:15"}]},"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"523:60:15","text":" @dev Returns the smallest of two numbers."},"id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2126,"src":"601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2126,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:15"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2126,"src":"646:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:15"},"scope":2949,"src":"588:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2148,"nodeType":"Block","src":"876:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2136,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2137,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"935:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"941:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2135,"id":2147,"nodeType":"Return","src":"923:28:15"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"698:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2149,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2149,"src":"822:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2149,"src":"833:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:15"},"returnParameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2149,"src":"867:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:15"},"scope":2949,"src":"805:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2173,"nodeType":"Block","src":"1228:123:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"1339:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:15","trueExpression":{"hexValue":"30","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2158,"id":2172,"nodeType":"Return","src":"1309:35:15"}]},"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"964:188:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2174,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nodeType":"FunctionDefinition","parameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2152,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2174,"src":"1174:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2154,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2174,"src":"1185:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:15"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2174,"src":"1219:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:15"},"scope":2949,"src":"1157:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2296,"nodeType":"Block","src":"1765:4115:15","statements":[{"id":2295,"nodeType":"UncheckedBlock","src":"1775:4099:15","statements":[{"assignments":[2187],"declarations":[{"constant":false,"id":2187,"mutability":"mutable","name":"prod0","nodeType":"VariableDeclaration","scope":2295,"src":"2096:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2188,"nodeType":"VariableDeclarationStatement","src":"2096:13:15"},{"assignments":[2190],"declarations":[{"constant":false,"id":2190,"mutability":"mutable","name":"prod1","nodeType":"VariableDeclaration","scope":2295,"src":"2168:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2191,"nodeType":"VariableDeclarationStatement","src":"2168:13:15"},{"AST":{"nodeType":"YulBlock","src":"2248:157:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:15"},"nodeType":"YulFunctionCall","src":"2289:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:15"},"nodeType":"YulFunctionCall","src":"2276:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:15","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:15"},"nodeType":"YulFunctionCall","src":"2322:9:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:15"}]},{"nodeType":"YulAssignment","src":"2348:43:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:15"},"nodeType":"YulFunctionCall","src":"2361:14:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:15"},"nodeType":"YulFunctionCall","src":"2377:13:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:15"},"nodeType":"YulFunctionCall","src":"2357:34:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:15"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2187,"isOffset":false,"isSlot":false,"src":"2313:5:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"2369:5:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"2384:5:15","valueSize":1},{"declaration":2190,"isOffset":false,"isSlot":false,"src":"2348:5:15","valueSize":1},{"declaration":2177,"isOffset":false,"isSlot":false,"src":"2283:1:15","valueSize":1},{"declaration":2177,"isOffset":false,"isSlot":false,"src":"2326:1:15","valueSize":1},{"declaration":2179,"isOffset":false,"isSlot":false,"src":"2286:1:15","valueSize":1},{"declaration":2179,"isOffset":false,"isSlot":false,"src":"2329:1:15","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"2239:166:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2193,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2486:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"2482:368:15","trueBody":{"id":2200,"nodeType":"Block","src":"2498:352:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"2816:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2197,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"2824:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2185,"id":2199,"nodeType":"Return","src":"2809:26:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"2960:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2204,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"2974:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"2952:53:15"},{"assignments":[2210],"declarations":[{"constant":false,"id":2210,"mutability":"mutable","name":"remainder","nodeType":"VariableDeclaration","scope":2295,"src":"3261:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2211,"nodeType":"VariableDeclarationStatement","src":"3261:17:15"},{"AST":{"nodeType":"YulBlock","src":"3301:291:15","statements":[{"nodeType":"YulAssignment","src":"3370:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:15"},"nodeType":"YulFunctionCall","src":"3383:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:15"}]},{"nodeType":"YulAssignment","src":"3490:41:15","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:15"},"nodeType":"YulFunctionCall","src":"3510:20:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:15"},"nodeType":"YulFunctionCall","src":"3499:32:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:15"}]},{"nodeType":"YulAssignment","src":"3548:30:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:15"},"nodeType":"YulFunctionCall","src":"3557:21:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:15"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2181,"isOffset":false,"isSlot":false,"src":"3396:11:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"3524:5:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"3548:5:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"3561:5:15","valueSize":1},{"declaration":2190,"isOffset":false,"isSlot":false,"src":"3490:5:15","valueSize":1},{"declaration":2190,"isOffset":false,"isSlot":false,"src":"3503:5:15","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"3370:9:15","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"3513:9:15","valueSize":1},{"declaration":2210,"isOffset":false,"isSlot":false,"src":"3568:9:15","valueSize":1},{"declaration":2177,"isOffset":false,"isSlot":false,"src":"3390:1:15","valueSize":1},{"declaration":2179,"isOffset":false,"isSlot":false,"src":"3393:1:15","valueSize":1}],"id":2212,"nodeType":"InlineAssembly","src":"3292:300:15"},{"assignments":[2214],"declarations":[{"constant":false,"id":2214,"mutability":"mutable","name":"twos","nodeType":"VariableDeclaration","scope":2295,"src":"3899:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2222,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2215,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"3914:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:15","subExpression":{"id":2216,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"3930:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:15"},{"AST":{"nodeType":"YulBlock","src":"3969:362:15","statements":[{"nodeType":"YulAssignment","src":"4034:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:15"},"nodeType":"YulFunctionCall","src":"4049:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:15"}]},{"nodeType":"YulAssignment","src":"4138:25:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:15"},"nodeType":"YulFunctionCall","src":"4147:16:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:15"}]},{"nodeType":"YulAssignment","src":"4278:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:15"},"nodeType":"YulFunctionCall","src":"4294:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:15"},"nodeType":"YulFunctionCall","src":"4290:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:15"},"nodeType":"YulFunctionCall","src":"4286:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:15"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2181,"isOffset":false,"isSlot":false,"src":"4034:11:15","valueSize":1},{"declaration":2181,"isOffset":false,"isSlot":false,"src":"4053:11:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"4138:5:15","valueSize":1},{"declaration":2187,"isOffset":false,"isSlot":false,"src":"4151:5:15","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"4066:4:15","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"4158:4:15","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"4278:4:15","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"4301:4:15","valueSize":1},{"declaration":2214,"isOffset":false,"isSlot":false,"src":"4308:4:15","valueSize":1}],"id":2223,"nodeType":"InlineAssembly","src":"3960:371:15"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"4397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2225,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"4406:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2226,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"4414:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"4397:21:15"},{"assignments":[2231],"declarations":[{"constant":false,"id":2231,"mutability":"mutable","name":"inverse","nodeType":"VariableDeclaration","scope":2295,"src":"4736:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2238,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2233,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"4759:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:15"},{"expression":{"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5007:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2242,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5021:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2246,"nodeType":"ExpressionStatement","src":"4992:36:15"},{"expression":{"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2247,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5076:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2250,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2254,"nodeType":"ExpressionStatement","src":"5061:36:15"},{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2255,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5131:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5146:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2258,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2262,"nodeType":"ExpressionStatement","src":"5131:36:15"},{"expression":{"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5201:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2265,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5216:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2266,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2270,"nodeType":"ExpressionStatement","src":"5201:36:15"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2271,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2273,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5286:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2274,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5300:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"5271:36:15"},{"expression":{"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2279,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"5357:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2282,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2286,"nodeType":"ExpressionStatement","src":"5342:36:15"},{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2287,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5812:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"5821:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2289,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"5829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"5812:24:15"},{"expression":{"id":2293,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5857:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2185,"id":2294,"nodeType":"Return","src":"5850:13:15"}]}]},"documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"1357:305:15","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2297,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2177,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2297,"src":"1683:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2179,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2297,"src":"1694:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2181,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":2297,"src":"1705:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:15"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2297,"src":"1749:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:15"},"scope":2949,"src":"1667:4213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"6122:189:15","statements":[{"assignments":[2313],"declarations":[{"constant":false,"id":2313,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2340,"src":"6132:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2312,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"initialValue":{"arguments":[{"id":2315,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"6156:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2316,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6159:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2317,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6162:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2314,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2297,2341],"referencedDeclaration":2297,"src":"6149:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"6188:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2321,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"6200:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2090_$","typeString":"type(enum Math.Rounding)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"6200:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"src":"6188:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2325,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"6222:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2326,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"6225:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2327,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"6228:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2324,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2337,"nodeType":"IfStatement","src":"6184:98:15","trueBody":{"id":2336,"nodeType":"Block","src":"6246:36:15","statements":[{"expression":{"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6260:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2335,"nodeType":"ExpressionStatement","src":"6260:11:15"}]}},{"expression":{"id":2338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"6298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2311,"id":2339,"nodeType":"Return","src":"6291:13:15"}]},"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"5886:121:15","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":2341,"src":"6028:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2302,"mutability":"mutable","name":"y","nodeType":"VariableDeclaration","scope":2341,"src":"6039:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"denominator","nodeType":"VariableDeclaration","scope":2341,"src":"6050:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2341,"src":"6071:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"typeName":{"id":2306,"nodeType":"UserDefinedTypeName","pathNode":{"id":2305,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"6071:8:15"},"referencedDeclaration":2090,"src":"6071:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:15"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2341,"src":"6113:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:15"},"scope":2949,"src":"6012:299:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"6587:1585:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"6601:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2355,"nodeType":"IfStatement","src":"6597:45:15","trueBody":{"id":2354,"nodeType":"Block","src":"6609:33:15","statements":[{"expression":{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2348,"id":2353,"nodeType":"Return","src":"6623:8:15"}]}},{"assignments":[2357],"declarations":[{"constant":false,"id":2357,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2452,"src":"7321:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2356,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2366,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2360,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"7349:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2359,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2621,2657],"referencedDeclaration":2621,"src":"7344:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:15"},{"id":2451,"nodeType":"UncheckedBlock","src":"7758:408:15","statements":[{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7792:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"7801:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2370,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7805:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"7782:35:15"},{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7831:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7841:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"7850:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7854:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"7831:35:15"},{"expression":{"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2390,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7890:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"7899:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7903:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2395,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2399,"nodeType":"ExpressionStatement","src":"7880:35:15"},{"expression":{"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2400,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7929:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7939:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"7948:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7952:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2410,"nodeType":"ExpressionStatement","src":"7929:35:15"},{"expression":{"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7978:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"7988:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"7997:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8001:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2421,"nodeType":"ExpressionStatement","src":"7978:35:15"},{"expression":{"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8027:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8037:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"8046:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8050:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2432,"nodeType":"ExpressionStatement","src":"8027:35:15"},{"expression":{"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8076:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8086:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"8095:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8099:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2443,"nodeType":"ExpressionStatement","src":"8076:35:15"},{"expression":{"arguments":[{"id":2445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8136:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"8144:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2447,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8148:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"8132:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2348,"id":2450,"nodeType":"Return","src":"8125:30:15"}]}]},"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"6317:208:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2453,"src":"6544:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:15"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2453,"src":"6578:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:15"},"scope":2949,"src":"6530:1642:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2488,"nodeType":"Block","src":"8348:161:15","statements":[{"id":2487,"nodeType":"UncheckedBlock","src":"8358:145:15","statements":[{"assignments":[2465],"declarations":[{"constant":false,"id":2465,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2487,"src":"8382:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2469,"initialValue":{"arguments":[{"id":2467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"8404:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2466,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2453,2489],"referencedDeclaration":2453,"src":"8399:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2470,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"8427:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"8437:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2472,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"8449:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2090_$","typeString":"type(enum Math.Rounding)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"8449:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"src":"8437:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"8464:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"8473:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"8482:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:15","trueExpression":{"hexValue":"31","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2463,"id":2486,"nodeType":"Return","src":"8420:72:15"}]}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"8178:89:15","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2456,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2489,"src":"8286:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2489,"src":"8297:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"typeName":{"id":2458,"nodeType":"UserDefinedTypeName","pathNode":{"id":2457,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"8297:8:15"},"referencedDeclaration":2090,"src":"8297:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:15"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2489,"src":"8339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:15"},"scope":2949,"src":"8272:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2620,"nodeType":"Block","src":"8694:922:15","statements":[{"assignments":[2498],"declarations":[{"constant":false,"id":2498,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2620,"src":"8704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2500,"initialValue":{"hexValue":"30","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:15"},{"id":2617,"nodeType":"UncheckedBlock","src":"8732:855:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"8760:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2515,"nodeType":"IfStatement","src":"8756:99:15","trueBody":{"id":2514,"nodeType":"Block","src":"8778:77:15","statements":[{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"8796:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2509,"nodeType":"ExpressionStatement","src":"8796:13:15"},{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"8827:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"nodeType":"ExpressionStatement","src":"8827:13:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"8872:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2530,"nodeType":"IfStatement","src":"8868:96:15","trueBody":{"id":2529,"nodeType":"Block","src":"8889:75:15","statements":[{"expression":{"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"8907:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ExpressionStatement","src":"8907:12:15"},{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"8937:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"8937:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"8981:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2545,"nodeType":"IfStatement","src":"8977:96:15","trueBody":{"id":2544,"nodeType":"Block","src":"8998:75:15","statements":[{"expression":{"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9016:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2539,"nodeType":"ExpressionStatement","src":"9016:12:15"},{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"9046:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9090:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"nodeType":"IfStatement","src":"9086:96:15","trueBody":{"id":2559,"nodeType":"Block","src":"9107:75:15","statements":[{"expression":{"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9125:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2554,"nodeType":"ExpressionStatement","src":"9125:12:15"},{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9155:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"9155:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9199:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2575,"nodeType":"IfStatement","src":"9195:93:15","trueBody":{"id":2574,"nodeType":"Block","src":"9215:73:15","statements":[{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9233:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"9233:11:15"},{"expression":{"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9262:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2573,"nodeType":"ExpressionStatement","src":"9262:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9305:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2590,"nodeType":"IfStatement","src":"9301:93:15","trueBody":{"id":2589,"nodeType":"Block","src":"9321:73:15","statements":[{"expression":{"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9339:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2584,"nodeType":"ExpressionStatement","src":"9339:11:15"},{"expression":{"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2585,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9368:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2588,"nodeType":"ExpressionStatement","src":"9368:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9411:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2605,"nodeType":"IfStatement","src":"9407:93:15","trueBody":{"id":2604,"nodeType":"Block","src":"9427:73:15","statements":[{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9445:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2599,"nodeType":"ExpressionStatement","src":"9445:11:15"},{"expression":{"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9474:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2603,"nodeType":"ExpressionStatement","src":"9474:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"9517:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2616,"nodeType":"IfStatement","src":"9513:64:15","trueBody":{"id":2615,"nodeType":"Block","src":"9533:44:15","statements":[{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9551:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"nodeType":"ExpressionStatement","src":"9551:11:15"}]}}]},{"expression":{"id":2618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"9603:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2496,"id":2619,"nodeType":"Return","src":"9596:13:15"}]},"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"8515:113:15","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2621,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2621,"src":"8647:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:15"},"returnParameters":{"id":2496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2621,"src":"8685:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:15"},"scope":2949,"src":"8633:983:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2656,"nodeType":"Block","src":"9849:165:15","statements":[{"id":2655,"nodeType":"UncheckedBlock","src":"9859:149:15","statements":[{"assignments":[2633],"declarations":[{"constant":false,"id":2633,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2655,"src":"9883:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2637,"initialValue":{"arguments":[{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"9905:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2634,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2621,2657],"referencedDeclaration":2621,"src":"9900:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2638,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"9932:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"9942:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2640,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"9954:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2090_$","typeString":"type(enum Math.Rounding)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"9954:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"src":"9942:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2644,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"9974:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2624,"src":"9983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:15","trueExpression":{"hexValue":"31","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2631,"id":2654,"nodeType":"Return","src":"9925:72:15"}]}]},"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"9622:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2657,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2657,"src":"9783:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2657,"src":"9798:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"typeName":{"id":2626,"nodeType":"UserDefinedTypeName","pathNode":{"id":2625,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"9798:8:15"},"referencedDeclaration":2090,"src":"9798:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:15"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2657,"src":"9840:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:15"},"scope":2949,"src":"9769:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"10201:854:15","statements":[{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2785,"src":"10211:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2665,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2668,"initialValue":{"hexValue":"30","id":2667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:15"},{"id":2782,"nodeType":"UncheckedBlock","src":"10239:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10267:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2685,"nodeType":"IfStatement","src":"10263:103:15","trueBody":{"id":2684,"nodeType":"Block","src":"10286:80:15","statements":[{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10304:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"10304:17:15"},{"expression":{"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10339:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2683,"nodeType":"ExpressionStatement","src":"10339:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2702,"nodeType":"IfStatement","src":"10379:103:15","trueBody":{"id":2701,"nodeType":"Block","src":"10402:80:15","statements":[{"expression":{"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10420:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2696,"nodeType":"ExpressionStatement","src":"10420:17:15"},{"expression":{"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10455:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2700,"nodeType":"ExpressionStatement","src":"10455:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10499:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2719,"nodeType":"IfStatement","src":"10495:103:15","trueBody":{"id":2718,"nodeType":"Block","src":"10518:80:15","statements":[{"expression":{"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10536:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2713,"nodeType":"ExpressionStatement","src":"10536:17:15"},{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10571:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2717,"nodeType":"ExpressionStatement","src":"10571:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10615:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2736,"nodeType":"IfStatement","src":"10611:100:15","trueBody":{"id":2735,"nodeType":"Block","src":"10633:78:15","statements":[{"expression":{"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10651:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2730,"nodeType":"ExpressionStatement","src":"10651:16:15"},{"expression":{"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10685:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2734,"nodeType":"ExpressionStatement","src":"10685:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10728:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2753,"nodeType":"IfStatement","src":"10724:100:15","trueBody":{"id":2752,"nodeType":"Block","src":"10746:78:15","statements":[{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10764:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"10764:16:15"},{"expression":{"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10798:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2751,"nodeType":"ExpressionStatement","src":"10798:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10841:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"nodeType":"IfStatement","src":"10837:100:15","trueBody":{"id":2769,"nodeType":"Block","src":"10859:78:15","statements":[{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10877:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2764,"nodeType":"ExpressionStatement","src":"10877:16:15"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10911:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"10911:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"10954:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2781,"nodeType":"IfStatement","src":"10950:66:15","trueBody":{"id":2780,"nodeType":"Block","src":"10972:44:15","statements":[{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"10990:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"10990:11:15"}]}}]},{"expression":{"id":2783,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"11042:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2664,"id":2784,"nodeType":"Return","src":"11035:13:15"}]},"documentation":{"id":2658,"nodeType":"StructuredDocumentation","src":"10020:114:15","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":2661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2660,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2786,"src":"10154:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:15"},"returnParameters":{"id":2664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2663,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2786,"src":"10192:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2662,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:15"},"scope":2949,"src":"10139:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"11290:167:15","statements":[{"id":2820,"nodeType":"UncheckedBlock","src":"11300:151:15","statements":[{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2820,"src":"11324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2802,"initialValue":{"arguments":[{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"11347:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2799,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2786,2822],"referencedDeclaration":2786,"src":"11341:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"11374:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"11384:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2805,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"11396:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2090_$","typeString":"type(enum Math.Rounding)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"11396:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"src":"11384:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2809,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"11417:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"11426:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:15","trueExpression":{"hexValue":"31","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2796,"id":2819,"nodeType":"Return","src":"11367:73:15"}]}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"11061:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2822,"src":"11224:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2822,"src":"11239:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"typeName":{"id":2791,"nodeType":"UserDefinedTypeName","pathNode":{"id":2790,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"11239:8:15"},"referencedDeclaration":2090,"src":"11239:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:15"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2822,"src":"11281:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:15"},"scope":2949,"src":"11209:248:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2908,"nodeType":"Block","src":"11771:600:15","statements":[{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2908,"src":"11781:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2833,"initialValue":{"hexValue":"30","id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:15"},{"id":2905,"nodeType":"UncheckedBlock","src":"11809:533:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"11837:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2848,"nodeType":"IfStatement","src":"11833:98:15","trueBody":{"id":2847,"nodeType":"Block","src":"11855:76:15","statements":[{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"11873:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2842,"nodeType":"ExpressionStatement","src":"11873:13:15"},{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"11904:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2846,"nodeType":"ExpressionStatement","src":"11904:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"11948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2863,"nodeType":"IfStatement","src":"11944:95:15","trueBody":{"id":2862,"nodeType":"Block","src":"11965:74:15","statements":[{"expression":{"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"11983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2857,"nodeType":"ExpressionStatement","src":"11983:12:15"},{"expression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12013:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2861,"nodeType":"ExpressionStatement","src":"12013:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"12056:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2878,"nodeType":"IfStatement","src":"12052:95:15","trueBody":{"id":2877,"nodeType":"Block","src":"12073:74:15","statements":[{"expression":{"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"12091:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2872,"nodeType":"ExpressionStatement","src":"12091:12:15"},{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2873,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12121:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"12121:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"12164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2893,"nodeType":"IfStatement","src":"12160:95:15","trueBody":{"id":2892,"nodeType":"Block","src":"12181:74:15","statements":[{"expression":{"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"12199:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2887,"nodeType":"ExpressionStatement","src":"12199:12:15"},{"expression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2888,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12229:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2891,"nodeType":"ExpressionStatement","src":"12229:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"12272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2904,"nodeType":"IfStatement","src":"12268:64:15","trueBody":{"id":2903,"nodeType":"Block","src":"12288:44:15","statements":[{"expression":{"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12306:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2902,"nodeType":"ExpressionStatement","src":"12306:11:15"}]}}]},{"expression":{"id":2906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"12358:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2829,"id":2907,"nodeType":"Return","src":"12351:13:15"}]},"documentation":{"id":2823,"nodeType":"StructuredDocumentation","src":"11463:240:15","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2909,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2825,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2909,"src":"11724:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2824,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:15"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2909,"src":"11762:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:15"},"scope":2949,"src":"11708:663:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2947,"nodeType":"Block","src":"12608:174:15","statements":[{"id":2946,"nodeType":"UncheckedBlock","src":"12618:158:15","statements":[{"assignments":[2921],"declarations":[{"constant":false,"id":2921,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":2946,"src":"12642:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2925,"initialValue":{"arguments":[{"id":2923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"12666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2922,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2909,2948],"referencedDeclaration":2909,"src":"12659:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"12693:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"12703:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2928,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"12715:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2090_$","typeString":"type(enum Math.Rounding)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","src":"12715:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"src":"12703:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"12736:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2935,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"12751:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:15","trueExpression":{"hexValue":"31","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2919,"id":2945,"nodeType":"Return","src":"12686:79:15"}]}]},"documentation":{"id":2910,"nodeType":"StructuredDocumentation","src":"12377:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2948,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2912,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":2948,"src":"12542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":2948,"src":"12557:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"},"typeName":{"id":2914,"nodeType":"UserDefinedTypeName","pathNode":{"id":2913,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":2090,"src":"12557:8:15"},"referencedDeclaration":2090,"src":"12557:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2090","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:15"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2948,"src":"12599:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:15"},"scope":2949,"src":"12526:256:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2950,"src":"202:12582:15"}],"src":"103:12682:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3054]},"id":3055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2951,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"134:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3054,"linearizedBaseContracts":[3054],"name":"SignedMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":2969,"nodeType":"Block","src":"375:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"392:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2963,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"396:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"404:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:16","trueExpression":{"id":2965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"400:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2961,"id":2968,"nodeType":"Return","src":"385:20:16"}]},"documentation":{"id":2953,"nodeType":"StructuredDocumentation","src":"240:66:16","text":" @dev Returns the largest of two signed numbers."},"id":2970,"implemented":true,"kind":"function","modifiers":[],"name":"max","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2970,"src":"324:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2954,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2970,"src":"334:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2956,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:16"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2970,"src":"367:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2959,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:16"},"scope":3054,"src":"311:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2987,"nodeType":"Block","src":"554:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"571:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2981,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"575:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"583:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:16","trueExpression":{"id":2983,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2973,"src":"579:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2979,"id":2986,"nodeType":"Return","src":"564:20:16"}]},"documentation":{"id":2971,"nodeType":"StructuredDocumentation","src":"418:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"min","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2973,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":2988,"src":"503:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2972,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2975,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":2988,"src":"513:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2974,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:16"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2988,"src":"546:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2977,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:16"},"scope":3054,"src":"490:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3031,"nodeType":"Block","src":"796:162:16","statements":[{"assignments":[2999],"declarations":[{"constant":false,"id":2999,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":3031,"src":"858:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2998,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3012,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"870:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"874:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"881:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"885:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"910:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3018,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"930:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:16","typeDescriptions":{}}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3014,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:16","typeDescriptions":{}}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"944:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3024,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2993,"src":"948:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2997,"id":3030,"nodeType":"Return","src":"903:48:16"}]},"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"597:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3032,"implemented":true,"kind":"function","modifiers":[],"name":"average","nodeType":"FunctionDefinition","parameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":3032,"src":"745:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2990,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":3032,"src":"755:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2992,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:16"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2996,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3032,"src":"788:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2995,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:16"},"scope":3054,"src":"728:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3052,"nodeType":"Block","src":"1102:158:16","statements":[{"id":3051,"nodeType":"UncheckedBlock","src":"1112:142:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1227:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:16","subExpression":{"id":3046,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1241:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:16","trueExpression":{"id":3045,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"1236:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{}}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3039,"id":3050,"nodeType":"Return","src":"1212:31:16"}]}]},"documentation":{"id":3033,"nodeType":"StructuredDocumentation","src":"964:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"n","nodeType":"VariableDeclaration","scope":3053,"src":"1060:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3034,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:16"},"returnParameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3053,"src":"1093:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:16"},"scope":3054,"src":"1047:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3055,"src":"215:1047:16"}],"src":"109:1154:16"},"id":16},"contracts/AreaCalculator.sol":{"ast":{"absolutePath":"contracts/AreaCalculator.sol","exportedSymbols":{},"id":3056,"license":"MIT","nodeType":"SourceUnit","nodes":[],"src":"515:0:17"},"id":17},"contracts/Bank.sol":{"ast":{"absolutePath":"contracts/Bank.sol","exportedSymbols":{},"id":3057,"license":"MIT","nodeType":"SourceUnit","nodes":[],"src":"1514:0:18"},"id":18},"contracts/CrowdFunding.sol":{"ast":{"absolutePath":"contracts/CrowdFunding.sol","exportedSymbols":{},"id":3058,"license":"MIT","nodeType":"SourceUnit","nodes":[],"src":"6075:0:19"},"id":19},"contracts/MyNFT.sol":{"ast":{"absolutePath":"contracts/MyNFT.sol","exportedSymbols":{"Address":[1714],"Context":[1744],"Counters":[1818],"ERC165":[2071],"ERC721":[1067],"ERC721URIStorage":[1357],"IERC165":[2083],"IERC4906":[137],"IERC721":[1183],"IERC721Metadata":[1384],"IERC721Receiver":[1201],"Math":[2949],"MyNFT":[3128],"Ownable":[112],"SignedMath":[3054],"Strings":[2047]},"id":3129,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3059,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3060,"nodeType":"ImportDirective","scope":3129,"sourceUnit":1068,"src":"57:57:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":3061,"nodeType":"ImportDirective","scope":3129,"sourceUnit":1819,"src":"115:52:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3062,"nodeType":"ImportDirective","scope":3129,"sourceUnit":113,"src":"168:52:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3063,"nodeType":"ImportDirective","scope":3129,"sourceUnit":1358,"src":"221:78:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3064,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1357,"src":"319:16:20"},"id":3065,"nodeType":"InheritanceSpecifier","src":"319:16:20"},{"baseName":{"id":3066,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":112,"src":"337:7:20"},"id":3067,"nodeType":"InheritanceSpecifier","src":"337:7:20"}],"contractDependencies":[112,137,1067,1183,1357,1384,1744,2071,2083],"contractKind":"contract","fullyImplemented":true,"id":3128,"linearizedBaseContracts":[3128,112,1357,1067,1384,137,1183,2071,2083,1744],"name":"MyNFT","nodeType":"ContractDefinition","nodes":[{"id":3071,"libraryName":{"id":3068,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":1818,"src":"357:8:20"},"nodeType":"UsingForDirective","src":"351:36:20","typeName":{"id":3070,"nodeType":"UserDefinedTypeName","pathNode":{"id":3069,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1750,"src":"370:16:20"},"referencedDeclaration":1750,"src":"370:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":3074,"mutability":"mutable","name":"_tokenIds","nodeType":"VariableDeclaration","scope":3128,"src":"392:34:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3073,"nodeType":"UserDefinedTypeName","pathNode":{"id":3072,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1750,"src":"392:16:20"},"referencedDeclaration":1750,"src":"392:16:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"body":{"id":3081,"nodeType":"Block","src":"470:2:20","statements":[]},"id":3082,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d794e4654","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"454:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_468b3d6a0127f01800703f6eaab73eb44c5dc1ea91cbcbbd87cb1a42f1460bb9","typeString":"literal_string \"MyNFT\""},"value":"MyNFT"},{"hexValue":"4e4654","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"463:5:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c4138cd0a1311e4748f70d0fe3dc55f0f5f75e0f20db731225cbc3b8914016a","typeString":"literal_string \"NFT\""},"value":"NFT"}],"id":3079,"modifierName":{"id":3076,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1067,"src":"447:6:20"},"nodeType":"ModifierInvocation","src":"447:22:20"}],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3075,"nodeType":"ParameterList","parameters":[],"src":"444:2:20"},"returnParameters":{"id":3080,"nodeType":"ParameterList","parameters":[],"src":"470:0:20"},"scope":3128,"src":"433:39:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3116,"nodeType":"Block","src":"573:195:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3093,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"583:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage","typeString":"struct Counters.Counter storage ref"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1776,"src":"583:19:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1750_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1750_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"583:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3097,"nodeType":"ExpressionStatement","src":"583:21:20"},{"assignments":[3099],"declarations":[{"constant":false,"id":3099,"mutability":"mutable","name":"newItemId","nodeType":"VariableDeclaration","scope":3116,"src":"615:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3103,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3100,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"635:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage","typeString":"struct Counters.Counter storage ref"}},"id":3101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"635:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1750_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1750_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"635:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"615:39:20"},{"expression":{"arguments":[{"id":3105,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"670:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3106,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"681:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3104,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"664:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"664:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3108,"nodeType":"ExpressionStatement","src":"664:27:20"},{"expression":{"arguments":[{"id":3110,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"714:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3111,"name":"tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"725:8:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3109,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"701:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"701:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3113,"nodeType":"ExpressionStatement","src":"701:33:20"},{"expression":{"id":3114,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"752:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3092,"id":3115,"nodeType":"Return","src":"745:16:20"}]},"functionSelector":"eacabe14","id":3117,"implemented":true,"kind":"function","modifiers":[{"id":3089,"modifierName":{"id":3088,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":31,"src":"545:9:20"},"nodeType":"ModifierInvocation","src":"545:9:20"}],"name":"mintNFT","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3117,"src":"495:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"tokenURI","nodeType":"VariableDeclaration","scope":3117,"src":"514:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3085,"name":"string","nodeType":"ElementaryTypeName","src":"514:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"494:43:20"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3117,"src":"564:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"563:9:20"},"scope":3128,"src":"478:290:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3126,"nodeType":"Block","src":"827:43:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3122,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"844:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1750_storage","typeString":"struct Counters.Counter storage ref"}},"id":3123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"844:17:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1750_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1750_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"844:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3121,"id":3125,"nodeType":"Return","src":"837:26:20"}]},"functionSelector":"18160ddd","id":3127,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"794:2:20"},"returnParameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3120,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":3127,"src":"818:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"817:9:20"},"scope":3128,"src":"774:96:20","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":3129,"src":"301:571:20"}],"src":"32:841:20"},"id":20},"contracts/StudentPortal.sol":{"ast":{"absolutePath":"contracts/StudentPortal.sol","exportedSymbols":{},"id":3130,"license":"MIT","nodeType":"SourceUnit","nodes":[],"src":"3327:0:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2045:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"80:845:22","statements":[{"body":{"nodeType":"YulBlock","src":"129:24:22","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"138:5:22"},{"name":"array","nodeType":"YulIdentifier","src":"145:5:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:22"},"nodeType":"YulFunctionCall","src":"131:20:22"},"nodeType":"YulExpressionStatement","src":"131:20:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"108:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"116:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"104:3:22"},"nodeType":"YulFunctionCall","src":"104:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"123:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"100:3:22"},"nodeType":"YulFunctionCall","src":"100:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"93:6:22"},"nodeType":"YulFunctionCall","src":"93:35:22"},"nodeType":"YulIf","src":"90:2:22"},{"nodeType":"YulVariableDeclaration","src":"162:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"178:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"172:5:22"},"nodeType":"YulFunctionCall","src":"172:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"166:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"194:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"212:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"216:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"208:3:22"},"nodeType":"YulFunctionCall","src":"208:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"220:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"204:3:22"},"nodeType":"YulFunctionCall","src":"204:18:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"198:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"245:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"247:16:22"},"nodeType":"YulFunctionCall","src":"247:18:22"},"nodeType":"YulExpressionStatement","src":"247:18:22"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"237:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"241:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"234:2:22"},"nodeType":"YulFunctionCall","src":"234:10:22"},"nodeType":"YulIf","src":"231:2:22"},{"nodeType":"YulVariableDeclaration","src":"276:17:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"290:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"286:3:22"},"nodeType":"YulFunctionCall","src":"286:7:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"280:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"302:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"322:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"316:5:22"},"nodeType":"YulFunctionCall","src":"316:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"306:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"334:71:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"356:6:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"380:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"384:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"376:3:22"},"nodeType":"YulFunctionCall","src":"376:13:22"},{"name":"_3","nodeType":"YulIdentifier","src":"391:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"372:3:22"},"nodeType":"YulFunctionCall","src":"372:22:22"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"368:3:22"},"nodeType":"YulFunctionCall","src":"368:31:22"},{"name":"_3","nodeType":"YulIdentifier","src":"401:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"364:3:22"},"nodeType":"YulFunctionCall","src":"364:40:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"352:3:22"},"nodeType":"YulFunctionCall","src":"352:53:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"338:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"464:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"466:16:22"},"nodeType":"YulFunctionCall","src":"466:18:22"},"nodeType":"YulExpressionStatement","src":"466:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"423:10:22"},{"name":"_2","nodeType":"YulIdentifier","src":"435:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"420:2:22"},"nodeType":"YulFunctionCall","src":"420:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"443:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"455:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"440:2:22"},"nodeType":"YulFunctionCall","src":"440:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"417:2:22"},"nodeType":"YulFunctionCall","src":"417:46:22"},"nodeType":"YulIf","src":"414:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"506:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"495:6:22"},"nodeType":"YulFunctionCall","src":"495:22:22"},"nodeType":"YulExpressionStatement","src":"495:22:22"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"533:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"541:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"526:6:22"},"nodeType":"YulFunctionCall","src":"526:18:22"},"nodeType":"YulExpressionStatement","src":"526:18:22"},{"nodeType":"YulVariableDeclaration","src":"553:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"563:4:22","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"557:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"613:24:22","statements":[{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"622:5:22"},{"name":"array","nodeType":"YulIdentifier","src":"629:5:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"615:6:22"},"nodeType":"YulFunctionCall","src":"615:20:22"},"nodeType":"YulExpressionStatement","src":"615:20:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"590:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"598:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:22"},"nodeType":"YulFunctionCall","src":"586:15:22"},{"name":"_4","nodeType":"YulIdentifier","src":"603:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:22"},"nodeType":"YulFunctionCall","src":"582:24:22"},{"name":"end","nodeType":"YulIdentifier","src":"608:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"579:2:22"},"nodeType":"YulFunctionCall","src":"579:33:22"},"nodeType":"YulIf","src":"576:2:22"},{"nodeType":"YulVariableDeclaration","src":"646:14:22","value":{"name":"array","nodeType":"YulIdentifier","src":"655:5:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"650:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"715:87:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"744:6:22"},{"name":"i","nodeType":"YulIdentifier","src":"752:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"740:3:22"},"nodeType":"YulFunctionCall","src":"740:14:22"},{"name":"_4","nodeType":"YulIdentifier","src":"756:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:22"},"nodeType":"YulFunctionCall","src":"736:23:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"775:6:22"},{"name":"i","nodeType":"YulIdentifier","src":"783:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"771:3:22"},"nodeType":"YulFunctionCall","src":"771:14:22"},{"name":"_4","nodeType":"YulIdentifier","src":"787:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"767:3:22"},"nodeType":"YulFunctionCall","src":"767:23:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"761:5:22"},"nodeType":"YulFunctionCall","src":"761:30:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"729:6:22"},"nodeType":"YulFunctionCall","src":"729:63:22"},"nodeType":"YulExpressionStatement","src":"729:63:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"680:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"683:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"677:2:22"},"nodeType":"YulFunctionCall","src":"677:9:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"687:19:22","statements":[{"nodeType":"YulAssignment","src":"689:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:22"},{"name":"_4","nodeType":"YulIdentifier","src":"701:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"694:3:22"},"nodeType":"YulFunctionCall","src":"694:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"689:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"673:3:22","statements":[]},"src":"669:133:22"},{"body":{"nodeType":"YulBlock","src":"832:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"861:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"869:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"857:3:22"},"nodeType":"YulFunctionCall","src":"857:15:22"},{"name":"_4","nodeType":"YulIdentifier","src":"874:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"853:3:22"},"nodeType":"YulFunctionCall","src":"853:24:22"},{"name":"array","nodeType":"YulIdentifier","src":"879:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"846:6:22"},"nodeType":"YulFunctionCall","src":"846:39:22"},"nodeType":"YulExpressionStatement","src":"846:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"817:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"820:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"814:2:22"},"nodeType":"YulFunctionCall","src":"814:9:22"},"nodeType":"YulIf","src":"811:2:22"},{"nodeType":"YulAssignment","src":"904:15:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"913:6:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"904:5:22"}]}]},"name":"abi_decode_t_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"62:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"70:5:22","type":""}],"src":"14:911:22"},{"body":{"nodeType":"YulBlock","src":"1048:478:22","statements":[{"body":{"nodeType":"YulBlock","src":"1094:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1103:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"1111:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1096:6:22"},"nodeType":"YulFunctionCall","src":"1096:22:22"},"nodeType":"YulExpressionStatement","src":"1096:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1069:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1078:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1065:3:22"},"nodeType":"YulFunctionCall","src":"1065:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1090:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1061:3:22"},"nodeType":"YulFunctionCall","src":"1061:32:22"},"nodeType":"YulIf","src":"1058:2:22"},{"nodeType":"YulVariableDeclaration","src":"1129:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1143:5:22"},"nodeType":"YulFunctionCall","src":"1143:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1133:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1168:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1186:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1190:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1182:3:22"},"nodeType":"YulFunctionCall","src":"1182:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1194:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1178:3:22"},"nodeType":"YulFunctionCall","src":"1178:18:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1172:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1223:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1232:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"1240:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1225:6:22"},"nodeType":"YulFunctionCall","src":"1225:22:22"},"nodeType":"YulExpressionStatement","src":"1225:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1211:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1219:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1208:2:22"},"nodeType":"YulFunctionCall","src":"1208:14:22"},"nodeType":"YulIf","src":"1205:2:22"},{"nodeType":"YulAssignment","src":"1258:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1303:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1314:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1299:3:22"},"nodeType":"YulFunctionCall","src":"1299:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1323:7:22"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1268:30:22"},"nodeType":"YulFunctionCall","src":"1268:63:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1258:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1340:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1366:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1377:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1362:3:22"},"nodeType":"YulFunctionCall","src":"1362:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1356:5:22"},"nodeType":"YulFunctionCall","src":"1356:25:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1344:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1410:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1419:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1427:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1412:6:22"},"nodeType":"YulFunctionCall","src":"1412:22:22"},"nodeType":"YulExpressionStatement","src":"1412:22:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1396:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1406:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1393:2:22"},"nodeType":"YulFunctionCall","src":"1393:16:22"},"nodeType":"YulIf","src":"1390:2:22"},{"nodeType":"YulAssignment","src":"1445:75:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1490:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1501:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1486:3:22"},"nodeType":"YulFunctionCall","src":"1486:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1512:7:22"}],"functionName":{"name":"abi_decode_t_string_fromMemory","nodeType":"YulIdentifier","src":"1455:30:22"},"nodeType":"YulFunctionCall","src":"1455:65:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1445:6:22"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1006:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1017:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1029:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1037:6:22","type":""}],"src":"930:596:22"},{"body":{"nodeType":"YulBlock","src":"1586:325:22","statements":[{"nodeType":"YulAssignment","src":"1596:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1610:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1616:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1606:3:22"},"nodeType":"YulFunctionCall","src":"1606:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1596:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1627:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1657:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"1663:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1653:3:22"},"nodeType":"YulFunctionCall","src":"1653:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1631:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1704:31:22","statements":[{"nodeType":"YulAssignment","src":"1706:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1720:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1728:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1716:3:22"},"nodeType":"YulFunctionCall","src":"1716:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1706:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1684:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1677:6:22"},"nodeType":"YulFunctionCall","src":"1677:26:22"},"nodeType":"YulIf","src":"1674:2:22"},{"body":{"nodeType":"YulBlock","src":"1794:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1815:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1822:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1827:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1818:3:22"},"nodeType":"YulFunctionCall","src":"1818:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1808:6:22"},"nodeType":"YulFunctionCall","src":"1808:31:22"},"nodeType":"YulExpressionStatement","src":"1808:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1859:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1862:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:22"},"nodeType":"YulFunctionCall","src":"1852:15:22"},"nodeType":"YulExpressionStatement","src":"1852:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1890:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1880:6:22"},"nodeType":"YulFunctionCall","src":"1880:15:22"},"nodeType":"YulExpressionStatement","src":"1880:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1750:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1773:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1781:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1770:2:22"},"nodeType":"YulFunctionCall","src":"1770:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1747:2:22"},"nodeType":"YulFunctionCall","src":"1747:38:22"},"nodeType":"YulIf","src":"1744:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1566:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1575:6:22","type":""}],"src":"1531:380:22"},{"body":{"nodeType":"YulBlock","src":"1948:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1965:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1972:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1977:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1968:3:22"},"nodeType":"YulFunctionCall","src":"1968:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1958:6:22"},"nodeType":"YulFunctionCall","src":"1958:31:22"},"nodeType":"YulExpressionStatement","src":"1958:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2005:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2008:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1998:6:22"},"nodeType":"YulFunctionCall","src":"1998:15:22"},"nodeType":"YulExpressionStatement","src":"1998:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2029:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2032:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2022:6:22"},"nodeType":"YulFunctionCall","src":"2022:15:22"},"nodeType":"YulExpressionStatement","src":"2022:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1916:127:22"}]},"contents":"{\n    { }\n    function abi_decode_t_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_t_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_t_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001440380380620014408339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b6002810460018216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6111b5806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e1576100cf565b80636352211e1461016d57806370a082311461018057806395d89b41146101a0576100cf565b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610d4c565b6101f4565b6040516100f49190610e48565b60405180910390f35b61010561023c565b6040516100f49190610e53565b610125610120366004610d84565b6102ce565b6040516100f49190610df7565b610145610140366004610d23565b6102f5565b005b610145610155366004610bd9565b610396565b610145610168366004610bd9565b6103ce565b61012561017b366004610d84565b6103e9565b61019361018e366004610b8d565b61041d565b6040516100f491906110e3565b610105610461565b6101456101b6366004610ce9565b610470565b6101456101c9366004610c14565b610486565b6101056101dc366004610d84565b6104c5565b6100e76101ef366004610ba7565b61052c565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b8061023457506102348261055a565b90505b919050565b60606000805461024b90611118565b80601f016020809104026020016040519081016040528092919081815260200182805461027790611118565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b60006102d982610573565b506000908152600460205260409020546001600160a01b031690565b6000610300826103e9565b9050806001600160a01b0316836001600160a01b0316141561033d5760405162461bcd60e51b815260040161033490611045565b60405180910390fd5b806001600160a01b031661034f61059b565b6001600160a01b0316148061036b575061036b816101ef61059b565b6103875760405162461bcd60e51b815260040161033490611086565b610391838361059f565b505050565b6103a76103a161059b565b8261060d565b6103c35760405162461bcd60e51b815260040161033490610e66565b61039183838361066c565b61039183838360405180602001604052806000815250610486565b6000806103f5836107a9565b90506001600160a01b0381166102345760405162461bcd60e51b81526004016103349061100e565b60006001600160a01b0382166104455760405162461bcd60e51b815260040161033490610fc5565b506001600160a01b031660009081526003602052604090205490565b60606001805461024b90611118565b61048261047b61059b565b83836107c4565b5050565b61049761049161059b565b8361060d565b6104b35760405162461bcd60e51b815260040161033490610e66565b6104bf84848484610867565b50505050565b60606104d082610573565b60006104da61089a565b905060008151116104fa5760405180602001604052806000815250610525565b80610504846108ac565b604051602001610515929190610dc8565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b61057c81610957565b6105985760405162461bcd60e51b81526004016103349061100e565b50565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906105d4826103e9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610619836103e9565b9050806001600160a01b0316846001600160a01b031614806106405750610640818561052c565b806106645750836001600160a01b0316610659846102ce565b6001600160a01b0316145b949350505050565b826001600160a01b031661067f826103e9565b6001600160a01b0316146106a55760405162461bcd60e51b815260040161033490610f05565b6001600160a01b0382166106cb5760405162461bcd60e51b815260040161033490610f4a565b6106d883838360016104bf565b826001600160a01b03166106eb826103e9565b6001600160a01b0316146107115760405162461bcd60e51b815260040161033490610f05565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a461039183838360016104bf565b6000908152600260205260409020546001600160a01b031690565b816001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161033490610f8e565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061085a908590610e48565b60405180910390a3505050565b61087284848461066c565b61087e84848484610974565b6104bf5760405162461bcd60e51b815260040161033490610eb3565b60408051602081019091526000815290565b606060006108b983610a8f565b600101905060008167ffffffffffffffff8111156108e757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610911576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461094a5761094f565b61091b565b509392505050565b600080610963836107a9565b6001600160a01b0316141592915050565b6000610988846001600160a01b0316610b67565b15610a8457836001600160a01b031663150b7a026109a461059b565b8786866040518563ffffffff1660e01b81526004016109c69493929190610e0b565b602060405180830381600087803b1580156109e057600080fd5b505af1925050508015610a10575060408051601f3d908101601f19168201909252610a0d91810190610d68565b60015b610a6a573d808015610a3e576040519150601f19603f3d011682016040523d82523d6000602084013e610a43565b606091505b508051610a625760405162461bcd60e51b815260040161033490610eb3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610664565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ace5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610afa576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b1857662386f26fc10000830492506010015b6305f5e1008310610b30576305f5e100830492506008015b6127108310610b4457612710830492506004015b60648310610b56576064830492506002015b600a83106102345760010192915050565b6001600160a01b03163b151590565b80356001600160a01b038116811461023757600080fd5b600060208284031215610b9e578081fd5b61052582610b76565b60008060408385031215610bb9578081fd5b610bc283610b76565b9150610bd060208401610b76565b90509250929050565b600080600060608486031215610bed578081fd5b610bf684610b76565b9250610c0460208501610b76565b9150604084013590509250925092565b60008060008060808587031215610c29578081fd5b610c3285610b76565b9350610c4060208601610b76565b925060408501359150606085013567ffffffffffffffff80821115610c63578283fd5b818701915087601f830112610c76578283fd5b813581811115610c8857610c88611153565b604051601f8201601f19908116603f01168101908382118183101715610cb057610cb0611153565b816040528281528a6020848701011115610cc8578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610cfb578182fd5b610d0483610b76565b915060208301358015158114610d18578182fd5b809150509250929050565b60008060408385031215610d35578182fd5b610d3e83610b76565b946020939093013593505050565b600060208284031215610d5d578081fd5b813561052581611169565b600060208284031215610d79578081fd5b815161052581611169565b600060208284031215610d95578081fd5b5035919050565b60008151808452610db48160208601602086016110ec565b601f01601f19169290920160200192915050565b60008351610dda8184602088016110ec565b835190830190610dee8183602088016110ec565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610e3e90830184610d9c565b9695505050505050565b901515815260200190565b6000602082526105256020830184610d9c565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b60208082526029908201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616040820152683634b21037bbb732b960b91b606082015260800190565b60208082526018908201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b6020808252603d908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60408201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606082015260800190565b90815260200190565b60005b838110156111075781810151838201526020016110ef565b838111156104bf5750506000910152565b60028104600182168061112c57607f821691505b6020821081141561114d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461059857600080fdfea2646970667358221220ca233bfc30ca6faaf7821ad3feec8f77ec5a5d6a8fe824d622702b90dca7097064736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1440 CODESIZE SUB DUP1 PUSH3 0x1440 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x11B5 DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4C JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xD23 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x125 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x225 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x234 DUP3 PUSH2 0x55A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x24B SWAP1 PUSH2 0x1118 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x277 SWAP1 PUSH2 0x1118 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x299 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9 DUP3 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP3 PUSH2 0x3E9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34F PUSH2 0x59B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x36B JUMPI POP PUSH2 0x36B DUP2 PUSH2 0x1EF PUSH2 0x59B JUMP JUMPDEST PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x391 DUP4 DUP4 PUSH2 0x59F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x3A1 PUSH2 0x59B JUMP JUMPDEST DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x391 DUP4 DUP4 DUP4 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x391 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x486 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3F5 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x24B SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x482 PUSH2 0x47B PUSH2 0x59B JUMP JUMPDEST DUP4 DUP4 PUSH2 0x7C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x491 PUSH2 0x59B JUMP JUMPDEST DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x4BF DUP5 DUP5 DUP5 DUP5 PUSH2 0x867 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4D0 DUP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA PUSH2 0x89A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x525 JUMP JUMPDEST DUP1 PUSH2 0x504 DUP5 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x515 SWAP3 SWAP2 SWAP1 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57C DUP2 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x100E JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x5D4 DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x640 JUMPI POP PUSH2 0x640 DUP2 DUP6 PUSH2 0x52C JUMP JUMPDEST DUP1 PUSH2 0x664 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x659 DUP5 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x67F DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x6D8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4BF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6EB DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0x391 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x85A SWAP1 DUP6 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x872 DUP5 DUP5 DUP5 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x87E DUP5 DUP5 DUP5 DUP5 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x8B9 DUP4 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x94A JUMPI PUSH2 0x94F JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x963 DUP4 PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB67 JUMP JUMPDEST ISZERO PUSH2 0xA84 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 PUSH2 0x9A4 PUSH2 0x59B JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA10 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA0D SWAP2 DUP2 ADD SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA3E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x664 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xACE JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xAFA JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xB18 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xB30 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xB44 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xB56 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x234 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x525 DUP3 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBC2 DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD0 PUSH1 0x20 DUP5 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBF6 DUP5 PUSH2 0xB76 JUMP JUMPDEST SWAP3 POP PUSH2 0xC04 PUSH1 0x20 DUP6 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC29 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC32 DUP6 PUSH2 0xB76 JUMP JUMPDEST SWAP4 POP PUSH2 0xC40 PUSH1 0x20 DUP7 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC63 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC76 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC88 JUMPI PUSH2 0xC88 PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCB0 PUSH2 0x1153 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCC8 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD04 DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD18 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD3E DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x525 DUP2 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x525 DUP2 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD95 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDB4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xDDA DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10EC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xDEE DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10EC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE3E SWAP1 DUP4 ADD DUP5 PUSH2 0xD9C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x525 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1107 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10EF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4BF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x112C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x114D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x23 EXTCODESIZE 0xFC ADDRESS 0xCA PUSH16 0xAAF7821AD3FEEC8F77EC5A5D6A8FE824 0xD6 0x22 PUSH17 0x2B90DCA7097064736F6C63430008010033 ","sourceMap":"628:16377:4:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:4;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:16377;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:16377:4;;;-1:-1:-1;628:16377:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:911:22;;123:3;116:4;108:6;104:17;100:27;90:2;;145:5;138;131:20;90:2;172:13;;-1:-1:-1;;;;;234:10:22;;;231:2;;;247:18;;:::i;:::-;322:2;316:9;290:2;376:13;;-1:-1:-1;;372:22:22;;;396:2;368:31;364:40;352:53;;;420:18;;;440:22;;;417:46;414:2;;;466:18;;:::i;:::-;506:10;502:2;495:22;541:2;533:6;526:18;563:4;553:14;;608:3;603:2;598;590:6;586:15;582:24;579:33;576:2;;;629:5;622;615:20;576:2;655:5;646:14;;669:133;683:2;680:1;677:9;669:133;;;771:14;;;767:23;;761:30;740:14;;;736:23;;729:63;694:10;;;;669:133;;;820:2;817:1;814:9;811:2;;;879:5;874:2;869;861:6;857:15;853:24;846:39;811:2;913:6;80:845;-1:-1:-1;;;;;;80:845:22:o;930:596::-;;;1090:2;1078:9;1069:7;1065:23;1061:32;1058:2;;;1111:6;1103;1096:22;1058:2;1143:16;;-1:-1:-1;;;;;1208:14:22;;;1205:2;;;1240:6;1232;1225:22;1205:2;1268:63;1323:7;1314:6;1303:9;1299:22;1268:63;:::i;:::-;1258:73;;1377:2;1366:9;1362:18;1356:25;1340:41;;1406:2;1396:8;1393:16;1390:2;;;1427:6;1419;1412:22;1390:2;;1455:65;1512:7;1501:8;1490:9;1486:24;1455:65;:::i;:::-;1445:75;;;1048:478;;;;;:::o;1531:380::-;1616:1;1606:12;;1663:1;1653:12;;;1674:2;;1728:4;1720:6;1716:17;1706:27;;1674:2;1781;1773:6;1770:14;1750:18;1747:38;1744:2;;;1827:10;1822:3;1818:20;1815:1;1808:31;1862:4;1859:1;1852:15;1890:4;1887:1;1880:15;1744:2;;1586:325;;;:::o;1916:127::-;1977:10;1972:3;1968:20;1965:1;1958:31;2008:4;2005:1;1998:15;2032:4;2029:1;2022:15;1948:95;628:16377:4;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10133:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"65:124:22","statements":[{"nodeType":"YulAssignment","src":"75:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"97:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"84:12:22"},"nodeType":"YulFunctionCall","src":"84:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"75:5:22"}]},{"body":{"nodeType":"YulBlock","src":"167:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:22"},"nodeType":"YulFunctionCall","src":"169:12:22"},"nodeType":"YulExpressionStatement","src":"169:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"126:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"137:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"152:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"157:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"148:3:22"},"nodeType":"YulFunctionCall","src":"148:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"144:3:22"},"nodeType":"YulFunctionCall","src":"144:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"133:3:22"},"nodeType":"YulFunctionCall","src":"133:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"123:2:22"},"nodeType":"YulFunctionCall","src":"123:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"116:6:22"},"nodeType":"YulFunctionCall","src":"116:50:22"},"nodeType":"YulIf","src":"113:2:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"44:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"55:5:22","type":""}],"src":"14:175:22"},{"body":{"nodeType":"YulBlock","src":"264:128:22","statements":[{"body":{"nodeType":"YulBlock","src":"310:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"319:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"327:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"312:6:22"},"nodeType":"YulFunctionCall","src":"312:22:22"},"nodeType":"YulExpressionStatement","src":"312:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"285:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"294:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"281:3:22"},"nodeType":"YulFunctionCall","src":"281:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"306:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"277:3:22"},"nodeType":"YulFunctionCall","src":"277:32:22"},"nodeType":"YulIf","src":"274:2:22"},{"nodeType":"YulAssignment","src":"345:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"355:20:22"},"nodeType":"YulFunctionCall","src":"355:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"345:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"230:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"241:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"253:6:22","type":""}],"src":"194:198:22"},{"body":{"nodeType":"YulBlock","src":"484:187:22","statements":[{"body":{"nodeType":"YulBlock","src":"530:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"539:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"547:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"532:6:22"},"nodeType":"YulFunctionCall","src":"532:22:22"},"nodeType":"YulExpressionStatement","src":"532:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"505:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"514:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"501:3:22"},"nodeType":"YulFunctionCall","src":"501:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"526:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"497:3:22"},"nodeType":"YulFunctionCall","src":"497:32:22"},"nodeType":"YulIf","src":"494:2:22"},{"nodeType":"YulAssignment","src":"565:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"596:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"575:20:22"},"nodeType":"YulFunctionCall","src":"575:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"565:6:22"}]},{"nodeType":"YulAssignment","src":"615:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"650:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"661:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"646:3:22"},"nodeType":"YulFunctionCall","src":"646:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"625:20:22"},"nodeType":"YulFunctionCall","src":"625:40:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"615:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"442:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"453:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"465:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"473:6:22","type":""}],"src":"397:274:22"},{"body":{"nodeType":"YulBlock","src":"780:238:22","statements":[{"body":{"nodeType":"YulBlock","src":"826:26:22","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"835:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"843:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"828:6:22"},"nodeType":"YulFunctionCall","src":"828:22:22"},"nodeType":"YulExpressionStatement","src":"828:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"801:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"810:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"797:3:22"},"nodeType":"YulFunctionCall","src":"797:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"793:3:22"},"nodeType":"YulFunctionCall","src":"793:32:22"},"nodeType":"YulIf","src":"790:2:22"},{"nodeType":"YulAssignment","src":"861:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"892:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"871:20:22"},"nodeType":"YulFunctionCall","src":"871:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"861:6:22"}]},{"nodeType":"YulAssignment","src":"911:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"946:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"957:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"942:3:22"},"nodeType":"YulFunctionCall","src":"942:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"921:20:22"},"nodeType":"YulFunctionCall","src":"921:40:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"911:6:22"}]},{"nodeType":"YulAssignment","src":"970:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"997:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1008:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"993:3:22"},"nodeType":"YulFunctionCall","src":"993:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"980:12:22"},"nodeType":"YulFunctionCall","src":"980:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"970:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"730:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"741:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"753:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"761:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"769:6:22","type":""}],"src":"676:342:22"},{"body":{"nodeType":"YulBlock","src":"1153:1057:22","statements":[{"body":{"nodeType":"YulBlock","src":"1200:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1209:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"1217:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:22"},"nodeType":"YulFunctionCall","src":"1202:22:22"},"nodeType":"YulExpressionStatement","src":"1202:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1174:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1183:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1170:3:22"},"nodeType":"YulFunctionCall","src":"1170:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1195:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1166:3:22"},"nodeType":"YulFunctionCall","src":"1166:33:22"},"nodeType":"YulIf","src":"1163:2:22"},{"nodeType":"YulAssignment","src":"1235:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1266:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1245:20:22"},"nodeType":"YulFunctionCall","src":"1245:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1235:6:22"}]},{"nodeType":"YulAssignment","src":"1285:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1320:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1331:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1316:3:22"},"nodeType":"YulFunctionCall","src":"1316:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1295:20:22"},"nodeType":"YulFunctionCall","src":"1295:40:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1285:6:22"}]},{"nodeType":"YulAssignment","src":"1344:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1371:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1382:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:22"},"nodeType":"YulFunctionCall","src":"1367:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1354:12:22"},"nodeType":"YulFunctionCall","src":"1354:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1344:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1395:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1426:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1437:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1422:3:22"},"nodeType":"YulFunctionCall","src":"1422:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1409:12:22"},"nodeType":"YulFunctionCall","src":"1409:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1399:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1450:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1460:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1454:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1505:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1514:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"1522:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1507:6:22"},"nodeType":"YulFunctionCall","src":"1507:22:22"},"nodeType":"YulExpressionStatement","src":"1507:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1493:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1501:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1490:2:22"},"nodeType":"YulFunctionCall","src":"1490:14:22"},"nodeType":"YulIf","src":"1487:2:22"},{"nodeType":"YulVariableDeclaration","src":"1540:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1554:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1565:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1550:3:22"},"nodeType":"YulFunctionCall","src":"1550:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1544:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1620:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1629:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"1637:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1622:6:22"},"nodeType":"YulFunctionCall","src":"1622:22:22"},"nodeType":"YulExpressionStatement","src":"1622:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1599:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"1603:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:22"},"nodeType":"YulFunctionCall","src":"1595:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1610:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1591:3:22"},"nodeType":"YulFunctionCall","src":"1591:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1584:6:22"},"nodeType":"YulFunctionCall","src":"1584:35:22"},"nodeType":"YulIf","src":"1581:2:22"},{"nodeType":"YulVariableDeclaration","src":"1655:26:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1678:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1665:12:22"},"nodeType":"YulFunctionCall","src":"1665:16:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1659:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1704:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1706:16:22"},"nodeType":"YulFunctionCall","src":"1706:18:22"},"nodeType":"YulExpressionStatement","src":"1706:18:22"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1696:2:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1700:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1693:2:22"},"nodeType":"YulFunctionCall","src":"1693:10:22"},"nodeType":"YulIf","src":"1690:2:22"},{"nodeType":"YulVariableDeclaration","src":"1735:17:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1749:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1745:3:22"},"nodeType":"YulFunctionCall","src":"1745:7:22"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1739:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1761:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1781:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1775:5:22"},"nodeType":"YulFunctionCall","src":"1775:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1765:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1793:71:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1815:6:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1839:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"1843:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1835:3:22"},"nodeType":"YulFunctionCall","src":"1835:13:22"},{"name":"_4","nodeType":"YulIdentifier","src":"1850:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1831:3:22"},"nodeType":"YulFunctionCall","src":"1831:22:22"},{"kind":"number","nodeType":"YulLiteral","src":"1855:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1827:3:22"},"nodeType":"YulFunctionCall","src":"1827:31:22"},{"name":"_4","nodeType":"YulIdentifier","src":"1860:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1823:3:22"},"nodeType":"YulFunctionCall","src":"1823:40:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1811:3:22"},"nodeType":"YulFunctionCall","src":"1811:53:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1797:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1923:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1925:16:22"},"nodeType":"YulFunctionCall","src":"1925:18:22"},"nodeType":"YulExpressionStatement","src":"1925:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1882:10:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1894:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1879:2:22"},"nodeType":"YulFunctionCall","src":"1879:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1902:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1914:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1899:2:22"},"nodeType":"YulFunctionCall","src":"1899:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1876:2:22"},"nodeType":"YulFunctionCall","src":"1876:46:22"},"nodeType":"YulIf","src":"1873:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1961:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1965:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1954:6:22"},"nodeType":"YulFunctionCall","src":"1954:22:22"},"nodeType":"YulExpressionStatement","src":"1954:22:22"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1992:6:22"},{"name":"_3","nodeType":"YulIdentifier","src":"2000:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1985:6:22"},"nodeType":"YulFunctionCall","src":"1985:18:22"},"nodeType":"YulExpressionStatement","src":"1985:18:22"},{"body":{"nodeType":"YulBlock","src":"2049:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2058:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"2066:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2051:6:22"},"nodeType":"YulFunctionCall","src":"2051:22:22"},"nodeType":"YulExpressionStatement","src":"2051:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2026:2:22"},{"name":"_3","nodeType":"YulIdentifier","src":"2030:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2022:3:22"},"nodeType":"YulFunctionCall","src":"2022:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2035:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:22"},"nodeType":"YulFunctionCall","src":"2018:20:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2015:2:22"},"nodeType":"YulFunctionCall","src":"2015:33:22"},"nodeType":"YulIf","src":"2012:2:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2101:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2109:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2097:3:22"},"nodeType":"YulFunctionCall","src":"2097:15:22"},{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"2118:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"2122:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2114:3:22"},"nodeType":"YulFunctionCall","src":"2114:11:22"},{"name":"_3","nodeType":"YulIdentifier","src":"2127:2:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2084:12:22"},"nodeType":"YulFunctionCall","src":"2084:46:22"},"nodeType":"YulExpressionStatement","src":"2084:46:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2154:6:22"},{"name":"_3","nodeType":"YulIdentifier","src":"2162:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2150:3:22"},"nodeType":"YulFunctionCall","src":"2150:15:22"},{"kind":"number","nodeType":"YulLiteral","src":"2167:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2146:3:22"},"nodeType":"YulFunctionCall","src":"2146:24:22"},{"name":"value3","nodeType":"YulIdentifier","src":"2172:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2139:6:22"},"nodeType":"YulFunctionCall","src":"2139:40:22"},"nodeType":"YulExpressionStatement","src":"2139:40:22"},{"nodeType":"YulAssignment","src":"2188:16:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"2198:6:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2188:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1095:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1106:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1118:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1126:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1134:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1142:6:22","type":""}],"src":"1023:1187:22"},{"body":{"nodeType":"YulBlock","src":"2299:285:22","statements":[{"body":{"nodeType":"YulBlock","src":"2345:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2354:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2362:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:22"},"nodeType":"YulFunctionCall","src":"2347:22:22"},"nodeType":"YulExpressionStatement","src":"2347:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2320:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2329:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2316:3:22"},"nodeType":"YulFunctionCall","src":"2316:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2312:3:22"},"nodeType":"YulFunctionCall","src":"2312:32:22"},"nodeType":"YulIf","src":"2309:2:22"},{"nodeType":"YulAssignment","src":"2380:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2411:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2390:20:22"},"nodeType":"YulFunctionCall","src":"2390:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2380:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2430:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2471:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2456:3:22"},"nodeType":"YulFunctionCall","src":"2456:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2443:12:22"},"nodeType":"YulFunctionCall","src":"2443:32:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2434:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2528:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2537:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"2545:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2530:6:22"},"nodeType":"YulFunctionCall","src":"2530:22:22"},"nodeType":"YulExpressionStatement","src":"2530:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2497:5:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2518:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2511:6:22"},"nodeType":"YulFunctionCall","src":"2511:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2504:6:22"},"nodeType":"YulFunctionCall","src":"2504:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2494:2:22"},"nodeType":"YulFunctionCall","src":"2494:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2487:6:22"},"nodeType":"YulFunctionCall","src":"2487:40:22"},"nodeType":"YulIf","src":"2484:2:22"},{"nodeType":"YulAssignment","src":"2563:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2573:5:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2563:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2257:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2268:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2280:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2288:6:22","type":""}],"src":"2215:369:22"},{"body":{"nodeType":"YulBlock","src":"2676:179:22","statements":[{"body":{"nodeType":"YulBlock","src":"2722:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2731:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2739:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2724:6:22"},"nodeType":"YulFunctionCall","src":"2724:22:22"},"nodeType":"YulExpressionStatement","src":"2724:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2697:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2706:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2693:3:22"},"nodeType":"YulFunctionCall","src":"2693:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2718:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2689:3:22"},"nodeType":"YulFunctionCall","src":"2689:32:22"},"nodeType":"YulIf","src":"2686:2:22"},{"nodeType":"YulAssignment","src":"2757:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2788:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2767:20:22"},"nodeType":"YulFunctionCall","src":"2767:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2757:6:22"}]},{"nodeType":"YulAssignment","src":"2807:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2834:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2845:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2830:3:22"},"nodeType":"YulFunctionCall","src":"2830:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2817:12:22"},"nodeType":"YulFunctionCall","src":"2817:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2807:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2634:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2645:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2657:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2665:6:22","type":""}],"src":"2589:266:22"},{"body":{"nodeType":"YulBlock","src":"2929:188:22","statements":[{"body":{"nodeType":"YulBlock","src":"2975:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2984:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2992:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2977:6:22"},"nodeType":"YulFunctionCall","src":"2977:22:22"},"nodeType":"YulExpressionStatement","src":"2977:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2950:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2959:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2946:3:22"},"nodeType":"YulFunctionCall","src":"2946:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2971:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2942:3:22"},"nodeType":"YulFunctionCall","src":"2942:32:22"},"nodeType":"YulIf","src":"2939:2:22"},{"nodeType":"YulVariableDeclaration","src":"3010:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3036:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3023:12:22"},"nodeType":"YulFunctionCall","src":"3023:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3014:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3081:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"3055:25:22"},"nodeType":"YulFunctionCall","src":"3055:32:22"},"nodeType":"YulExpressionStatement","src":"3055:32:22"},{"nodeType":"YulAssignment","src":"3096:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3106:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3096:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2895:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2906:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2918:6:22","type":""}],"src":"2860:257:22"},{"body":{"nodeType":"YulBlock","src":"3202:181:22","statements":[{"body":{"nodeType":"YulBlock","src":"3248:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3257:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3265:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3250:6:22"},"nodeType":"YulFunctionCall","src":"3250:22:22"},"nodeType":"YulExpressionStatement","src":"3250:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3223:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3219:3:22"},"nodeType":"YulFunctionCall","src":"3219:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3244:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3215:3:22"},"nodeType":"YulFunctionCall","src":"3215:32:22"},"nodeType":"YulIf","src":"3212:2:22"},{"nodeType":"YulVariableDeclaration","src":"3283:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3302:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3296:5:22"},"nodeType":"YulFunctionCall","src":"3296:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3287:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3347:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"3321:25:22"},"nodeType":"YulFunctionCall","src":"3321:32:22"},"nodeType":"YulExpressionStatement","src":"3321:32:22"},{"nodeType":"YulAssignment","src":"3362:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3372:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3362:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3168:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3179:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3191:6:22","type":""}],"src":"3122:261:22"},{"body":{"nodeType":"YulBlock","src":"3458:120:22","statements":[{"body":{"nodeType":"YulBlock","src":"3504:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3521:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3506:6:22"},"nodeType":"YulFunctionCall","src":"3506:22:22"},"nodeType":"YulExpressionStatement","src":"3506:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3479:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3488:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3475:3:22"},"nodeType":"YulFunctionCall","src":"3475:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3500:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3471:3:22"},"nodeType":"YulFunctionCall","src":"3471:32:22"},"nodeType":"YulIf","src":"3468:2:22"},{"nodeType":"YulAssignment","src":"3539:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3562:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3549:12:22"},"nodeType":"YulFunctionCall","src":"3549:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3539:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3424:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3435:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3447:6:22","type":""}],"src":"3388:190:22"},{"body":{"nodeType":"YulBlock","src":"3634:208:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3644:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3664:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3658:5:22"},"nodeType":"YulFunctionCall","src":"3658:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3648:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3686:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3691:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:22"},"nodeType":"YulFunctionCall","src":"3679:19:22"},"nodeType":"YulExpressionStatement","src":"3679:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3733:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3740:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3729:3:22"},"nodeType":"YulFunctionCall","src":"3729:16:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3751:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3756:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3747:3:22"},"nodeType":"YulFunctionCall","src":"3747:14:22"},{"name":"length","nodeType":"YulIdentifier","src":"3763:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"3707:21:22"},"nodeType":"YulFunctionCall","src":"3707:63:22"},"nodeType":"YulExpressionStatement","src":"3707:63:22"},{"nodeType":"YulAssignment","src":"3779:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3794:3:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3807:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3815:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3803:3:22"},"nodeType":"YulFunctionCall","src":"3803:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3824:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3820:3:22"},"nodeType":"YulFunctionCall","src":"3820:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3799:3:22"},"nodeType":"YulFunctionCall","src":"3799:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:22"},"nodeType":"YulFunctionCall","src":"3790:39:22"},{"kind":"number","nodeType":"YulLiteral","src":"3831:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3786:3:22"},"nodeType":"YulFunctionCall","src":"3786:50:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3779:3:22"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3611:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3618:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3626:3:22","type":""}],"src":"3583:259:22"},{"body":{"nodeType":"YulBlock","src":"4034:283:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4044:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4064:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4058:5:22"},"nodeType":"YulFunctionCall","src":"4058:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4048:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4106:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4114:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:22"},"nodeType":"YulFunctionCall","src":"4102:17:22"},{"name":"pos","nodeType":"YulIdentifier","src":"4121:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4126:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4080:21:22"},"nodeType":"YulFunctionCall","src":"4080:53:22"},"nodeType":"YulExpressionStatement","src":"4080:53:22"},{"nodeType":"YulVariableDeclaration","src":"4142:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4159:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4164:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4155:3:22"},"nodeType":"YulFunctionCall","src":"4155:16:22"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"4146:5:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4180:29:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4202:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4196:5:22"},"nodeType":"YulFunctionCall","src":"4196:13:22"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"4184:8:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4244:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4252:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:22"},"nodeType":"YulFunctionCall","src":"4240:17:22"},{"name":"end_1","nodeType":"YulIdentifier","src":"4259:5:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"4266:8:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4218:21:22"},"nodeType":"YulFunctionCall","src":"4218:57:22"},"nodeType":"YulExpressionStatement","src":"4218:57:22"},{"nodeType":"YulAssignment","src":"4284:27:22","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"4295:5:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"4302:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4291:3:22"},"nodeType":"YulFunctionCall","src":"4291:20:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4284:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4002:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4007:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4015:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4026:3:22","type":""}],"src":"3847:470:22"},{"body":{"nodeType":"YulBlock","src":"4423:102:22","statements":[{"nodeType":"YulAssignment","src":"4433:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4445:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4456:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4441:3:22"},"nodeType":"YulFunctionCall","src":"4441:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4433:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4475:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4490:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4506:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4511:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4502:3:22"},"nodeType":"YulFunctionCall","src":"4502:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"4515:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4498:3:22"},"nodeType":"YulFunctionCall","src":"4498:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4486:3:22"},"nodeType":"YulFunctionCall","src":"4486:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4468:6:22"},"nodeType":"YulFunctionCall","src":"4468:51:22"},"nodeType":"YulExpressionStatement","src":"4468:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4392:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4403:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4414:4:22","type":""}],"src":"4322:203:22"},{"body":{"nodeType":"YulBlock","src":"4733:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4743:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4761:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4757:3:22"},"nodeType":"YulFunctionCall","src":"4757:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"4770:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4753:3:22"},"nodeType":"YulFunctionCall","src":"4753:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4747:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4788:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4803:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4811:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4799:3:22"},"nodeType":"YulFunctionCall","src":"4799:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4781:6:22"},"nodeType":"YulFunctionCall","src":"4781:34:22"},"nodeType":"YulExpressionStatement","src":"4781:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4835:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4846:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4831:3:22"},"nodeType":"YulFunctionCall","src":"4831:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4855:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4863:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4851:3:22"},"nodeType":"YulFunctionCall","src":"4851:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4824:6:22"},"nodeType":"YulFunctionCall","src":"4824:43:22"},"nodeType":"YulExpressionStatement","src":"4824:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4898:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:22"},"nodeType":"YulFunctionCall","src":"4883:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"4903:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4876:6:22"},"nodeType":"YulFunctionCall","src":"4876:34:22"},"nodeType":"YulExpressionStatement","src":"4876:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4941:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:22"},"nodeType":"YulFunctionCall","src":"4926:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4946:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4919:6:22"},"nodeType":"YulFunctionCall","src":"4919:31:22"},"nodeType":"YulExpressionStatement","src":"4919:31:22"},{"nodeType":"YulAssignment","src":"4959:55:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4986:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4998:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5009:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4994:3:22"},"nodeType":"YulFunctionCall","src":"4994:19:22"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"4967:18:22"},"nodeType":"YulFunctionCall","src":"4967:47:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4959:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4678:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4689:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4697:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4705:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4713:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4724:4:22","type":""}],"src":"4530:490:22"},{"body":{"nodeType":"YulBlock","src":"5120:92:22","statements":[{"nodeType":"YulAssignment","src":"5130:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5142:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5153:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5138:3:22"},"nodeType":"YulFunctionCall","src":"5138:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5130:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5172:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5197:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5190:6:22"},"nodeType":"YulFunctionCall","src":"5190:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5183:6:22"},"nodeType":"YulFunctionCall","src":"5183:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5165:6:22"},"nodeType":"YulFunctionCall","src":"5165:41:22"},"nodeType":"YulExpressionStatement","src":"5165:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5089:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5100:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:22","type":""}],"src":"5025:187:22"},{"body":{"nodeType":"YulBlock","src":"5338:100:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5355:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5366:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5348:6:22"},"nodeType":"YulFunctionCall","src":"5348:21:22"},"nodeType":"YulExpressionStatement","src":"5348:21:22"},{"nodeType":"YulAssignment","src":"5378:54:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5405:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5417:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5428:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5413:3:22"},"nodeType":"YulFunctionCall","src":"5413:18:22"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"5386:18:22"},"nodeType":"YulFunctionCall","src":"5386:46:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5378:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5307:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5318:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5329:4:22","type":""}],"src":"5217:221:22"},{"body":{"nodeType":"YulBlock","src":"5617:235:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5634:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5645:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5627:6:22"},"nodeType":"YulFunctionCall","src":"5627:21:22"},"nodeType":"YulExpressionStatement","src":"5627:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5668:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5679:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5664:3:22"},"nodeType":"YulFunctionCall","src":"5664:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"5684:2:22","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5657:6:22"},"nodeType":"YulFunctionCall","src":"5657:30:22"},"nodeType":"YulExpressionStatement","src":"5657:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5707:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5718:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5703:3:22"},"nodeType":"YulFunctionCall","src":"5703:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"5723:34:22","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5696:6:22"},"nodeType":"YulFunctionCall","src":"5696:62:22"},"nodeType":"YulExpressionStatement","src":"5696:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5778:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5789:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5774:3:22"},"nodeType":"YulFunctionCall","src":"5774:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"5794:15:22","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5767:6:22"},"nodeType":"YulFunctionCall","src":"5767:43:22"},"nodeType":"YulExpressionStatement","src":"5767:43:22"},{"nodeType":"YulAssignment","src":"5819:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5831:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5842:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5827:3:22"},"nodeType":"YulFunctionCall","src":"5827:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5819:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5594:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5608:4:22","type":""}],"src":"5443:409:22"},{"body":{"nodeType":"YulBlock","src":"6031:240:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6059:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6041:6:22"},"nodeType":"YulFunctionCall","src":"6041:21:22"},"nodeType":"YulExpressionStatement","src":"6041:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6082:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6093:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6078:3:22"},"nodeType":"YulFunctionCall","src":"6078:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6098:2:22","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6071:6:22"},"nodeType":"YulFunctionCall","src":"6071:30:22"},"nodeType":"YulExpressionStatement","src":"6071:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6121:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6132:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6117:3:22"},"nodeType":"YulFunctionCall","src":"6117:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6137:34:22","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6110:6:22"},"nodeType":"YulFunctionCall","src":"6110:62:22"},"nodeType":"YulExpressionStatement","src":"6110:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6192:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6203:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6188:3:22"},"nodeType":"YulFunctionCall","src":"6188:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6208:20:22","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6181:6:22"},"nodeType":"YulFunctionCall","src":"6181:48:22"},"nodeType":"YulExpressionStatement","src":"6181:48:22"},{"nodeType":"YulAssignment","src":"6238:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6250:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6261:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6246:3:22"},"nodeType":"YulFunctionCall","src":"6246:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6238:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6008:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6022:4:22","type":""}],"src":"5857:414:22"},{"body":{"nodeType":"YulBlock","src":"6450:227:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6467:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6478:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6460:6:22"},"nodeType":"YulFunctionCall","src":"6460:21:22"},"nodeType":"YulExpressionStatement","src":"6460:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6512:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:22"},"nodeType":"YulFunctionCall","src":"6497:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6517:2:22","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:22"},"nodeType":"YulFunctionCall","src":"6490:30:22"},"nodeType":"YulExpressionStatement","src":"6490:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6551:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:22"},"nodeType":"YulFunctionCall","src":"6536:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6556:34:22","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6529:6:22"},"nodeType":"YulFunctionCall","src":"6529:62:22"},"nodeType":"YulExpressionStatement","src":"6529:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6611:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6622:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6607:3:22"},"nodeType":"YulFunctionCall","src":"6607:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6627:7:22","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6600:6:22"},"nodeType":"YulFunctionCall","src":"6600:35:22"},"nodeType":"YulExpressionStatement","src":"6600:35:22"},{"nodeType":"YulAssignment","src":"6644:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6656:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6667:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6652:3:22"},"nodeType":"YulFunctionCall","src":"6652:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6644:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6427:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6441:4:22","type":""}],"src":"6276:401:22"},{"body":{"nodeType":"YulBlock","src":"6856:226:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6873:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6884:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6866:6:22"},"nodeType":"YulFunctionCall","src":"6866:21:22"},"nodeType":"YulExpressionStatement","src":"6866:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6907:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6918:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6903:3:22"},"nodeType":"YulFunctionCall","src":"6903:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6923:2:22","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6896:6:22"},"nodeType":"YulFunctionCall","src":"6896:30:22"},"nodeType":"YulExpressionStatement","src":"6896:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:22"},"nodeType":"YulFunctionCall","src":"6942:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6962:34:22","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6935:6:22"},"nodeType":"YulFunctionCall","src":"6935:62:22"},"nodeType":"YulExpressionStatement","src":"6935:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7017:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7028:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7013:3:22"},"nodeType":"YulFunctionCall","src":"7013:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7033:6:22","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7006:6:22"},"nodeType":"YulFunctionCall","src":"7006:34:22"},"nodeType":"YulExpressionStatement","src":"7006:34:22"},{"nodeType":"YulAssignment","src":"7049:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7061:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7072:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7057:3:22"},"nodeType":"YulFunctionCall","src":"7057:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7049:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6833:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6847:4:22","type":""}],"src":"6682:400:22"},{"body":{"nodeType":"YulBlock","src":"7261:175:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7278:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7289:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7271:6:22"},"nodeType":"YulFunctionCall","src":"7271:21:22"},"nodeType":"YulExpressionStatement","src":"7271:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7312:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7323:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7308:3:22"},"nodeType":"YulFunctionCall","src":"7308:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7328:2:22","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7301:6:22"},"nodeType":"YulFunctionCall","src":"7301:30:22"},"nodeType":"YulExpressionStatement","src":"7301:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7362:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7347:3:22"},"nodeType":"YulFunctionCall","src":"7347:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7367:27:22","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7340:6:22"},"nodeType":"YulFunctionCall","src":"7340:55:22"},"nodeType":"YulExpressionStatement","src":"7340:55:22"},{"nodeType":"YulAssignment","src":"7404:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7416:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7427:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7412:3:22"},"nodeType":"YulFunctionCall","src":"7412:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7404:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7238:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7252:4:22","type":""}],"src":"7087:349:22"},{"body":{"nodeType":"YulBlock","src":"7615:231:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7632:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7643:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7625:6:22"},"nodeType":"YulFunctionCall","src":"7625:21:22"},"nodeType":"YulExpressionStatement","src":"7625:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7666:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7677:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7662:3:22"},"nodeType":"YulFunctionCall","src":"7662:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7682:2:22","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7655:6:22"},"nodeType":"YulFunctionCall","src":"7655:30:22"},"nodeType":"YulExpressionStatement","src":"7655:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7705:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7716:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7701:3:22"},"nodeType":"YulFunctionCall","src":"7701:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7721:34:22","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7694:6:22"},"nodeType":"YulFunctionCall","src":"7694:62:22"},"nodeType":"YulExpressionStatement","src":"7694:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7776:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7787:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7772:3:22"},"nodeType":"YulFunctionCall","src":"7772:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7792:11:22","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7765:6:22"},"nodeType":"YulFunctionCall","src":"7765:39:22"},"nodeType":"YulExpressionStatement","src":"7765:39:22"},{"nodeType":"YulAssignment","src":"7813:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7825:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7836:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7821:3:22"},"nodeType":"YulFunctionCall","src":"7821:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7813:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7592:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7606:4:22","type":""}],"src":"7441:405:22"},{"body":{"nodeType":"YulBlock","src":"8025:174:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8042:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8053:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8035:6:22"},"nodeType":"YulFunctionCall","src":"8035:21:22"},"nodeType":"YulExpressionStatement","src":"8035:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8076:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8087:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8072:3:22"},"nodeType":"YulFunctionCall","src":"8072:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8092:2:22","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8065:6:22"},"nodeType":"YulFunctionCall","src":"8065:30:22"},"nodeType":"YulExpressionStatement","src":"8065:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8115:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8126:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8111:3:22"},"nodeType":"YulFunctionCall","src":"8111:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8131:26:22","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8104:6:22"},"nodeType":"YulFunctionCall","src":"8104:54:22"},"nodeType":"YulExpressionStatement","src":"8104:54:22"},{"nodeType":"YulAssignment","src":"8167:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8179:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8190:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8175:3:22"},"nodeType":"YulFunctionCall","src":"8175:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8167:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8002:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8016:4:22","type":""}],"src":"7851:348:22"},{"body":{"nodeType":"YulBlock","src":"8378:223:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8395:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8406:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8388:6:22"},"nodeType":"YulFunctionCall","src":"8388:21:22"},"nodeType":"YulExpressionStatement","src":"8388:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8429:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8440:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8425:3:22"},"nodeType":"YulFunctionCall","src":"8425:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8445:2:22","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8418:6:22"},"nodeType":"YulFunctionCall","src":"8418:30:22"},"nodeType":"YulExpressionStatement","src":"8418:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8468:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8479:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8464:3:22"},"nodeType":"YulFunctionCall","src":"8464:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8484:34:22","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8457:6:22"},"nodeType":"YulFunctionCall","src":"8457:62:22"},"nodeType":"YulExpressionStatement","src":"8457:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8539:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8550:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8535:3:22"},"nodeType":"YulFunctionCall","src":"8535:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8555:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8528:6:22"},"nodeType":"YulFunctionCall","src":"8528:31:22"},"nodeType":"YulExpressionStatement","src":"8528:31:22"},{"nodeType":"YulAssignment","src":"8568:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8580:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8591:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8576:3:22"},"nodeType":"YulFunctionCall","src":"8576:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8568:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8355:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8369:4:22","type":""}],"src":"8204:397:22"},{"body":{"nodeType":"YulBlock","src":"8780:251:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8797:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8808:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8790:6:22"},"nodeType":"YulFunctionCall","src":"8790:21:22"},"nodeType":"YulExpressionStatement","src":"8790:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8831:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8842:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:22"},"nodeType":"YulFunctionCall","src":"8827:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8847:2:22","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8820:6:22"},"nodeType":"YulFunctionCall","src":"8820:30:22"},"nodeType":"YulExpressionStatement","src":"8820:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8870:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8881:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8866:3:22"},"nodeType":"YulFunctionCall","src":"8866:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8886:34:22","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8859:6:22"},"nodeType":"YulFunctionCall","src":"8859:62:22"},"nodeType":"YulExpressionStatement","src":"8859:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8941:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8952:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8937:3:22"},"nodeType":"YulFunctionCall","src":"8937:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8957:31:22","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8930:6:22"},"nodeType":"YulFunctionCall","src":"8930:59:22"},"nodeType":"YulExpressionStatement","src":"8930:59:22"},{"nodeType":"YulAssignment","src":"8998:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9010:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9021:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9006:3:22"},"nodeType":"YulFunctionCall","src":"9006:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8998:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8757:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8771:4:22","type":""}],"src":"8606:425:22"},{"body":{"nodeType":"YulBlock","src":"9137:76:22","statements":[{"nodeType":"YulAssignment","src":"9147:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9159:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9170:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9155:3:22"},"nodeType":"YulFunctionCall","src":"9155:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9147:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9189:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"9200:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9182:6:22"},"nodeType":"YulFunctionCall","src":"9182:25:22"},"nodeType":"YulExpressionStatement","src":"9182:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9106:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9117:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9128:4:22","type":""}],"src":"9036:177:22"},{"body":{"nodeType":"YulBlock","src":"9271:205:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9281:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9290:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9285:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9350:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9375:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"9380:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9371:3:22"},"nodeType":"YulFunctionCall","src":"9371:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9394:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"9399:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9390:3:22"},"nodeType":"YulFunctionCall","src":"9390:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9384:5:22"},"nodeType":"YulFunctionCall","src":"9384:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9364:6:22"},"nodeType":"YulFunctionCall","src":"9364:39:22"},"nodeType":"YulExpressionStatement","src":"9364:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9311:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"9314:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9308:2:22"},"nodeType":"YulFunctionCall","src":"9308:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9322:19:22","statements":[{"nodeType":"YulAssignment","src":"9324:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9333:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"9336:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9329:3:22"},"nodeType":"YulFunctionCall","src":"9329:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9324:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"9304:3:22","statements":[]},"src":"9300:113:22"},{"body":{"nodeType":"YulBlock","src":"9439:31:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9452:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"9457:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9448:3:22"},"nodeType":"YulFunctionCall","src":"9448:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"9466:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9441:6:22"},"nodeType":"YulFunctionCall","src":"9441:27:22"},"nodeType":"YulExpressionStatement","src":"9441:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9428:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"9431:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9425:2:22"},"nodeType":"YulFunctionCall","src":"9425:13:22"},"nodeType":"YulIf","src":"9422:2:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9249:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9254:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"9259:6:22","type":""}],"src":"9218:258:22"},{"body":{"nodeType":"YulBlock","src":"9536:325:22","statements":[{"nodeType":"YulAssignment","src":"9546:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9560:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"9566:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9556:3:22"},"nodeType":"YulFunctionCall","src":"9556:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9546:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"9577:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9607:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"9613:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9603:3:22"},"nodeType":"YulFunctionCall","src":"9603:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"9581:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9654:31:22","statements":[{"nodeType":"YulAssignment","src":"9656:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9670:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9678:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9666:3:22"},"nodeType":"YulFunctionCall","src":"9666:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9656:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9634:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9627:6:22"},"nodeType":"YulFunctionCall","src":"9627:26:22"},"nodeType":"YulIf","src":"9624:2:22"},{"body":{"nodeType":"YulBlock","src":"9744:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9765:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9772:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9777:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9768:3:22"},"nodeType":"YulFunctionCall","src":"9768:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9758:6:22"},"nodeType":"YulFunctionCall","src":"9758:31:22"},"nodeType":"YulExpressionStatement","src":"9758:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9809:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9812:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9802:6:22"},"nodeType":"YulFunctionCall","src":"9802:15:22"},"nodeType":"YulExpressionStatement","src":"9802:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9837:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9840:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9830:6:22"},"nodeType":"YulFunctionCall","src":"9830:15:22"},"nodeType":"YulExpressionStatement","src":"9830:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"9700:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9723:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9731:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9720:2:22"},"nodeType":"YulFunctionCall","src":"9720:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9697:2:22"},"nodeType":"YulFunctionCall","src":"9697:38:22"},"nodeType":"YulIf","src":"9694:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9516:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"9525:6:22","type":""}],"src":"9481:380:22"},{"body":{"nodeType":"YulBlock","src":"9898:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9915:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9922:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9927:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9918:3:22"},"nodeType":"YulFunctionCall","src":"9918:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9908:6:22"},"nodeType":"YulFunctionCall","src":"9908:31:22"},"nodeType":"YulExpressionStatement","src":"9908:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9955:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9958:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9948:6:22"},"nodeType":"YulFunctionCall","src":"9948:15:22"},"nodeType":"YulExpressionStatement","src":"9948:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9979:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9982:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9972:6:22"},"nodeType":"YulFunctionCall","src":"9972:15:22"},"nodeType":"YulExpressionStatement","src":"9972:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9866:127:22"},{"body":{"nodeType":"YulBlock","src":"10044:87:22","statements":[{"body":{"nodeType":"YulBlock","src":"10109:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10118:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10121:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10111:6:22"},"nodeType":"YulFunctionCall","src":"10111:12:22"},"nodeType":"YulExpressionStatement","src":"10111:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10067:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10078:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10089:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10094:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10085:3:22"},"nodeType":"YulFunctionCall","src":"10085:20:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10074:3:22"},"nodeType":"YulFunctionCall","src":"10074:32:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10064:2:22"},"nodeType":"YulFunctionCall","src":"10064:43:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10057:6:22"},"nodeType":"YulFunctionCall","src":"10057:51:22"},"nodeType":"YulIf","src":"10054:2:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10033:5:22","type":""}],"src":"9998:133:22"}]},"contents":"{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value3, value3) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value3)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e1576100cf565b80636352211e1461016d57806370a082311461018057806395d89b41146101a0576100cf565b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610d4c565b6101f4565b6040516100f49190610e48565b60405180910390f35b61010561023c565b6040516100f49190610e53565b610125610120366004610d84565b6102ce565b6040516100f49190610df7565b610145610140366004610d23565b6102f5565b005b610145610155366004610bd9565b610396565b610145610168366004610bd9565b6103ce565b61012561017b366004610d84565b6103e9565b61019361018e366004610b8d565b61041d565b6040516100f491906110e3565b610105610461565b6101456101b6366004610ce9565b610470565b6101456101c9366004610c14565b610486565b6101056101dc366004610d84565b6104c5565b6100e76101ef366004610ba7565b61052c565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b8061023457506102348261055a565b90505b919050565b60606000805461024b90611118565b80601f016020809104026020016040519081016040528092919081815260200182805461027790611118565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b60006102d982610573565b506000908152600460205260409020546001600160a01b031690565b6000610300826103e9565b9050806001600160a01b0316836001600160a01b0316141561033d5760405162461bcd60e51b815260040161033490611045565b60405180910390fd5b806001600160a01b031661034f61059b565b6001600160a01b0316148061036b575061036b816101ef61059b565b6103875760405162461bcd60e51b815260040161033490611086565b610391838361059f565b505050565b6103a76103a161059b565b8261060d565b6103c35760405162461bcd60e51b815260040161033490610e66565b61039183838361066c565b61039183838360405180602001604052806000815250610486565b6000806103f5836107a9565b90506001600160a01b0381166102345760405162461bcd60e51b81526004016103349061100e565b60006001600160a01b0382166104455760405162461bcd60e51b815260040161033490610fc5565b506001600160a01b031660009081526003602052604090205490565b60606001805461024b90611118565b61048261047b61059b565b83836107c4565b5050565b61049761049161059b565b8361060d565b6104b35760405162461bcd60e51b815260040161033490610e66565b6104bf84848484610867565b50505050565b60606104d082610573565b60006104da61089a565b905060008151116104fa5760405180602001604052806000815250610525565b80610504846108ac565b604051602001610515929190610dc8565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b61057c81610957565b6105985760405162461bcd60e51b81526004016103349061100e565b50565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906105d4826103e9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610619836103e9565b9050806001600160a01b0316846001600160a01b031614806106405750610640818561052c565b806106645750836001600160a01b0316610659846102ce565b6001600160a01b0316145b949350505050565b826001600160a01b031661067f826103e9565b6001600160a01b0316146106a55760405162461bcd60e51b815260040161033490610f05565b6001600160a01b0382166106cb5760405162461bcd60e51b815260040161033490610f4a565b6106d883838360016104bf565b826001600160a01b03166106eb826103e9565b6001600160a01b0316146107115760405162461bcd60e51b815260040161033490610f05565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a461039183838360016104bf565b6000908152600260205260409020546001600160a01b031690565b816001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161033490610f8e565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061085a908590610e48565b60405180910390a3505050565b61087284848461066c565b61087e84848484610974565b6104bf5760405162461bcd60e51b815260040161033490610eb3565b60408051602081019091526000815290565b606060006108b983610a8f565b600101905060008167ffffffffffffffff8111156108e757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610911576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461094a5761094f565b61091b565b509392505050565b600080610963836107a9565b6001600160a01b0316141592915050565b6000610988846001600160a01b0316610b67565b15610a8457836001600160a01b031663150b7a026109a461059b565b8786866040518563ffffffff1660e01b81526004016109c69493929190610e0b565b602060405180830381600087803b1580156109e057600080fd5b505af1925050508015610a10575060408051601f3d908101601f19168201909252610a0d91810190610d68565b60015b610a6a573d808015610a3e576040519150601f19603f3d011682016040523d82523d6000602084013e610a43565b606091505b508051610a625760405162461bcd60e51b815260040161033490610eb3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610664565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ace5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610afa576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b1857662386f26fc10000830492506010015b6305f5e1008310610b30576305f5e100830492506008015b6127108310610b4457612710830492506004015b60648310610b56576064830492506002015b600a83106102345760010192915050565b6001600160a01b03163b151590565b80356001600160a01b038116811461023757600080fd5b600060208284031215610b9e578081fd5b61052582610b76565b60008060408385031215610bb9578081fd5b610bc283610b76565b9150610bd060208401610b76565b90509250929050565b600080600060608486031215610bed578081fd5b610bf684610b76565b9250610c0460208501610b76565b9150604084013590509250925092565b60008060008060808587031215610c29578081fd5b610c3285610b76565b9350610c4060208601610b76565b925060408501359150606085013567ffffffffffffffff80821115610c63578283fd5b818701915087601f830112610c76578283fd5b813581811115610c8857610c88611153565b604051601f8201601f19908116603f01168101908382118183101715610cb057610cb0611153565b816040528281528a6020848701011115610cc8578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610cfb578182fd5b610d0483610b76565b915060208301358015158114610d18578182fd5b809150509250929050565b60008060408385031215610d35578182fd5b610d3e83610b76565b946020939093013593505050565b600060208284031215610d5d578081fd5b813561052581611169565b600060208284031215610d79578081fd5b815161052581611169565b600060208284031215610d95578081fd5b5035919050565b60008151808452610db48160208601602086016110ec565b601f01601f19169290920160200192915050565b60008351610dda8184602088016110ec565b835190830190610dee8183602088016110ec565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610e3e90830184610d9c565b9695505050505050565b901515815260200190565b6000602082526105256020830184610d9c565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b60208082526029908201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616040820152683634b21037bbb732b960b91b606082015260800190565b60208082526018908201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b6020808252603d908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60408201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606082015260800190565b90815260200190565b60005b838110156111075781810151838201526020016110ef565b838111156104bf5750506000910152565b60028104600182168061112c57607f821691505b6020821081141561114d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461059857600080fdfea2646970667358221220ca233bfc30ca6faaf7821ad3feec8f77ec5a5d6a8fe824d622702b90dca7097064736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1E1 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1A0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x15A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4C JUMP JUMPDEST PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x105 PUSH2 0x23C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xD23 JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x145 PUSH2 0x155 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x396 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD9 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x125 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x193 PUSH2 0x18E CALLDATASIZE PUSH1 0x4 PUSH2 0xB8D JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x461 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x486 JUMP JUMPDEST PUSH2 0x105 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1EF CALLDATASIZE PUSH1 0x4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x225 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x234 JUMPI POP PUSH2 0x234 DUP3 PUSH2 0x55A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x24B SWAP1 PUSH2 0x1118 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x277 SWAP1 PUSH2 0x1118 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x299 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9 DUP3 PUSH2 0x573 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 DUP3 PUSH2 0x3E9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x1045 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x34F PUSH2 0x59B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x36B JUMPI POP PUSH2 0x36B DUP2 PUSH2 0x1EF PUSH2 0x59B JUMP JUMPDEST PUSH2 0x387 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x391 DUP4 DUP4 PUSH2 0x59F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x3A1 PUSH2 0x59B JUMP JUMPDEST DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x391 DUP4 DUP4 DUP4 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x391 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x486 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3F5 DUP4 PUSH2 0x7A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x234 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xFC5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x24B SWAP1 PUSH2 0x1118 JUMP JUMPDEST PUSH2 0x482 PUSH2 0x47B PUSH2 0x59B JUMP JUMPDEST DUP4 DUP4 PUSH2 0x7C4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x497 PUSH2 0x491 PUSH2 0x59B JUMP JUMPDEST DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH2 0x4B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x4BF DUP5 DUP5 DUP5 DUP5 PUSH2 0x867 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4D0 DUP3 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA PUSH2 0x89A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x4FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x525 JUMP JUMPDEST DUP1 PUSH2 0x504 DUP5 PUSH2 0x8AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x515 SWAP3 SWAP2 SWAP1 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57C DUP2 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0x100E JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x5D4 DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x640 JUMPI POP PUSH2 0x640 DUP2 DUP6 PUSH2 0x52C JUMP JUMPDEST DUP1 PUSH2 0x664 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x659 DUP5 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x67F DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH2 0x6D8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4BF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6EB DUP3 PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF05 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0x391 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xF8E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0x85A SWAP1 DUP6 SWAP1 PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x872 DUP5 DUP5 DUP5 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x87E DUP5 DUP5 DUP5 DUP5 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x4BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x8B9 DUP4 PUSH2 0xA8F JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x911 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x94A JUMPI PUSH2 0x94F JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x963 DUP4 PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x988 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB67 JUMP JUMPDEST ISZERO PUSH2 0xA84 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 PUSH2 0x9A4 PUSH2 0x59B JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA10 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xA0D SWAP2 DUP2 ADD SWAP1 PUSH2 0xD68 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA6A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xA3E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xA62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP1 PUSH2 0xEB3 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x664 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xACE JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xAFA JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xB18 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xB30 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xB44 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xB56 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x234 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB9E JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x525 DUP3 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBC2 DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP PUSH2 0xBD0 PUSH1 0x20 DUP5 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBED JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBF6 DUP5 PUSH2 0xB76 JUMP JUMPDEST SWAP3 POP PUSH2 0xC04 PUSH1 0x20 DUP6 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC29 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC32 DUP6 PUSH2 0xB76 JUMP JUMPDEST SWAP4 POP PUSH2 0xC40 PUSH1 0x20 DUP7 ADD PUSH2 0xB76 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC63 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC76 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xC88 JUMPI PUSH2 0xC88 PUSH2 0x1153 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xCB0 JUMPI PUSH2 0xCB0 PUSH2 0x1153 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xCC8 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP2 DUP3 ADD PUSH1 0x20 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD04 DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD18 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xD3E DUP4 PUSH2 0xB76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x525 DUP2 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD79 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x525 DUP2 PUSH2 0x1169 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD95 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDB4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xDDA DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x10EC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xDEE DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x10EC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE3E SWAP1 DUP4 ADD DUP5 PUSH2 0xD9C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x525 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD9C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1107 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10EF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4BF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x112C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x114D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x598 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x23 EXTCODESIZE 0xFC ADDRESS 0xCA PUSH16 0xAAF7821AD3FEEC8F77EC5A5D6A8FE824 0xD6 0x22 PUSH17 0x2B90DCA7097064736F6C63430008010033 ","sourceMap":"628:16377:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3468:406::-;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2633:102::-;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;2801:::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1688:175;;1570:300;;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:4;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:4;:2;-1:-1:-1;;;;;3605:11:4;;;3597:57;;;;-1:-1:-1;;;3597:57:4;;;;;;;:::i;:::-;;;;;;;;;3702:5;-1:-1:-1;;;;;3686:21:4;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3686:21:4;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:4;;;;;;;:::i;:::-;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3468:406;;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:4;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;-1:-1:-1;;;;;;2332:19:4;;2324:56;;;;-1:-1:-1;;;2324:56:4;;;;;;;:::i;1929:204::-;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:73;;;;-1:-1:-1;;;2020:73:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2110:16:4;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:4;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:4:o;4388:162::-;-1:-1:-1;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;829:155:13:-;-1:-1:-1;;;;;;937:40:13;;-1:-1:-1;;;937:40:13;829:155;;;:::o;13240:133:4:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;-1:-1:-1;;;13313:53:4;;;;;;;:::i;:::-;13240:133;:::o;655:96:10:-;734:10;655:96;:::o;12572:171:4:-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:4;-1:-1:-1;;;;;12646:29:4;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:4;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:4;:7;-1:-1:-1;;;;;7570:16:4;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:4;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:4;;7570:87;7562:96;7404:261;-1:-1:-1;;;;7404:261:4:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:4;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:4;;11346:81;;;;-1:-1:-1;;;11346:81:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:4;;11437:65;;;;-1:-1:-1;;;11437:65:4;;;;;;;:::i;:::-;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;-1:-1:-1;;;;;11655:31:4;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:4;;11647:81;;;;-1:-1:-1;;;11647:81:4;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:4;;;;;;-1:-1:-1;;;;;12265:15:4;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:4;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;6702:115::-;6768:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;;6702:115::o;12879:277::-;12999:8;-1:-1:-1;;;;;12990:17:4;:5;-1:-1:-1;;;;;12990:17:4;;;12982:55;;;;-1:-1:-1;;;12982:55:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;13047:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:4;;;;;;;13108:41;;;;;13047:46;;13108:41;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:4;;;;;;;:::i;3319:92::-;3395:9;;;;;;;;;-1:-1:-1;3395:9:4;;3319:92;:::o;447:696:12:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;-1:-1:-1;;;627:18:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:12;-1:-1:-1;604:41:12;-1:-1:-1;765:28:12;;;781:2;765:28;820:280;-1:-1:-1;;851:5:12;-1:-1:-1;;;985:2:12;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1068:10:12;1064:21;;1080:5;;1064:21;820:280;;;-1:-1:-1;1120:6:12;447:696;-1:-1:-1;;;447:696:12:o;7120:126:4:-;7185:4;;7208:17;7217:7;7208:8;:17::i;:::-;-1:-1:-1;;;;;7208:31:4;;;;7120:126;-1:-1:-1;;7120:126:4:o;13925:831::-;14074:4;14094:15;:2;-1:-1:-1;;;;;14094:13:4;;:15::i;:::-;14090:660;;;14145:2;-1:-1:-1;;;;;14129:36:4;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:4;;;;;;;;-1:-1:-1;;14129:71:4;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14367:13:4;;14363:321;;14409:60;;-1:-1:-1;;;14409:60:4;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:4;-1:-1:-1;;;14250:51:4;;-1:-1:-1;14243:58:4;;14090:660;-1:-1:-1;14735:4:4;13925:831;;;;;;:::o;10139:916:15:-;10192:7;;-1:-1:-1;;;10267:17:15;;10263:103;;-1:-1:-1;;;10304:17:15;;;-1:-1:-1;10349:2:15;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:15;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:15;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:15;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:15;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:15;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;10139:916;-1:-1:-1;;10139:916:15:o;1412:320:9:-;-1:-1:-1;;;;;1702:19:9;;:23;;;1412:320::o;14:175:22:-;84:20;;-1:-1:-1;;;;;133:31:22;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:1187::-;;;;;1195:3;1183:9;1174:7;1170:23;1166:33;1163:2;;;1217:6;1209;1202:22;1163:2;1245:31;1266:9;1245:31;:::i;:::-;1235:41;;1295:40;1331:2;1320:9;1316:18;1295:40;:::i;:::-;1285:50;;1382:2;1371:9;1367:18;1354:32;1344:42;;1437:2;1426:9;1422:18;1409:32;1460:18;1501:2;1493:6;1490:14;1487:2;;;1522:6;1514;1507:22;1487:2;1565:6;1554:9;1550:22;1540:32;;1610:7;1603:4;1599:2;1595:13;1591:27;1581:2;;1637:6;1629;1622:22;1581:2;1678;1665:16;1700:2;1696;1693:10;1690:2;;;1706:18;;:::i;:::-;1781:2;1775:9;1749:2;1835:13;;-1:-1:-1;;1831:22:22;;;1855:2;1827:31;1823:40;1811:53;;;1879:18;;;1899:22;;;1876:46;1873:2;;;1925:18;;:::i;:::-;1965:10;1961:2;1954:22;2000:2;1992:6;1985:18;2040:7;2035:2;2030;2026;2022:11;2018:20;2015:33;2012:2;;;2066:6;2058;2051:22;2012:2;2127;2122;2118;2114:11;2109:2;2101:6;2097:15;2084:46;2150:15;;;2167:2;2146:24;2139:40;;;;1153:1057;;;;-1:-1:-1;1153:1057:22;;-1:-1:-1;;;;1153:1057:22:o;2215:369::-;;;2341:2;2329:9;2320:7;2316:23;2312:32;2309:2;;;2362:6;2354;2347:22;2309:2;2390:31;2411:9;2390:31;:::i;:::-;2380:41;;2471:2;2460:9;2456:18;2443:32;2518:5;2511:13;2504:21;2497:5;2494:32;2484:2;;2545:6;2537;2530:22;2484:2;2573:5;2563:15;;;2299:285;;;;;:::o;2589:266::-;;;2718:2;2706:9;2697:7;2693:23;2689:32;2686:2;;;2739:6;2731;2724:22;2686:2;2767:31;2788:9;2767:31;:::i;:::-;2757:41;2845:2;2830:18;;;;2817:32;;-1:-1:-1;;;2676:179:22:o;2860:257::-;;2971:2;2959:9;2950:7;2946:23;2942:32;2939:2;;;2992:6;2984;2977:22;2939:2;3036:9;3023:23;3055:32;3081:5;3055:32;:::i;3122:261::-;;3244:2;3232:9;3223:7;3219:23;3215:32;3212:2;;;3265:6;3257;3250:22;3212:2;3302:9;3296:16;3321:32;3347:5;3321:32;:::i;3388:190::-;;3500:2;3488:9;3479:7;3475:23;3471:32;3468:2;;;3521:6;3513;3506:22;3468:2;-1:-1:-1;3549:23:22;;3458:120;-1:-1:-1;3458:120:22:o;3583:259::-;;3664:5;3658:12;3691:6;3686:3;3679:19;3707:63;3763:6;3756:4;3751:3;3747:14;3740:4;3733:5;3729:16;3707:63;:::i;:::-;3824:2;3803:15;-1:-1:-1;;3799:29:22;3790:39;;;;3831:4;3786:50;;3634:208;-1:-1:-1;;3634:208:22:o;3847:470::-;;4064:6;4058:13;4080:53;4126:6;4121:3;4114:4;4106:6;4102:17;4080:53;:::i;:::-;4196:13;;4155:16;;;;4218:57;4196:13;4155:16;4252:4;4240:17;;4218:57;:::i;:::-;4291:20;;4034:283;-1:-1:-1;;;;4034:283:22:o;4322:203::-;-1:-1:-1;;;;;4486:32:22;;;;4468:51;;4456:2;4441:18;;4423:102::o;4530:490::-;-1:-1:-1;;;;;4799:15:22;;;4781:34;;4851:15;;4846:2;4831:18;;4824:43;4898:2;4883:18;;4876:34;;;4946:3;4941:2;4926:18;;4919:31;;;4530:490;;4967:47;;4994:19;;4986:6;4967:47;:::i;:::-;4959:55;4733:287;-1:-1:-1;;;;;;4733:287:22:o;5025:187::-;5190:14;;5183:22;5165:41;;5153:2;5138:18;;5120:92::o;5217:221::-;;5366:2;5355:9;5348:21;5386:46;5428:2;5417:9;5413:18;5405:6;5386:46;:::i;5443:409::-;5645:2;5627:21;;;5684:2;5664:18;;;5657:30;5723:34;5718:2;5703:18;;5696:62;-1:-1:-1;;;5789:2:22;5774:18;;5767:43;5842:3;5827:19;;5617:235::o;5857:414::-;6059:2;6041:21;;;6098:2;6078:18;;;6071:30;6137:34;6132:2;6117:18;;6110:62;-1:-1:-1;;;6203:2:22;6188:18;;6181:48;6261:3;6246:19;;6031:240::o;6276:401::-;6478:2;6460:21;;;6517:2;6497:18;;;6490:30;6556:34;6551:2;6536:18;;6529:62;-1:-1:-1;;;6622:2:22;6607:18;;6600:35;6667:3;6652:19;;6450:227::o;6682:400::-;6884:2;6866:21;;;6923:2;6903:18;;;6896:30;6962:34;6957:2;6942:18;;6935:62;-1:-1:-1;;;7028:2:22;7013:18;;7006:34;7072:3;7057:19;;6856:226::o;7087:349::-;7289:2;7271:21;;;7328:2;7308:18;;;7301:30;7367:27;7362:2;7347:18;;7340:55;7427:2;7412:18;;7261:175::o;7441:405::-;7643:2;7625:21;;;7682:2;7662:18;;;7655:30;7721:34;7716:2;7701:18;;7694:62;-1:-1:-1;;;7787:2:22;7772:18;;7765:39;7836:3;7821:19;;7615:231::o;7851:348::-;8053:2;8035:21;;;8092:2;8072:18;;;8065:30;8131:26;8126:2;8111:18;;8104:54;8190:2;8175:18;;8025:174::o;8204:397::-;8406:2;8388:21;;;8445:2;8425:18;;;8418:30;8484:34;8479:2;8464:18;;8457:62;-1:-1:-1;;;8550:2:22;8535:18;;8528:31;8591:3;8576:19;;8378:223::o;8606:425::-;8808:2;8790:21;;;8847:2;8827:18;;;8820:30;8886:34;8881:2;8866:18;;8859:62;8957:31;8952:2;8937:18;;8930:59;9021:3;9006:19;;8780:251::o;9036:177::-;9182:25;;;9170:2;9155:18;;9137:76::o;9218:258::-;9290:1;9300:113;9314:6;9311:1;9308:13;9300:113;;;9390:11;;;9384:18;9371:11;;;9364:39;9336:2;9329:10;9300:113;;;9431:6;9428:1;9425:13;9422:2;;;-1:-1:-1;;9466:1:22;9448:16;;9441:27;9271:205::o;9481:380::-;9566:1;9556:12;;9613:1;9603:12;;;9624:2;;9678:4;9670:6;9666:17;9656:27;;9624:2;9731;9723:6;9720:14;9700:18;9697:38;9694:2;;;9777:10;9772:3;9768:20;9765:1;9758:31;9812:4;9809:1;9802:15;9840:4;9837:1;9830:15;9694:2;;9536:325;;;:::o;9866:127::-;9927:10;9922:3;9918:20;9915:1;9908:31;9958:4;9955:1;9948:15;9982:4;9979:1;9972:15;9998:133;-1:-1:-1;;;;;;10074:32:22;;10064:43;;10054:2;;10121:1;10118;10111:12"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbc3f128d304f4f2ca733412dc3891b58c013429a8953e7ce3cfa7eecdd1914f64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xC3 CALL 0x28 0xD3 DIV DELEGATECALL CALLCODE 0xCA PUSH20 0x3412DC3891B58C013429A8953E7CE3CFA7EECDD1 SWAP2 0x4F PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"194:9169:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cbc3f128d304f4f2ca733412dc3891b58c013429a8953e7ce3cfa7eecdd1914f64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB 0xC3 CALL 0x28 0xD3 DIV DELEGATECALL CALLCODE 0xCA PUSH20 0x3412DC3891B58C013429A8953E7CE3CFA7EECDD1 SWAP2 0x4F PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"194:9169:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b44fd6be80085d2e4792c78f333e45edf09aedd8d5a86fe319395f7d88c8a5964736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 DIFFICULTY REVERT PUSH12 0xE80085D2E4792C78F333E45E 0xDF MULMOD 0xAE 0xDD DUP14 GAS DUP7 INVALID BALANCE SWAP4 SWAP6 0xF7 0xD8 DUP13 DUP11 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"424:971:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b44fd6be80085d2e4792c78f333e45edf09aedd8d5a86fe319395f7d88c8a5964736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 DIFFICULTY REVERT PUSH12 0xE80085D2E4792C78F333E45E 0xDF MULMOD 0xAE 0xDD DUP14 GAS DUP7 INVALID BALANCE SWAP4 SWAP6 0xF7 0xD8 DUP13 DUP11 MSIZE PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"424:971:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209927592153a50a1e622b5ec40ac679600252d56e04f0bcd1418ba16fe6749c0d64736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x27 MSIZE 0x21 MSTORE8 0xA5 EXP 0x1E PUSH3 0x2B5EC4 EXP 0xC6 PUSH26 0x600252D56E04F0BCD1418BA16FE6749C0D64736F6C6343000801 STOP CALLER ","sourceMap":"220:2559:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209927592153a50a1e622b5ec40ac679600252d56e04f0bcd1418ba16fe6749c0d64736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0x27 MSIZE 0x21 MSTORE8 0xA5 EXP 0x1E PUSH3 0x2B5EC4 EXP 0xC6 PUSH26 0x600252D56E04F0BCD1418BA16FE6749C0D64736F6C6343000801 STOP CALLER ","sourceMap":"220:2559:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060523a826a9165362ba069f28b9c3e4fede88b5eadd4efc039a612b54570b13264736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x52 GASPRICE DUP3 PUSH11 0x9165362BA069F28B9C3E4F 0xED 0xE8 DUP12 0x5E 0xAD 0xD4 0xEF 0xC0 CODECOPY 0xA6 SLT 0xB5 GASLIMIT PUSH17 0xB13264736F6C6343000801003300000000 ","sourceMap":"202:12582:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122060523a826a9165362ba069f28b9c3e4fede88b5eadd4efc039a612b54570b13264736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x52 GASPRICE DUP3 PUSH11 0x9165362BA069F28B9C3E4F 0xED 0xE8 DUP12 0x5E 0xAD 0xD4 0xEF 0xC0 CODECOPY 0xA6 SLT 0xB5 GASLIMIT PUSH17 0xB13264736F6C6343000801003300000000 ","sourceMap":"202:12582:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a082f60aa7e694fbda2168feeed1110a1df7670c44712fc99fbeae0d350fe0a864736f6c63430008010033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 DUP3 0xF6 EXP 0xA7 0xE6 SWAP5 0xFB 0xDA 0x21 PUSH9 0xFEEED1110A1DF7670C DIFFICULTY PUSH18 0x2FC99FBEAE0D350FE0A864736F6C63430008 ADD STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a082f60aa7e694fbda2168feeed1110a1df7670c44712fc99fbeae0d350fe0a864736f6c63430008010033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 DUP3 0xF6 EXP 0xA7 0xE6 SWAP5 0xFB 0xDA 0x21 PUSH9 0xFEEED1110A1DF7670C DIFFICULTY PUSH18 0x2FC99FBEAE0D350FE0A864736F6C63430008 ADD STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/MyNFT.sol":{"MyNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"string","name":"tokenURI","type":"string"}],"name":"mintNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:396:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"69:325:22","statements":[{"nodeType":"YulAssignment","src":"79:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"93:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"99:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"89:3:22"},"nodeType":"YulFunctionCall","src":"89:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"79:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"110:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"140:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"146:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"136:3:22"},"nodeType":"YulFunctionCall","src":"136:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"114:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"187:31:22","statements":[{"nodeType":"YulAssignment","src":"189:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"203:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"211:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"199:3:22"},"nodeType":"YulFunctionCall","src":"199:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"189:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"167:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"160:6:22"},"nodeType":"YulFunctionCall","src":"160:26:22"},"nodeType":"YulIf","src":"157:2:22"},{"body":{"nodeType":"YulBlock","src":"277:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"298:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"305:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"310:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"301:3:22"},"nodeType":"YulFunctionCall","src":"301:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"291:6:22"},"nodeType":"YulFunctionCall","src":"291:31:22"},"nodeType":"YulExpressionStatement","src":"291:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"342:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"345:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"335:6:22"},"nodeType":"YulFunctionCall","src":"335:15:22"},"nodeType":"YulExpressionStatement","src":"335:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"370:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"373:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"363:6:22"},"nodeType":"YulFunctionCall","src":"363:15:22"},"nodeType":"YulExpressionStatement","src":"363:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"233:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"256:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"264:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"253:2:22"},"nodeType":"YulFunctionCall","src":"253:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"230:2:22"},"nodeType":"YulFunctionCall","src":"230:38:22"},"nodeType":"YulIf","src":"227:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"49:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"58:6:22","type":""}],"src":"14:380:22"}]},"contents":"{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040805180820182526005815264135e53919560da1b60208083019182528351808501909452600384526213919560ea1b9084015281519192916200005a91600091620000e9565b50805162000070906001906020840190620000e9565b5050506200008d620000876200009360201b60201c565b62000097565b620001cc565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f7906200018f565b90600052602060002090601f0160209004810192826200011b576000855562000166565b82601f106200013657805160ff191683800117855562000166565b8280016001018555821562000166579182015b828111156200016657825182559160200191906001019062000149565b506200017492915062000178565b5090565b5b8082111562000174576000815560010162000179565b600281046001821680620001a457607f821691505b60208210811415620001c657634e487b7160e01b600052602260045260246000fd5b50919050565b61186480620001dc6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde1461021a578063c87b56dd1461022d578063e985e9c514610240578063eacabe1414610253578063f2fde38b1461026657610116565b8063715018a6146101ef5780638da5cb5b146101f757806395d89b41146101ff578063a22cb4651461020757610116565b806318160ddd116100e957806318160ddd1461018e57806323b872dd146101a357806342842e0e146101b65780636352211e146101c957806370a08231146101dc57610116565b806301ffc9a71461011b57806306fdde0314610144578063081812fc14610159578063095ea7b314610179575b600080fd5b61012e6101293660046112c6565b610279565b60405161013b91906113c2565b60405180910390f35b61014c6102a6565b60405161013b91906113cd565b61016c6101673660046112fe565b610338565b60405161013b9190611371565b61018c61018736600461129d565b61035f565b005b610196610400565b60405161013b9190611792565b61018c6101b1366004611150565b610411565b61018c6101c4366004611150565b610449565b61016c6101d73660046112fe565b610464565b6101966101ea366004611104565b610498565b61018c6104dc565b61016c6104f0565b61014c6104ff565b61018c610215366004611204565b61050e565b61018c61022836600461118b565b610524565b61014c61023b3660046112fe565b610563565b61012e61024e36600461111e565b610668565b61019661026136600461123e565b610696565b61018c610274366004611104565b6106d3565b60006001600160e01b03198216632483248360e11b148061029e575061029e8261070d565b90505b919050565b6060600080546102b5906117c7565b80601f01602080910402602001604051908101604052809291908181526020018280546102e1906117c7565b801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b5050505050905090565b60006103438261074d565b506000908152600460205260409020546001600160a01b031690565b600061036a82610464565b9050806001600160a01b0316836001600160a01b031614156103a75760405162461bcd60e51b815260040161039e906116f4565b60405180910390fd5b806001600160a01b03166103b9610772565b6001600160a01b031614806103d557506103d58161024e610772565b6103f15760405162461bcd60e51b815260040161039e90611735565b6103fb8383610776565b505050565b600061040c60086107e4565b905090565b61042261041c610772565b826107e8565b61043e5760405162461bcd60e51b815260040161039e906113e0565b6103fb838383610846565b6103fb83838360405180602001604052806000815250610524565b60008061047083610983565b90506001600160a01b03811661029e5760405162461bcd60e51b815260040161039e906116bd565b60006001600160a01b0382166104c05760405162461bcd60e51b815260040161039e906115bc565b506001600160a01b031660009081526003602052604090205490565b6104e461099e565b6104ee60006109dd565b565b6007546001600160a01b031690565b6060600180546102b5906117c7565b610520610519610772565b8383610a2f565b5050565b61053561052f610772565b836107e8565b6105515760405162461bcd60e51b815260040161039e906113e0565b61055d84848484610ad2565b50505050565b606061056e8261074d565b60008281526006602052604081208054610587906117c7565b80601f01602080910402602001604051908101604052809291908181526020018280546105b3906117c7565b80156106005780601f106105d557610100808354040283529160200191610600565b820191906000526020600020905b8154815290600101906020018083116105e357829003601f168201915b505050505090506000610611610b05565b9050805160001415610625575090506102a1565b81511561065757808260405160200161063f929190611342565b604051602081830303815290604052925050506102a1565b61066084610b17565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006106a061099e565b6106aa6008610b7d565b60006106b660086107e4565b90506106c28482610b86565b6106cc8184610c7b565b9392505050565b6106db61099e565b6001600160a01b0381166107015760405162461bcd60e51b815260040161039e9061147f565b61070a816109dd565b50565b60006001600160e01b031982166380ac58cd60e01b148061073e57506001600160e01b03198216635b5e139f60e01b145b8061029e575061029e82610cfb565b61075681610d14565b61070a5760405162461bcd60e51b815260040161039e906116bd565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107ab82610464565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5490565b6000806107f483610464565b9050806001600160a01b0316846001600160a01b0316148061081b575061081b8185610668565b806106605750836001600160a01b031661083484610338565b6001600160a01b031614949350505050565b826001600160a01b031661085982610464565b6001600160a01b03161461087f5760405162461bcd60e51b815260040161039e906114c5565b6001600160a01b0382166108a55760405162461bcd60e51b815260040161039e90611541565b6108b2838383600161055d565b826001600160a01b03166108c582610464565b6001600160a01b0316146108eb5760405162461bcd60e51b815260040161039e906114c5565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a46103fb838383600161055d565b6000908152600260205260409020546001600160a01b031690565b6109a6610772565b6001600160a01b03166109b76104f0565b6001600160a01b0316146104ee5760405162461bcd60e51b815260040161039e90611688565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610a615760405162461bcd60e51b815260040161039e90611585565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610ac59085906113c2565b60405180910390a3505050565b610add848484610846565b610ae984848484610d31565b61055d5760405162461bcd60e51b815260040161039e9061142d565b60408051602081019091526000815290565b6060610b228261074d565b6000610b2c610b05565b90506000815111610b4c57604051806020016040528060008152506106cc565b80610b5684610e4c565b604051602001610b67929190611342565b6040516020818303038152906040529392505050565b80546001019055565b6001600160a01b038216610bac5760405162461bcd60e51b815260040161039e90611653565b610bb581610d14565b15610bd25760405162461bcd60e51b815260040161039e9061150a565b610be060008383600161055d565b610be981610d14565b15610c065760405162461bcd60e51b815260040161039e9061150a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461052060008383600161055d565b610c8482610d14565b610ca05760405162461bcd60e51b815260040161039e90611605565b60008281526006602090815260409091208251610cbf92840190610fde565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610cef9190611792565b60405180910390a15050565b6001600160e01b031981166301ffc9a760e01b14919050565b600080610d2083610983565b6001600160a01b0316141592915050565b6000610d45846001600160a01b0316610ef7565b15610e4157836001600160a01b031663150b7a02610d61610772565b8786866040518563ffffffff1660e01b8152600401610d839493929190611385565b602060405180830381600087803b158015610d9d57600080fd5b505af1925050508015610dcd575060408051601f3d908101601f19168201909252610dca918101906112e2565b60015b610e27573d808015610dfb576040519150601f19603f3d011682016040523d82523d6000602084013e610e00565b606091505b508051610e1f5760405162461bcd60e51b815260040161039e9061142d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610660565b506001949350505050565b60606000610e5983610f06565b600101905060008167ffffffffffffffff811115610e8757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610eb1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610eea57610eef565b610ebb565b509392505050565b6001600160a01b03163b151590565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f455772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f71576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8f57662386f26fc10000830492506010015b6305f5e1008310610fa7576305f5e100830492506008015b6127108310610fbb57612710830492506004015b60648310610fcd576064830492506002015b600a831061029e5760010192915050565b828054610fea906117c7565b90600052602060002090601f01602090048101928261100c5760008555611052565b82601f1061102557805160ff1916838001178555611052565b82800160010185558215611052579182015b82811115611052578251825591602001919060010190611037565b5061105e929150611062565b5090565b5b8082111561105e5760008155600101611063565b600067ffffffffffffffff8084111561109257611092611802565b604051601f8501601f19908116603f011681019082821181831017156110ba576110ba611802565b816040528093508581528686860111156110d357600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146102a157600080fd5b600060208284031215611115578081fd5b6106cc826110ed565b60008060408385031215611130578081fd5b611139836110ed565b9150611147602084016110ed565b90509250929050565b600080600060608486031215611164578081fd5b61116d846110ed565b925061117b602085016110ed565b9150604084013590509250925092565b600080600080608085870312156111a0578081fd5b6111a9856110ed565b93506111b7602086016110ed565b925060408501359150606085013567ffffffffffffffff8111156111d9578182fd5b8501601f810187136111e9578182fd5b6111f887823560208401611077565b91505092959194509250565b60008060408385031215611216578182fd5b61121f836110ed565b915060208301358015158114611233578182fd5b809150509250929050565b60008060408385031215611250578182fd5b611259836110ed565b9150602083013567ffffffffffffffff811115611274578182fd5b8301601f81018513611284578182fd5b61129385823560208401611077565b9150509250929050565b600080604083850312156112af578182fd5b6112b8836110ed565b946020939093013593505050565b6000602082840312156112d7578081fd5b81356106cc81611818565b6000602082840312156112f3578081fd5b81516106cc81611818565b60006020828403121561130f578081fd5b5035919050565b6000815180845261132e81602086016020860161179b565b601f01601f19169290920160200192915050565b6000835161135481846020880161179b565b83519083019061136881836020880161179b565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113b890830184611316565b9695505050505050565b901515815260200190565b6000602082526106cc6020830184611316565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b60208082526029908201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616040820152683634b21037bbb732b960b91b606082015260800190565b6020808252602e908201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60408201526d32bc34b9ba32b73a103a37b5b2b760911b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b6020808252603d908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60408201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606082015260800190565b90815260200190565b60005b838110156117b657818101518382015260200161179e565b8381111561055d5750506000910152565b6002810460018216806117db57607f821691505b602082108114156117fc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461070a57600080fdfea2646970667358221220f8cd9980be3c0c3f158ff4f06c4e8f98f6cd1b1db0938e03ab4e45a2c7e5c5dd64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x135E539195 PUSH1 0xDA SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH3 0x139195 PUSH1 0xEA SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x5A SWAP2 PUSH1 0x0 SWAP2 PUSH3 0xE9 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x70 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xE9 JUMP JUMPDEST POP POP POP PUSH3 0x8D PUSH3 0x87 PUSH3 0x93 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x97 JUMP JUMPDEST PUSH3 0x1CC JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xF7 SWAP1 PUSH3 0x18F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x11B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x166 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x136 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x166 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x166 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x166 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x149 JUMP JUMPDEST POP PUSH3 0x174 SWAP3 SWAP2 POP PUSH3 0x178 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x179 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1864 DUP1 PUSH3 0x1DC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x266 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x207 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x16C PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x18C PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH2 0x18C PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x29E JUMPI POP PUSH2 0x29E DUP3 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x303 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x311 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343 DUP3 PUSH2 0x74D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A DUP3 PUSH2 0x464 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B9 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x3D5 JUMPI POP PUSH2 0x3D5 DUP2 PUSH2 0x24E PUSH2 0x772 JUMP JUMPDEST PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C PUSH1 0x8 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x422 PUSH2 0x41C PUSH2 0x772 JUMP JUMPDEST DUP3 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x470 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x15BC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x4EE PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x520 PUSH2 0x519 PUSH2 0x772 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA2F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x535 PUSH2 0x52F PUSH2 0x772 JUMP JUMPDEST DUP4 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x55D DUP5 DUP5 DUP5 DUP5 PUSH2 0xAD2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x56E DUP3 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x587 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x600 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x600 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x611 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x625 JUMPI POP SWAP1 POP PUSH2 0x2A1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x657 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x63F SWAP3 SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x660 DUP5 PUSH2 0xB17 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A0 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x6AA PUSH1 0x8 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH1 0x8 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x6C2 DUP5 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x6CC DUP2 DUP5 PUSH2 0xC7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x99E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x70A DUP2 PUSH2 0x9DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x73E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x29E JUMPI POP PUSH2 0x29E DUP3 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x756 DUP2 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x16BD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x7AB DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F4 DUP4 PUSH2 0x464 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x81B JUMPI POP PUSH2 0x81B DUP2 DUP6 PUSH2 0x668 JUMP JUMPDEST DUP1 PUSH2 0x660 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x834 DUP5 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x859 DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x8B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8C5 DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x9A6 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B7 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0xAC5 SWAP1 DUP6 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xADD DUP5 DUP5 DUP5 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xAE9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB22 DUP3 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2C PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6CC JUMP JUMPDEST DUP1 PUSH2 0xB56 DUP5 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB67 SWAP3 SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xBB5 DUP2 PUSH2 0xD14 JUMP JUMPDEST ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH2 0xBE0 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST PUSH2 0xBE9 DUP2 PUSH2 0xD14 JUMP JUMPDEST ISZERO PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0x520 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST PUSH2 0xC84 DUP3 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xCBF SWAP3 DUP5 ADD SWAP1 PUSH2 0xFDE JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD20 DUP4 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEF7 JUMP JUMPDEST ISZERO PUSH2 0xE41 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 PUSH2 0xD61 PUSH2 0x772 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDCD JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDCA SWAP2 DUP2 ADD SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE27 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x142D JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x660 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE59 DUP4 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEEA JUMPI PUSH2 0xEEF JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF45 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF71 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF8F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFA7 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFBB JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFCD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x29E JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xFEA SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x100C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1052 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1025 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1052 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1052 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1052 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1037 JUMP JUMPDEST POP PUSH2 0x105E SWAP3 SWAP2 POP PUSH2 0x1062 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x105E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1092 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10BA PUSH2 0x1802 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1115 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6CC DUP3 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1130 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1139 DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 PUSH1 0x20 DUP5 ADD PUSH2 0x10ED JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1164 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x116D DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 POP PUSH2 0x117B PUSH1 0x20 DUP6 ADD PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x11A9 DUP6 PUSH2 0x10ED JUMP JUMPDEST SWAP4 POP PUSH2 0x11B7 PUSH1 0x20 DUP7 ADD PUSH2 0x10ED JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x11E9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x11F8 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1216 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x121F DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1233 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1250 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1259 DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1274 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1284 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1293 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12AF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x12B8 DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6CC DUP2 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6CC DUP2 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x132E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x179B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1354 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x179B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1368 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x179B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13B8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x6CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x179E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x55D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xCD SWAP10 DUP1 0xBE EXTCODECOPY 0xC EXTCODEHASH ISZERO DUP16 DELEGATECALL CREATE PUSH13 0x4E8F98F6CD1B1DB0938E03AB4E GASLIMIT LOG2 0xC7 0xE5 0xC5 0xDD PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"301:571:20:-:0;;;433:39;;;;;;;;;-1:-1:-1;1390:113:4;;;;;;;;;;;-1:-1:-1;;;1390:113:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:4;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:4;:::i;:::-;-1:-1:-1;1479:17:4;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;301:571:20;;655:96:10;734:10;655:96;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2426:187;;:::o;301:571:20:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;301:571:20;;;-1:-1:-1;301:571:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:22;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;301:571:20;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:12750:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"90:557:22","statements":[{"nodeType":"YulVariableDeclaration","src":"100:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"110:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"104:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"155:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"157:16:22"},"nodeType":"YulFunctionCall","src":"157:18:22"},"nodeType":"YulExpressionStatement","src":"157:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"143:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"151:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"140:2:22"},"nodeType":"YulFunctionCall","src":"140:14:22"},"nodeType":"YulIf","src":"137:2:22"},{"nodeType":"YulVariableDeclaration","src":"186:17:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"200:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"196:3:22"},"nodeType":"YulFunctionCall","src":"196:7:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"190:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"212:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"232:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"226:5:22"},"nodeType":"YulFunctionCall","src":"226:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"216:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"244:73:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"266:6:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"290:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"298:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"286:3:22"},"nodeType":"YulFunctionCall","src":"286:15:22"},{"name":"_2","nodeType":"YulIdentifier","src":"303:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"282:3:22"},"nodeType":"YulFunctionCall","src":"282:24:22"},{"kind":"number","nodeType":"YulLiteral","src":"308:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"278:3:22"},"nodeType":"YulFunctionCall","src":"278:33:22"},{"name":"_2","nodeType":"YulIdentifier","src":"313:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"274:3:22"},"nodeType":"YulFunctionCall","src":"274:42:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"262:3:22"},"nodeType":"YulFunctionCall","src":"262:55:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"248:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"376:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"378:16:22"},"nodeType":"YulFunctionCall","src":"378:18:22"},"nodeType":"YulExpressionStatement","src":"378:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"335:10:22"},{"name":"_1","nodeType":"YulIdentifier","src":"347:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"332:2:22"},"nodeType":"YulFunctionCall","src":"332:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"355:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"367:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"352:2:22"},"nodeType":"YulFunctionCall","src":"352:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"329:2:22"},"nodeType":"YulFunctionCall","src":"329:46:22"},"nodeType":"YulIf","src":"326:2:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"414:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"418:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"407:6:22"},"nodeType":"YulFunctionCall","src":"407:22:22"},"nodeType":"YulExpressionStatement","src":"407:22:22"},{"nodeType":"YulAssignment","src":"438:15:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"447:6:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"438:5:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"469:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"477:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"462:6:22"},"nodeType":"YulFunctionCall","src":"462:22:22"},"nodeType":"YulExpressionStatement","src":"462:22:22"},{"body":{"nodeType":"YulBlock","src":"522:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"531:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"534:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"524:6:22"},"nodeType":"YulFunctionCall","src":"524:12:22"},"nodeType":"YulExpressionStatement","src":"524:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"503:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"499:3:22"},"nodeType":"YulFunctionCall","src":"499:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"517:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"496:2:22"},"nodeType":"YulFunctionCall","src":"496:25:22"},"nodeType":"YulIf","src":"493:2:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"564:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"572:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"560:3:22"},"nodeType":"YulFunctionCall","src":"560:17:22"},{"name":"src","nodeType":"YulIdentifier","src":"579:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"584:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"547:12:22"},"nodeType":"YulFunctionCall","src":"547:44:22"},"nodeType":"YulExpressionStatement","src":"547:44:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"615:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"623:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:22"},"nodeType":"YulFunctionCall","src":"611:19:22"},{"kind":"number","nodeType":"YulLiteral","src":"632:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"607:3:22"},"nodeType":"YulFunctionCall","src":"607:30:22"},{"kind":"number","nodeType":"YulLiteral","src":"639:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"600:6:22"},"nodeType":"YulFunctionCall","src":"600:41:22"},"nodeType":"YulExpressionStatement","src":"600:41:22"}]},"name":"abi_decode_available_length_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"59:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"64:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"72:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"80:5:22","type":""}],"src":"14:633:22"},{"body":{"nodeType":"YulBlock","src":"703:124:22","statements":[{"nodeType":"YulAssignment","src":"713:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"735:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"722:12:22"},"nodeType":"YulFunctionCall","src":"722:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"713:5:22"}]},{"body":{"nodeType":"YulBlock","src":"805:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"814:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"817:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"807:6:22"},"nodeType":"YulFunctionCall","src":"807:12:22"},"nodeType":"YulExpressionStatement","src":"807:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"764:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"775:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"790:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"795:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"786:3:22"},"nodeType":"YulFunctionCall","src":"786:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"799:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"782:3:22"},"nodeType":"YulFunctionCall","src":"782:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"771:3:22"},"nodeType":"YulFunctionCall","src":"771:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"761:2:22"},"nodeType":"YulFunctionCall","src":"761:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"754:6:22"},"nodeType":"YulFunctionCall","src":"754:50:22"},"nodeType":"YulIf","src":"751:2:22"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"682:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"693:5:22","type":""}],"src":"652:175:22"},{"body":{"nodeType":"YulBlock","src":"902:128:22","statements":[{"body":{"nodeType":"YulBlock","src":"948:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"957:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"965:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"950:6:22"},"nodeType":"YulFunctionCall","src":"950:22:22"},"nodeType":"YulExpressionStatement","src":"950:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"923:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"919:3:22"},"nodeType":"YulFunctionCall","src":"919:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"944:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"915:3:22"},"nodeType":"YulFunctionCall","src":"915:32:22"},"nodeType":"YulIf","src":"912:2:22"},{"nodeType":"YulAssignment","src":"983:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1014:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"993:20:22"},"nodeType":"YulFunctionCall","src":"993:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"983:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"868:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"879:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"891:6:22","type":""}],"src":"832:198:22"},{"body":{"nodeType":"YulBlock","src":"1122:187:22","statements":[{"body":{"nodeType":"YulBlock","src":"1168:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"1177:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"1185:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1170:6:22"},"nodeType":"YulFunctionCall","src":"1170:22:22"},"nodeType":"YulExpressionStatement","src":"1170:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1143:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1152:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1139:3:22"},"nodeType":"YulFunctionCall","src":"1139:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1164:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1135:3:22"},"nodeType":"YulFunctionCall","src":"1135:32:22"},"nodeType":"YulIf","src":"1132:2:22"},{"nodeType":"YulAssignment","src":"1203:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1234:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1213:20:22"},"nodeType":"YulFunctionCall","src":"1213:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1203:6:22"}]},{"nodeType":"YulAssignment","src":"1253:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1288:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1299:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1284:3:22"},"nodeType":"YulFunctionCall","src":"1284:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1263:20:22"},"nodeType":"YulFunctionCall","src":"1263:40:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1253:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1080:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1091:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1103:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1111:6:22","type":""}],"src":"1035:274:22"},{"body":{"nodeType":"YulBlock","src":"1418:238:22","statements":[{"body":{"nodeType":"YulBlock","src":"1464:26:22","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1473:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"1481:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:22"},"nodeType":"YulFunctionCall","src":"1466:22:22"},"nodeType":"YulExpressionStatement","src":"1466:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:22"},"nodeType":"YulFunctionCall","src":"1435:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:22"},"nodeType":"YulFunctionCall","src":"1431:32:22"},"nodeType":"YulIf","src":"1428:2:22"},{"nodeType":"YulAssignment","src":"1499:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1530:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1509:20:22"},"nodeType":"YulFunctionCall","src":"1509:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1499:6:22"}]},{"nodeType":"YulAssignment","src":"1549:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1595:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:22"},"nodeType":"YulFunctionCall","src":"1580:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1559:20:22"},"nodeType":"YulFunctionCall","src":"1559:40:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1549:6:22"}]},{"nodeType":"YulAssignment","src":"1608:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1635:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1646:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1631:3:22"},"nodeType":"YulFunctionCall","src":"1631:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1618:12:22"},"nodeType":"YulFunctionCall","src":"1618:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1608:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1368:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1379:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1391:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1399:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1407:6:22","type":""}],"src":"1314:342:22"},{"body":{"nodeType":"YulBlock","src":"1791:572:22","statements":[{"body":{"nodeType":"YulBlock","src":"1838:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"1847:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"1855:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1840:6:22"},"nodeType":"YulFunctionCall","src":"1840:22:22"},"nodeType":"YulExpressionStatement","src":"1840:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1812:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1821:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1808:3:22"},"nodeType":"YulFunctionCall","src":"1808:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1833:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1804:3:22"},"nodeType":"YulFunctionCall","src":"1804:33:22"},"nodeType":"YulIf","src":"1801:2:22"},{"nodeType":"YulAssignment","src":"1873:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1904:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1883:20:22"},"nodeType":"YulFunctionCall","src":"1883:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1873:6:22"}]},{"nodeType":"YulAssignment","src":"1923:50:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1958:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1969:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1954:3:22"},"nodeType":"YulFunctionCall","src":"1954:18:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1933:20:22"},"nodeType":"YulFunctionCall","src":"1933:40:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1923:6:22"}]},{"nodeType":"YulAssignment","src":"1982:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2009:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2020:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2005:3:22"},"nodeType":"YulFunctionCall","src":"2005:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1992:12:22"},"nodeType":"YulFunctionCall","src":"1992:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1982:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2033:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2064:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2060:3:22"},"nodeType":"YulFunctionCall","src":"2060:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2047:12:22"},"nodeType":"YulFunctionCall","src":"2047:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2037:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2122:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2131:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"2139:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2124:6:22"},"nodeType":"YulFunctionCall","src":"2124:22:22"},"nodeType":"YulExpressionStatement","src":"2124:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2094:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2102:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2091:2:22"},"nodeType":"YulFunctionCall","src":"2091:30:22"},"nodeType":"YulIf","src":"2088:2:22"},{"nodeType":"YulVariableDeclaration","src":"2157:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2171:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2182:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2167:3:22"},"nodeType":"YulFunctionCall","src":"2167:22:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2161:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2237:26:22","statements":[{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"2246:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"2254:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2239:6:22"},"nodeType":"YulFunctionCall","src":"2239:22:22"},"nodeType":"YulExpressionStatement","src":"2239:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2216:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"2220:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2212:3:22"},"nodeType":"YulFunctionCall","src":"2212:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2227:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2208:3:22"},"nodeType":"YulFunctionCall","src":"2208:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2201:6:22"},"nodeType":"YulFunctionCall","src":"2201:35:22"},"nodeType":"YulIf","src":"2198:2:22"},{"nodeType":"YulAssignment","src":"2272:85:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2322:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"2326:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2318:3:22"},"nodeType":"YulFunctionCall","src":"2318:11:22"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2344:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2331:12:22"},"nodeType":"YulFunctionCall","src":"2331:16:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2349:7:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes","nodeType":"YulIdentifier","src":"2282:35:22"},"nodeType":"YulFunctionCall","src":"2282:75:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2272:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1733:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1744:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1756:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1764:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1772:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1780:6:22","type":""}],"src":"1661:702:22"},{"body":{"nodeType":"YulBlock","src":"2452:285:22","statements":[{"body":{"nodeType":"YulBlock","src":"2498:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2507:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2515:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2500:6:22"},"nodeType":"YulFunctionCall","src":"2500:22:22"},"nodeType":"YulExpressionStatement","src":"2500:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2473:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2482:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2469:3:22"},"nodeType":"YulFunctionCall","src":"2469:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2494:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2465:3:22"},"nodeType":"YulFunctionCall","src":"2465:32:22"},"nodeType":"YulIf","src":"2462:2:22"},{"nodeType":"YulAssignment","src":"2533:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2564:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2543:20:22"},"nodeType":"YulFunctionCall","src":"2543:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2533:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2583:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2613:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2624:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2609:3:22"},"nodeType":"YulFunctionCall","src":"2609:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2596:12:22"},"nodeType":"YulFunctionCall","src":"2596:32:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2587:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2681:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2690:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"2698:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2683:6:22"},"nodeType":"YulFunctionCall","src":"2683:22:22"},"nodeType":"YulExpressionStatement","src":"2683:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2650:5:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2671:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2664:6:22"},"nodeType":"YulFunctionCall","src":"2664:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2657:6:22"},"nodeType":"YulFunctionCall","src":"2657:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2647:2:22"},"nodeType":"YulFunctionCall","src":"2647:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2640:6:22"},"nodeType":"YulFunctionCall","src":"2640:40:22"},"nodeType":"YulIf","src":"2637:2:22"},{"nodeType":"YulAssignment","src":"2716:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"2726:5:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2716:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2410:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2421:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2433:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2441:6:22","type":""}],"src":"2368:369:22"},{"body":{"nodeType":"YulBlock","src":"2839:461:22","statements":[{"body":{"nodeType":"YulBlock","src":"2885:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2894:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"2902:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2887:6:22"},"nodeType":"YulFunctionCall","src":"2887:22:22"},"nodeType":"YulExpressionStatement","src":"2887:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:22"},"nodeType":"YulFunctionCall","src":"2856:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:22"},"nodeType":"YulFunctionCall","src":"2852:32:22"},"nodeType":"YulIf","src":"2849:2:22"},{"nodeType":"YulAssignment","src":"2920:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2951:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2930:20:22"},"nodeType":"YulFunctionCall","src":"2930:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2920:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2970:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3001:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3012:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2997:3:22"},"nodeType":"YulFunctionCall","src":"2997:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2984:12:22"},"nodeType":"YulFunctionCall","src":"2984:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2974:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3059:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3068:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"3076:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3061:6:22"},"nodeType":"YulFunctionCall","src":"3061:22:22"},"nodeType":"YulExpressionStatement","src":"3061:22:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3031:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3039:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3028:2:22"},"nodeType":"YulFunctionCall","src":"3028:30:22"},"nodeType":"YulIf","src":"3025:2:22"},{"nodeType":"YulVariableDeclaration","src":"3094:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3108:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"3119:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3104:3:22"},"nodeType":"YulFunctionCall","src":"3104:22:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3098:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3174:26:22","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3183:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"3191:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3176:6:22"},"nodeType":"YulFunctionCall","src":"3176:22:22"},"nodeType":"YulExpressionStatement","src":"3176:22:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3153:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"3157:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3149:3:22"},"nodeType":"YulFunctionCall","src":"3149:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3164:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3145:3:22"},"nodeType":"YulFunctionCall","src":"3145:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3138:6:22"},"nodeType":"YulFunctionCall","src":"3138:35:22"},"nodeType":"YulIf","src":"3135:2:22"},{"nodeType":"YulAssignment","src":"3209:85:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3259:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"3263:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3255:3:22"},"nodeType":"YulFunctionCall","src":"3255:11:22"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3281:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3268:12:22"},"nodeType":"YulFunctionCall","src":"3268:16:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3286:7:22"}],"functionName":{"name":"abi_decode_available_length_t_bytes","nodeType":"YulIdentifier","src":"3219:35:22"},"nodeType":"YulFunctionCall","src":"3219:75:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3209:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2797:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2808:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2820:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2828:6:22","type":""}],"src":"2742:558:22"},{"body":{"nodeType":"YulBlock","src":"3392:179:22","statements":[{"body":{"nodeType":"YulBlock","src":"3438:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3447:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3455:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3440:6:22"},"nodeType":"YulFunctionCall","src":"3440:22:22"},"nodeType":"YulExpressionStatement","src":"3440:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3413:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3422:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3409:3:22"},"nodeType":"YulFunctionCall","src":"3409:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3434:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3405:3:22"},"nodeType":"YulFunctionCall","src":"3405:32:22"},"nodeType":"YulIf","src":"3402:2:22"},{"nodeType":"YulAssignment","src":"3473:41:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3504:9:22"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3483:20:22"},"nodeType":"YulFunctionCall","src":"3483:31:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3473:6:22"}]},{"nodeType":"YulAssignment","src":"3523:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3550:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3561:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3546:3:22"},"nodeType":"YulFunctionCall","src":"3546:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3533:12:22"},"nodeType":"YulFunctionCall","src":"3533:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3523:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3350:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3361:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3373:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3381:6:22","type":""}],"src":"3305:266:22"},{"body":{"nodeType":"YulBlock","src":"3645:188:22","statements":[{"body":{"nodeType":"YulBlock","src":"3691:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3700:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3708:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3693:6:22"},"nodeType":"YulFunctionCall","src":"3693:22:22"},"nodeType":"YulExpressionStatement","src":"3693:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3666:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3675:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3662:3:22"},"nodeType":"YulFunctionCall","src":"3662:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3687:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3658:3:22"},"nodeType":"YulFunctionCall","src":"3658:32:22"},"nodeType":"YulIf","src":"3655:2:22"},{"nodeType":"YulVariableDeclaration","src":"3726:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3752:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3739:12:22"},"nodeType":"YulFunctionCall","src":"3739:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3730:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3797:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"3771:25:22"},"nodeType":"YulFunctionCall","src":"3771:32:22"},"nodeType":"YulExpressionStatement","src":"3771:32:22"},{"nodeType":"YulAssignment","src":"3812:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"3822:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3812:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3611:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3622:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3634:6:22","type":""}],"src":"3576:257:22"},{"body":{"nodeType":"YulBlock","src":"3918:181:22","statements":[{"body":{"nodeType":"YulBlock","src":"3964:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3973:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3981:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3966:6:22"},"nodeType":"YulFunctionCall","src":"3966:22:22"},"nodeType":"YulExpressionStatement","src":"3966:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3939:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3948:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3935:3:22"},"nodeType":"YulFunctionCall","src":"3935:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3960:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3931:3:22"},"nodeType":"YulFunctionCall","src":"3931:32:22"},"nodeType":"YulIf","src":"3928:2:22"},{"nodeType":"YulVariableDeclaration","src":"3999:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4018:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4012:5:22"},"nodeType":"YulFunctionCall","src":"4012:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4003:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4063:5:22"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"4037:25:22"},"nodeType":"YulFunctionCall","src":"4037:32:22"},"nodeType":"YulExpressionStatement","src":"4037:32:22"},{"nodeType":"YulAssignment","src":"4078:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"4088:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4078:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3884:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3895:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3907:6:22","type":""}],"src":"3838:261:22"},{"body":{"nodeType":"YulBlock","src":"4174:120:22","statements":[{"body":{"nodeType":"YulBlock","src":"4220:26:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4229:6:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4237:6:22"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4222:6:22"},"nodeType":"YulFunctionCall","src":"4222:22:22"},"nodeType":"YulExpressionStatement","src":"4222:22:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4195:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4204:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4191:3:22"},"nodeType":"YulFunctionCall","src":"4191:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4216:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4187:3:22"},"nodeType":"YulFunctionCall","src":"4187:32:22"},"nodeType":"YulIf","src":"4184:2:22"},{"nodeType":"YulAssignment","src":"4255:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4278:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4265:12:22"},"nodeType":"YulFunctionCall","src":"4265:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4255:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4140:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4151:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4163:6:22","type":""}],"src":"4104:190:22"},{"body":{"nodeType":"YulBlock","src":"4350:208:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4360:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4380:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4374:5:22"},"nodeType":"YulFunctionCall","src":"4374:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4364:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4402:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4407:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4395:6:22"},"nodeType":"YulFunctionCall","src":"4395:19:22"},"nodeType":"YulExpressionStatement","src":"4395:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4449:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"4456:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4445:3:22"},"nodeType":"YulFunctionCall","src":"4445:16:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4467:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"4472:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4463:3:22"},"nodeType":"YulFunctionCall","src":"4463:14:22"},{"name":"length","nodeType":"YulIdentifier","src":"4479:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4423:21:22"},"nodeType":"YulFunctionCall","src":"4423:63:22"},"nodeType":"YulExpressionStatement","src":"4423:63:22"},{"nodeType":"YulAssignment","src":"4495:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4510:3:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4523:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4531:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4519:3:22"},"nodeType":"YulFunctionCall","src":"4519:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4540:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4536:3:22"},"nodeType":"YulFunctionCall","src":"4536:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4515:3:22"},"nodeType":"YulFunctionCall","src":"4515:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4506:3:22"},"nodeType":"YulFunctionCall","src":"4506:39:22"},{"kind":"number","nodeType":"YulLiteral","src":"4547:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4502:3:22"},"nodeType":"YulFunctionCall","src":"4502:50:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4495:3:22"}]}]},"name":"abi_encode_t_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4334:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4342:3:22","type":""}],"src":"4299:259:22"},{"body":{"nodeType":"YulBlock","src":"4750:283:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4760:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4780:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4774:5:22"},"nodeType":"YulFunctionCall","src":"4774:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4764:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4822:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4830:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4818:3:22"},"nodeType":"YulFunctionCall","src":"4818:17:22"},{"name":"pos","nodeType":"YulIdentifier","src":"4837:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4842:6:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4796:21:22"},"nodeType":"YulFunctionCall","src":"4796:53:22"},"nodeType":"YulExpressionStatement","src":"4796:53:22"},{"nodeType":"YulVariableDeclaration","src":"4858:29:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4875:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"4880:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:22"},"nodeType":"YulFunctionCall","src":"4871:16:22"},"variables":[{"name":"end_1","nodeType":"YulTypedName","src":"4862:5:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4896:29:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4918:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4912:5:22"},"nodeType":"YulFunctionCall","src":"4912:13:22"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"4900:8:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4960:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4968:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4956:3:22"},"nodeType":"YulFunctionCall","src":"4956:17:22"},{"name":"end_1","nodeType":"YulIdentifier","src":"4975:5:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"4982:8:22"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4934:21:22"},"nodeType":"YulFunctionCall","src":"4934:57:22"},"nodeType":"YulExpressionStatement","src":"4934:57:22"},{"nodeType":"YulAssignment","src":"5000:27:22","value":{"arguments":[{"name":"end_1","nodeType":"YulIdentifier","src":"5011:5:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"5018:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5007:3:22"},"nodeType":"YulFunctionCall","src":"5007:20:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5000:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4718:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4723:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4731:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4742:3:22","type":""}],"src":"4563:470:22"},{"body":{"nodeType":"YulBlock","src":"5139:102:22","statements":[{"nodeType":"YulAssignment","src":"5149:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5161:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5172:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:22"},"nodeType":"YulFunctionCall","src":"5157:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5149:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5191:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5206:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5222:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5227:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5218:3:22"},"nodeType":"YulFunctionCall","src":"5218:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"5231:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5214:3:22"},"nodeType":"YulFunctionCall","src":"5214:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5202:3:22"},"nodeType":"YulFunctionCall","src":"5202:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5184:6:22"},"nodeType":"YulFunctionCall","src":"5184:51:22"},"nodeType":"YulExpressionStatement","src":"5184:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5108:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5119:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5130:4:22","type":""}],"src":"5038:203:22"},{"body":{"nodeType":"YulBlock","src":"5449:287:22","statements":[{"nodeType":"YulVariableDeclaration","src":"5459:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5477:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5482:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5473:3:22"},"nodeType":"YulFunctionCall","src":"5473:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"5486:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5469:3:22"},"nodeType":"YulFunctionCall","src":"5469:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5463:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5504:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5519:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5527:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5515:3:22"},"nodeType":"YulFunctionCall","src":"5515:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5497:6:22"},"nodeType":"YulFunctionCall","src":"5497:34:22"},"nodeType":"YulExpressionStatement","src":"5497:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5551:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5562:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5547:3:22"},"nodeType":"YulFunctionCall","src":"5547:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5571:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5579:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5567:3:22"},"nodeType":"YulFunctionCall","src":"5567:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5540:6:22"},"nodeType":"YulFunctionCall","src":"5540:43:22"},"nodeType":"YulExpressionStatement","src":"5540:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5603:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5614:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5599:3:22"},"nodeType":"YulFunctionCall","src":"5599:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"5619:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5592:6:22"},"nodeType":"YulFunctionCall","src":"5592:34:22"},"nodeType":"YulExpressionStatement","src":"5592:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5646:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5657:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5642:3:22"},"nodeType":"YulFunctionCall","src":"5642:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"5662:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5635:6:22"},"nodeType":"YulFunctionCall","src":"5635:31:22"},"nodeType":"YulExpressionStatement","src":"5635:31:22"},{"nodeType":"YulAssignment","src":"5675:55:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5702:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5714:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5725:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5710:3:22"},"nodeType":"YulFunctionCall","src":"5710:19:22"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"5683:18:22"},"nodeType":"YulFunctionCall","src":"5683:47:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5675:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5394:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5405:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5413:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5421:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5429:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5440:4:22","type":""}],"src":"5246:490:22"},{"body":{"nodeType":"YulBlock","src":"5836:92:22","statements":[{"nodeType":"YulAssignment","src":"5846:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5858:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5869:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5854:3:22"},"nodeType":"YulFunctionCall","src":"5854:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5846:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5888:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5913:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5906:6:22"},"nodeType":"YulFunctionCall","src":"5906:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5899:6:22"},"nodeType":"YulFunctionCall","src":"5899:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5881:6:22"},"nodeType":"YulFunctionCall","src":"5881:41:22"},"nodeType":"YulExpressionStatement","src":"5881:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5805:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5816:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5827:4:22","type":""}],"src":"5741:187:22"},{"body":{"nodeType":"YulBlock","src":"6054:100:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6071:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6082:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6064:6:22"},"nodeType":"YulFunctionCall","src":"6064:21:22"},"nodeType":"YulExpressionStatement","src":"6064:21:22"},{"nodeType":"YulAssignment","src":"6094:54:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6121:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6133:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6144:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6129:3:22"},"nodeType":"YulFunctionCall","src":"6129:18:22"}],"functionName":{"name":"abi_encode_t_bytes","nodeType":"YulIdentifier","src":"6102:18:22"},"nodeType":"YulFunctionCall","src":"6102:46:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6094:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6023:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6034:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6045:4:22","type":""}],"src":"5933:221:22"},{"body":{"nodeType":"YulBlock","src":"6333:235:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6350:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6361:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6343:6:22"},"nodeType":"YulFunctionCall","src":"6343:21:22"},"nodeType":"YulExpressionStatement","src":"6343:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6384:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6395:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6380:3:22"},"nodeType":"YulFunctionCall","src":"6380:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6400:2:22","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6373:6:22"},"nodeType":"YulFunctionCall","src":"6373:30:22"},"nodeType":"YulExpressionStatement","src":"6373:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6423:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6434:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6419:3:22"},"nodeType":"YulFunctionCall","src":"6419:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6439:34:22","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6412:6:22"},"nodeType":"YulFunctionCall","src":"6412:62:22"},"nodeType":"YulExpressionStatement","src":"6412:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6494:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6505:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6490:3:22"},"nodeType":"YulFunctionCall","src":"6490:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6510:15:22","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6483:6:22"},"nodeType":"YulFunctionCall","src":"6483:43:22"},"nodeType":"YulExpressionStatement","src":"6483:43:22"},{"nodeType":"YulAssignment","src":"6535:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6547:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6558:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6543:3:22"},"nodeType":"YulFunctionCall","src":"6543:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6535:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6310:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6324:4:22","type":""}],"src":"6159:409:22"},{"body":{"nodeType":"YulBlock","src":"6747:240:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6764:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6775:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6757:6:22"},"nodeType":"YulFunctionCall","src":"6757:21:22"},"nodeType":"YulExpressionStatement","src":"6757:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6798:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6809:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6794:3:22"},"nodeType":"YulFunctionCall","src":"6794:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6814:2:22","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6787:6:22"},"nodeType":"YulFunctionCall","src":"6787:30:22"},"nodeType":"YulExpressionStatement","src":"6787:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6837:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6848:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6833:3:22"},"nodeType":"YulFunctionCall","src":"6833:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6853:34:22","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6826:6:22"},"nodeType":"YulFunctionCall","src":"6826:62:22"},"nodeType":"YulExpressionStatement","src":"6826:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6908:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6919:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6904:3:22"},"nodeType":"YulFunctionCall","src":"6904:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"6924:20:22","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6897:6:22"},"nodeType":"YulFunctionCall","src":"6897:48:22"},"nodeType":"YulExpressionStatement","src":"6897:48:22"},{"nodeType":"YulAssignment","src":"6954:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6966:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6977:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6962:3:22"},"nodeType":"YulFunctionCall","src":"6962:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6954:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6724:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6738:4:22","type":""}],"src":"6573:414:22"},{"body":{"nodeType":"YulBlock","src":"7166:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7183:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7194:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7176:6:22"},"nodeType":"YulFunctionCall","src":"7176:21:22"},"nodeType":"YulExpressionStatement","src":"7176:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7217:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7228:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:22"},"nodeType":"YulFunctionCall","src":"7213:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7233:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7206:6:22"},"nodeType":"YulFunctionCall","src":"7206:30:22"},"nodeType":"YulExpressionStatement","src":"7206:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7256:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7267:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7252:3:22"},"nodeType":"YulFunctionCall","src":"7252:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7272:34:22","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7245:6:22"},"nodeType":"YulFunctionCall","src":"7245:62:22"},"nodeType":"YulExpressionStatement","src":"7245:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7327:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7338:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7323:3:22"},"nodeType":"YulFunctionCall","src":"7323:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7343:8:22","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7316:6:22"},"nodeType":"YulFunctionCall","src":"7316:36:22"},"nodeType":"YulExpressionStatement","src":"7316:36:22"},{"nodeType":"YulAssignment","src":"7361:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7373:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7384:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7369:3:22"},"nodeType":"YulFunctionCall","src":"7369:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7361:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7143:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7157:4:22","type":""}],"src":"6992:402:22"},{"body":{"nodeType":"YulBlock","src":"7573:227:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7590:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7601:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7583:6:22"},"nodeType":"YulFunctionCall","src":"7583:21:22"},"nodeType":"YulExpressionStatement","src":"7583:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7624:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7635:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7620:3:22"},"nodeType":"YulFunctionCall","src":"7620:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7640:2:22","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7613:6:22"},"nodeType":"YulFunctionCall","src":"7613:30:22"},"nodeType":"YulExpressionStatement","src":"7613:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7663:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7674:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7659:3:22"},"nodeType":"YulFunctionCall","src":"7659:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7679:34:22","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7652:6:22"},"nodeType":"YulFunctionCall","src":"7652:62:22"},"nodeType":"YulExpressionStatement","src":"7652:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7734:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7745:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7730:3:22"},"nodeType":"YulFunctionCall","src":"7730:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"7750:7:22","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7723:6:22"},"nodeType":"YulFunctionCall","src":"7723:35:22"},"nodeType":"YulExpressionStatement","src":"7723:35:22"},{"nodeType":"YulAssignment","src":"7767:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7779:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7790:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7775:3:22"},"nodeType":"YulFunctionCall","src":"7775:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7767:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7550:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7564:4:22","type":""}],"src":"7399:401:22"},{"body":{"nodeType":"YulBlock","src":"7979:178:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7996:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8007:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7989:6:22"},"nodeType":"YulFunctionCall","src":"7989:21:22"},"nodeType":"YulExpressionStatement","src":"7989:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8030:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8041:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8026:3:22"},"nodeType":"YulFunctionCall","src":"8026:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:22","type":"","value":"28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8019:6:22"},"nodeType":"YulFunctionCall","src":"8019:30:22"},"nodeType":"YulExpressionStatement","src":"8019:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8069:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8080:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8065:3:22"},"nodeType":"YulFunctionCall","src":"8065:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8085:30:22","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8058:6:22"},"nodeType":"YulFunctionCall","src":"8058:58:22"},"nodeType":"YulExpressionStatement","src":"8058:58:22"},{"nodeType":"YulAssignment","src":"8125:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8137:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8148:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8133:3:22"},"nodeType":"YulFunctionCall","src":"8133:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8125:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7956:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7970:4:22","type":""}],"src":"7805:352:22"},{"body":{"nodeType":"YulBlock","src":"8336:226:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8353:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8364:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8346:6:22"},"nodeType":"YulFunctionCall","src":"8346:21:22"},"nodeType":"YulExpressionStatement","src":"8346:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8387:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8398:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8383:3:22"},"nodeType":"YulFunctionCall","src":"8383:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8403:2:22","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8376:6:22"},"nodeType":"YulFunctionCall","src":"8376:30:22"},"nodeType":"YulExpressionStatement","src":"8376:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8426:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8437:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8422:3:22"},"nodeType":"YulFunctionCall","src":"8422:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8442:34:22","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8415:6:22"},"nodeType":"YulFunctionCall","src":"8415:62:22"},"nodeType":"YulExpressionStatement","src":"8415:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8497:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8508:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8493:3:22"},"nodeType":"YulFunctionCall","src":"8493:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8513:6:22","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8486:6:22"},"nodeType":"YulFunctionCall","src":"8486:34:22"},"nodeType":"YulExpressionStatement","src":"8486:34:22"},{"nodeType":"YulAssignment","src":"8529:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8541:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8552:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8537:3:22"},"nodeType":"YulFunctionCall","src":"8537:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8529:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8313:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8327:4:22","type":""}],"src":"8162:400:22"},{"body":{"nodeType":"YulBlock","src":"8741:175:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8758:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8769:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8751:6:22"},"nodeType":"YulFunctionCall","src":"8751:21:22"},"nodeType":"YulExpressionStatement","src":"8751:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8792:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8803:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8788:3:22"},"nodeType":"YulFunctionCall","src":"8788:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8808:2:22","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8781:6:22"},"nodeType":"YulFunctionCall","src":"8781:30:22"},"nodeType":"YulExpressionStatement","src":"8781:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8831:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8842:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8827:3:22"},"nodeType":"YulFunctionCall","src":"8827:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"8847:27:22","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8820:6:22"},"nodeType":"YulFunctionCall","src":"8820:55:22"},"nodeType":"YulExpressionStatement","src":"8820:55:22"},{"nodeType":"YulAssignment","src":"8884:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8896:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8907:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8892:3:22"},"nodeType":"YulFunctionCall","src":"8892:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8884:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8718:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8732:4:22","type":""}],"src":"8567:349:22"},{"body":{"nodeType":"YulBlock","src":"9095:231:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9112:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9123:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9105:6:22"},"nodeType":"YulFunctionCall","src":"9105:21:22"},"nodeType":"YulExpressionStatement","src":"9105:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9146:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9157:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9142:3:22"},"nodeType":"YulFunctionCall","src":"9142:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9162:2:22","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9135:6:22"},"nodeType":"YulFunctionCall","src":"9135:30:22"},"nodeType":"YulExpressionStatement","src":"9135:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9185:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9196:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9181:3:22"},"nodeType":"YulFunctionCall","src":"9181:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"9201:34:22","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9174:6:22"},"nodeType":"YulFunctionCall","src":"9174:62:22"},"nodeType":"YulExpressionStatement","src":"9174:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9256:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9267:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9252:3:22"},"nodeType":"YulFunctionCall","src":"9252:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"9272:11:22","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9245:6:22"},"nodeType":"YulFunctionCall","src":"9245:39:22"},"nodeType":"YulExpressionStatement","src":"9245:39:22"},{"nodeType":"YulAssignment","src":"9293:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9305:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9316:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:22"},"nodeType":"YulFunctionCall","src":"9301:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9293:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9072:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9086:4:22","type":""}],"src":"8921:405:22"},{"body":{"nodeType":"YulBlock","src":"9505:236:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9522:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9533:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9515:6:22"},"nodeType":"YulFunctionCall","src":"9515:21:22"},"nodeType":"YulExpressionStatement","src":"9515:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9556:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9567:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9552:3:22"},"nodeType":"YulFunctionCall","src":"9552:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9572:2:22","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:22"},"nodeType":"YulFunctionCall","src":"9545:30:22"},"nodeType":"YulExpressionStatement","src":"9545:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9595:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9606:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9591:3:22"},"nodeType":"YulFunctionCall","src":"9591:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"9611:34:22","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9584:6:22"},"nodeType":"YulFunctionCall","src":"9584:62:22"},"nodeType":"YulExpressionStatement","src":"9584:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9666:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9677:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9662:3:22"},"nodeType":"YulFunctionCall","src":"9662:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"9682:16:22","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9655:6:22"},"nodeType":"YulFunctionCall","src":"9655:44:22"},"nodeType":"YulExpressionStatement","src":"9655:44:22"},{"nodeType":"YulAssignment","src":"9708:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9720:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9731:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9716:3:22"},"nodeType":"YulFunctionCall","src":"9716:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9708:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9482:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9496:4:22","type":""}],"src":"9331:410:22"},{"body":{"nodeType":"YulBlock","src":"9920:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9937:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9948:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9930:6:22"},"nodeType":"YulFunctionCall","src":"9930:21:22"},"nodeType":"YulExpressionStatement","src":"9930:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9971:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9982:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9967:3:22"},"nodeType":"YulFunctionCall","src":"9967:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9987:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9960:6:22"},"nodeType":"YulFunctionCall","src":"9960:30:22"},"nodeType":"YulExpressionStatement","src":"9960:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10010:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10021:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:22"},"nodeType":"YulFunctionCall","src":"10006:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"10026:34:22","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9999:6:22"},"nodeType":"YulFunctionCall","src":"9999:62:22"},"nodeType":"YulExpressionStatement","src":"9999:62:22"},{"nodeType":"YulAssignment","src":"10070:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10082:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10093:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10078:3:22"},"nodeType":"YulFunctionCall","src":"10078:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10070:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9897:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9911:4:22","type":""}],"src":"9746:356:22"},{"body":{"nodeType":"YulBlock","src":"10281:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10298:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10309:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10291:6:22"},"nodeType":"YulFunctionCall","src":"10291:21:22"},"nodeType":"YulExpressionStatement","src":"10291:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10332:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10343:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10328:3:22"},"nodeType":"YulFunctionCall","src":"10328:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10348:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10321:6:22"},"nodeType":"YulFunctionCall","src":"10321:30:22"},"nodeType":"YulExpressionStatement","src":"10321:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10371:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10382:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10367:3:22"},"nodeType":"YulFunctionCall","src":"10367:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"10387:34:22","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10360:6:22"},"nodeType":"YulFunctionCall","src":"10360:62:22"},"nodeType":"YulExpressionStatement","src":"10360:62:22"},{"nodeType":"YulAssignment","src":"10431:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10443:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10454:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10439:3:22"},"nodeType":"YulFunctionCall","src":"10439:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10431:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10258:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10272:4:22","type":""}],"src":"10107:356:22"},{"body":{"nodeType":"YulBlock","src":"10642:174:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10659:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10670:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10652:6:22"},"nodeType":"YulFunctionCall","src":"10652:21:22"},"nodeType":"YulExpressionStatement","src":"10652:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10693:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10704:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10689:3:22"},"nodeType":"YulFunctionCall","src":"10689:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10709:2:22","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10682:6:22"},"nodeType":"YulFunctionCall","src":"10682:30:22"},"nodeType":"YulExpressionStatement","src":"10682:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10732:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10743:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10728:3:22"},"nodeType":"YulFunctionCall","src":"10728:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"10748:26:22","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10721:6:22"},"nodeType":"YulFunctionCall","src":"10721:54:22"},"nodeType":"YulExpressionStatement","src":"10721:54:22"},{"nodeType":"YulAssignment","src":"10784:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10796:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10807:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10792:3:22"},"nodeType":"YulFunctionCall","src":"10792:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10784:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10619:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10633:4:22","type":""}],"src":"10468:348:22"},{"body":{"nodeType":"YulBlock","src":"10995:223:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11012:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11023:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11005:6:22"},"nodeType":"YulFunctionCall","src":"11005:21:22"},"nodeType":"YulExpressionStatement","src":"11005:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11046:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11057:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11042:3:22"},"nodeType":"YulFunctionCall","src":"11042:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11062:2:22","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11035:6:22"},"nodeType":"YulFunctionCall","src":"11035:30:22"},"nodeType":"YulExpressionStatement","src":"11035:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11085:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11096:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11081:3:22"},"nodeType":"YulFunctionCall","src":"11081:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"11101:34:22","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11074:6:22"},"nodeType":"YulFunctionCall","src":"11074:62:22"},"nodeType":"YulExpressionStatement","src":"11074:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11156:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11167:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11152:3:22"},"nodeType":"YulFunctionCall","src":"11152:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"11172:3:22","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11145:6:22"},"nodeType":"YulFunctionCall","src":"11145:31:22"},"nodeType":"YulExpressionStatement","src":"11145:31:22"},{"nodeType":"YulAssignment","src":"11185:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11197:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11208:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11193:3:22"},"nodeType":"YulFunctionCall","src":"11193:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11185:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10972:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10986:4:22","type":""}],"src":"10821:397:22"},{"body":{"nodeType":"YulBlock","src":"11397:251:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11414:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11425:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11407:6:22"},"nodeType":"YulFunctionCall","src":"11407:21:22"},"nodeType":"YulExpressionStatement","src":"11407:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11448:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11459:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11444:3:22"},"nodeType":"YulFunctionCall","src":"11444:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11464:2:22","type":"","value":"61"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11437:6:22"},"nodeType":"YulFunctionCall","src":"11437:30:22"},"nodeType":"YulExpressionStatement","src":"11437:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11487:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11498:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11483:3:22"},"nodeType":"YulFunctionCall","src":"11483:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"11503:34:22","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11476:6:22"},"nodeType":"YulFunctionCall","src":"11476:62:22"},"nodeType":"YulExpressionStatement","src":"11476:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11558:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11569:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11554:3:22"},"nodeType":"YulFunctionCall","src":"11554:18:22"},{"kind":"string","nodeType":"YulLiteral","src":"11574:31:22","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11547:6:22"},"nodeType":"YulFunctionCall","src":"11547:59:22"},"nodeType":"YulExpressionStatement","src":"11547:59:22"},{"nodeType":"YulAssignment","src":"11615:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11627:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11638:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11623:3:22"},"nodeType":"YulFunctionCall","src":"11623:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11615:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11374:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11388:4:22","type":""}],"src":"11223:425:22"},{"body":{"nodeType":"YulBlock","src":"11754:76:22","statements":[{"nodeType":"YulAssignment","src":"11764:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11787:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11772:3:22"},"nodeType":"YulFunctionCall","src":"11772:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11764:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11806:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"11817:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11799:6:22"},"nodeType":"YulFunctionCall","src":"11799:25:22"},"nodeType":"YulExpressionStatement","src":"11799:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11723:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11734:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11745:4:22","type":""}],"src":"11653:177:22"},{"body":{"nodeType":"YulBlock","src":"11888:205:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11898:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11907:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11902:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11967:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11992:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"11997:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11988:3:22"},"nodeType":"YulFunctionCall","src":"11988:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12011:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"12016:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12007:3:22"},"nodeType":"YulFunctionCall","src":"12007:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12001:5:22"},"nodeType":"YulFunctionCall","src":"12001:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11981:6:22"},"nodeType":"YulFunctionCall","src":"11981:39:22"},"nodeType":"YulExpressionStatement","src":"11981:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11928:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"11931:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11925:2:22"},"nodeType":"YulFunctionCall","src":"11925:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11939:19:22","statements":[{"nodeType":"YulAssignment","src":"11941:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11950:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"11953:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11946:3:22"},"nodeType":"YulFunctionCall","src":"11946:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11941:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"11921:3:22","statements":[]},"src":"11917:113:22"},{"body":{"nodeType":"YulBlock","src":"12056:31:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12069:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"12074:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12065:3:22"},"nodeType":"YulFunctionCall","src":"12065:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"12083:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12058:6:22"},"nodeType":"YulFunctionCall","src":"12058:27:22"},"nodeType":"YulExpressionStatement","src":"12058:27:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12045:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"12048:6:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12042:2:22"},"nodeType":"YulFunctionCall","src":"12042:13:22"},"nodeType":"YulIf","src":"12039:2:22"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11866:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11871:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"11876:6:22","type":""}],"src":"11835:258:22"},{"body":{"nodeType":"YulBlock","src":"12153:325:22","statements":[{"nodeType":"YulAssignment","src":"12163:22:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12177:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"12183:1:22","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12173:3:22"},"nodeType":"YulFunctionCall","src":"12173:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12163:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"12194:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12224:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"12230:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12220:3:22"},"nodeType":"YulFunctionCall","src":"12220:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"12198:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12271:31:22","statements":[{"nodeType":"YulAssignment","src":"12273:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12287:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12295:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12283:3:22"},"nodeType":"YulFunctionCall","src":"12283:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12273:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12251:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12244:6:22"},"nodeType":"YulFunctionCall","src":"12244:26:22"},"nodeType":"YulIf","src":"12241:2:22"},{"body":{"nodeType":"YulBlock","src":"12361:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12382:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12389:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12394:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12385:3:22"},"nodeType":"YulFunctionCall","src":"12385:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12375:6:22"},"nodeType":"YulFunctionCall","src":"12375:31:22"},"nodeType":"YulExpressionStatement","src":"12375:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12426:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12429:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12419:6:22"},"nodeType":"YulFunctionCall","src":"12419:15:22"},"nodeType":"YulExpressionStatement","src":"12419:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12454:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12457:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12447:6:22"},"nodeType":"YulFunctionCall","src":"12447:15:22"},"nodeType":"YulExpressionStatement","src":"12447:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"12317:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12340:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12348:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12337:2:22"},"nodeType":"YulFunctionCall","src":"12337:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12314:2:22"},"nodeType":"YulFunctionCall","src":"12314:38:22"},"nodeType":"YulIf","src":"12311:2:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"12133:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12142:6:22","type":""}],"src":"12098:380:22"},{"body":{"nodeType":"YulBlock","src":"12515:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12532:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12539:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12544:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12535:3:22"},"nodeType":"YulFunctionCall","src":"12535:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12525:6:22"},"nodeType":"YulFunctionCall","src":"12525:31:22"},"nodeType":"YulExpressionStatement","src":"12525:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12572:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12575:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12565:6:22"},"nodeType":"YulFunctionCall","src":"12565:15:22"},"nodeType":"YulExpressionStatement","src":"12565:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12596:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12599:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12589:6:22"},"nodeType":"YulFunctionCall","src":"12589:15:22"},"nodeType":"YulExpressionStatement","src":"12589:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"12483:127:22"},{"body":{"nodeType":"YulBlock","src":"12661:87:22","statements":[{"body":{"nodeType":"YulBlock","src":"12726:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12735:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12738:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12728:6:22"},"nodeType":"YulFunctionCall","src":"12728:12:22"},"nodeType":"YulExpressionStatement","src":"12728:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12684:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12695:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12706:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12711:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12702:3:22"},"nodeType":"YulFunctionCall","src":"12702:20:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12691:3:22"},"nodeType":"YulFunctionCall","src":"12691:32:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12681:2:22"},"nodeType":"YulFunctionCall","src":"12681:43:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12674:6:22"},"nodeType":"YulFunctionCall","src":"12674:51:22"},"nodeType":"YulIf","src":"12671:2:22"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12650:5:22","type":""}],"src":"12615:133:22"}]},"contents":"{\n    { }\n    function abi_decode_available_length_t_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := abi_decode_t_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value3, value3) }\n        value3 := abi_decode_available_length_t_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value1, value1) }\n        value1 := abi_decode_available_length_t_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_t_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC721: caller is not token owne\")\n        mstore(add(headStart, 96), \"r or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: address zero is not a va\")\n        mstore(add(headStart, 96), \"lid owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ERC721: invalid token ID\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not to\")\n        mstore(add(headStart, 96), \"ken owner or approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde1461021a578063c87b56dd1461022d578063e985e9c514610240578063eacabe1414610253578063f2fde38b1461026657610116565b8063715018a6146101ef5780638da5cb5b146101f757806395d89b41146101ff578063a22cb4651461020757610116565b806318160ddd116100e957806318160ddd1461018e57806323b872dd146101a357806342842e0e146101b65780636352211e146101c957806370a08231146101dc57610116565b806301ffc9a71461011b57806306fdde0314610144578063081812fc14610159578063095ea7b314610179575b600080fd5b61012e6101293660046112c6565b610279565b60405161013b91906113c2565b60405180910390f35b61014c6102a6565b60405161013b91906113cd565b61016c6101673660046112fe565b610338565b60405161013b9190611371565b61018c61018736600461129d565b61035f565b005b610196610400565b60405161013b9190611792565b61018c6101b1366004611150565b610411565b61018c6101c4366004611150565b610449565b61016c6101d73660046112fe565b610464565b6101966101ea366004611104565b610498565b61018c6104dc565b61016c6104f0565b61014c6104ff565b61018c610215366004611204565b61050e565b61018c61022836600461118b565b610524565b61014c61023b3660046112fe565b610563565b61012e61024e36600461111e565b610668565b61019661026136600461123e565b610696565b61018c610274366004611104565b6106d3565b60006001600160e01b03198216632483248360e11b148061029e575061029e8261070d565b90505b919050565b6060600080546102b5906117c7565b80601f01602080910402602001604051908101604052809291908181526020018280546102e1906117c7565b801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b5050505050905090565b60006103438261074d565b506000908152600460205260409020546001600160a01b031690565b600061036a82610464565b9050806001600160a01b0316836001600160a01b031614156103a75760405162461bcd60e51b815260040161039e906116f4565b60405180910390fd5b806001600160a01b03166103b9610772565b6001600160a01b031614806103d557506103d58161024e610772565b6103f15760405162461bcd60e51b815260040161039e90611735565b6103fb8383610776565b505050565b600061040c60086107e4565b905090565b61042261041c610772565b826107e8565b61043e5760405162461bcd60e51b815260040161039e906113e0565b6103fb838383610846565b6103fb83838360405180602001604052806000815250610524565b60008061047083610983565b90506001600160a01b03811661029e5760405162461bcd60e51b815260040161039e906116bd565b60006001600160a01b0382166104c05760405162461bcd60e51b815260040161039e906115bc565b506001600160a01b031660009081526003602052604090205490565b6104e461099e565b6104ee60006109dd565b565b6007546001600160a01b031690565b6060600180546102b5906117c7565b610520610519610772565b8383610a2f565b5050565b61053561052f610772565b836107e8565b6105515760405162461bcd60e51b815260040161039e906113e0565b61055d84848484610ad2565b50505050565b606061056e8261074d565b60008281526006602052604081208054610587906117c7565b80601f01602080910402602001604051908101604052809291908181526020018280546105b3906117c7565b80156106005780601f106105d557610100808354040283529160200191610600565b820191906000526020600020905b8154815290600101906020018083116105e357829003601f168201915b505050505090506000610611610b05565b9050805160001415610625575090506102a1565b81511561065757808260405160200161063f929190611342565b604051602081830303815290604052925050506102a1565b61066084610b17565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006106a061099e565b6106aa6008610b7d565b60006106b660086107e4565b90506106c28482610b86565b6106cc8184610c7b565b9392505050565b6106db61099e565b6001600160a01b0381166107015760405162461bcd60e51b815260040161039e9061147f565b61070a816109dd565b50565b60006001600160e01b031982166380ac58cd60e01b148061073e57506001600160e01b03198216635b5e139f60e01b145b8061029e575061029e82610cfb565b61075681610d14565b61070a5760405162461bcd60e51b815260040161039e906116bd565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107ab82610464565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b5490565b6000806107f483610464565b9050806001600160a01b0316846001600160a01b0316148061081b575061081b8185610668565b806106605750836001600160a01b031661083484610338565b6001600160a01b031614949350505050565b826001600160a01b031661085982610464565b6001600160a01b03161461087f5760405162461bcd60e51b815260040161039e906114c5565b6001600160a01b0382166108a55760405162461bcd60e51b815260040161039e90611541565b6108b2838383600161055d565b826001600160a01b03166108c582610464565b6001600160a01b0316146108eb5760405162461bcd60e51b815260040161039e906114c5565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a46103fb838383600161055d565b6000908152600260205260409020546001600160a01b031690565b6109a6610772565b6001600160a01b03166109b76104f0565b6001600160a01b0316146104ee5760405162461bcd60e51b815260040161039e90611688565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610a615760405162461bcd60e51b815260040161039e90611585565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610ac59085906113c2565b60405180910390a3505050565b610add848484610846565b610ae984848484610d31565b61055d5760405162461bcd60e51b815260040161039e9061142d565b60408051602081019091526000815290565b6060610b228261074d565b6000610b2c610b05565b90506000815111610b4c57604051806020016040528060008152506106cc565b80610b5684610e4c565b604051602001610b67929190611342565b6040516020818303038152906040529392505050565b80546001019055565b6001600160a01b038216610bac5760405162461bcd60e51b815260040161039e90611653565b610bb581610d14565b15610bd25760405162461bcd60e51b815260040161039e9061150a565b610be060008383600161055d565b610be981610d14565b15610c065760405162461bcd60e51b815260040161039e9061150a565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461052060008383600161055d565b610c8482610d14565b610ca05760405162461bcd60e51b815260040161039e90611605565b60008281526006602090815260409091208251610cbf92840190610fde565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051610cef9190611792565b60405180910390a15050565b6001600160e01b031981166301ffc9a760e01b14919050565b600080610d2083610983565b6001600160a01b0316141592915050565b6000610d45846001600160a01b0316610ef7565b15610e4157836001600160a01b031663150b7a02610d61610772565b8786866040518563ffffffff1660e01b8152600401610d839493929190611385565b602060405180830381600087803b158015610d9d57600080fd5b505af1925050508015610dcd575060408051601f3d908101601f19168201909252610dca918101906112e2565b60015b610e27573d808015610dfb576040519150601f19603f3d011682016040523d82523d6000602084013e610e00565b606091505b508051610e1f5760405162461bcd60e51b815260040161039e9061142d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610660565b506001949350505050565b60606000610e5983610f06565b600101905060008167ffffffffffffffff811115610e8757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610eb1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610eea57610eef565b610ebb565b509392505050565b6001600160a01b03163b151590565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f455772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f71576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f8f57662386f26fc10000830492506010015b6305f5e1008310610fa7576305f5e100830492506008015b6127108310610fbb57612710830492506004015b60648310610fcd576064830492506002015b600a831061029e5760010192915050565b828054610fea906117c7565b90600052602060002090601f01602090048101928261100c5760008555611052565b82601f1061102557805160ff1916838001178555611052565b82800160010185558215611052579182015b82811115611052578251825591602001919060010190611037565b5061105e929150611062565b5090565b5b8082111561105e5760008155600101611063565b600067ffffffffffffffff8084111561109257611092611802565b604051601f8501601f19908116603f011681019082821181831017156110ba576110ba611802565b816040528093508581528686860111156110d357600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b03811681146102a157600080fd5b600060208284031215611115578081fd5b6106cc826110ed565b60008060408385031215611130578081fd5b611139836110ed565b9150611147602084016110ed565b90509250929050565b600080600060608486031215611164578081fd5b61116d846110ed565b925061117b602085016110ed565b9150604084013590509250925092565b600080600080608085870312156111a0578081fd5b6111a9856110ed565b93506111b7602086016110ed565b925060408501359150606085013567ffffffffffffffff8111156111d9578182fd5b8501601f810187136111e9578182fd5b6111f887823560208401611077565b91505092959194509250565b60008060408385031215611216578182fd5b61121f836110ed565b915060208301358015158114611233578182fd5b809150509250929050565b60008060408385031215611250578182fd5b611259836110ed565b9150602083013567ffffffffffffffff811115611274578182fd5b8301601f81018513611284578182fd5b61129385823560208401611077565b9150509250929050565b600080604083850312156112af578182fd5b6112b8836110ed565b946020939093013593505050565b6000602082840312156112d7578081fd5b81356106cc81611818565b6000602082840312156112f3578081fd5b81516106cc81611818565b60006020828403121561130f578081fd5b5035919050565b6000815180845261132e81602086016020860161179b565b601f01601f19169290920160200192915050565b6000835161135481846020880161179b565b83519083019061136881836020880161179b565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906113b890830184611316565b9695505050505050565b901515815260200190565b6000602082526106cc6020830184611316565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b60208082526029908201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616040820152683634b21037bbb732b960b91b606082015260800190565b6020808252602e908201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60408201526d32bc34b9ba32b73a103a37b5b2b760911b606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b6020808252603d908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60408201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606082015260800190565b90815260200190565b60005b838110156117b657818101518382015260200161179e565b8381111561055d5750506000910152565b6002810460018216806117db57607f821691505b602082108114156117fc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461070a57600080fdfea2646970667358221220f8cd9980be3c0c3f158ff4f06c4e8f98f6cd1b1db0938e03ab4e45a2c7e5c5dd64736f6c63430008010033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xEACABE14 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x266 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x207 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DC JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x179 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C6 JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1371 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x400 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1150 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x16C PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x4FF JUMP JUMPDEST PUSH2 0x18C PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1204 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH2 0x18C PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0x12FE JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x261 CALLDATASIZE PUSH1 0x4 PUSH2 0x123E JUMP JUMPDEST PUSH2 0x696 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x274 CALLDATASIZE PUSH1 0x4 PUSH2 0x1104 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x24832483 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x29E JUMPI POP PUSH2 0x29E DUP3 PUSH2 0x70D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E1 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x303 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x311 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x343 DUP3 PUSH2 0x74D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A DUP3 PUSH2 0x464 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B9 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x3D5 JUMPI POP PUSH2 0x3D5 DUP2 PUSH2 0x24E PUSH2 0x772 JUMP JUMPDEST PUSH2 0x3F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 PUSH2 0x776 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40C PUSH1 0x8 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x422 PUSH2 0x41C PUSH2 0x772 JUMP JUMPDEST DUP3 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x524 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x470 DUP4 PUSH2 0x983 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x15BC JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x4EE PUSH1 0x0 PUSH2 0x9DD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0x520 PUSH2 0x519 PUSH2 0x772 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xA2F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x535 PUSH2 0x52F PUSH2 0x772 JUMP JUMPDEST DUP4 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x55D DUP5 DUP5 DUP5 DUP5 PUSH2 0xAD2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x56E DUP3 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x587 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B3 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x600 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x600 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x611 PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x625 JUMPI POP SWAP1 POP PUSH2 0x2A1 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x657 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x63F SWAP3 SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0x660 DUP5 PUSH2 0xB17 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A0 PUSH2 0x99E JUMP JUMPDEST PUSH2 0x6AA PUSH1 0x8 PUSH2 0xB7D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH1 0x8 PUSH2 0x7E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x6C2 DUP5 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x6CC DUP2 DUP5 PUSH2 0xC7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x99E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x701 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x147F JUMP JUMPDEST PUSH2 0x70A DUP2 PUSH2 0x9DD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x73E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x29E JUMPI POP PUSH2 0x29E DUP3 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x756 DUP2 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x16BD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x7AB DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7F4 DUP4 PUSH2 0x464 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x81B JUMPI POP PUSH2 0x81B DUP2 DUP6 PUSH2 0x668 JUMP JUMPDEST DUP1 PUSH2 0x660 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x834 DUP5 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x859 DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0x8B2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8C5 DUP3 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 PUSH2 0x3FB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x9A6 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B7 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO OR SWAP1 SSTORE MLOAD PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH2 0xAC5 SWAP1 DUP6 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xADD DUP5 DUP5 DUP5 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xAE9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD31 JUMP JUMPDEST PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB22 DUP3 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB2C PUSH2 0xB05 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x6CC JUMP JUMPDEST DUP1 PUSH2 0xB56 DUP5 PUSH2 0xE4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB67 SWAP3 SWAP2 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH2 0xBB5 DUP2 PUSH2 0xD14 JUMP JUMPDEST ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH2 0xBE0 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST PUSH2 0xBE9 DUP2 PUSH2 0xD14 JUMP JUMPDEST ISZERO PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP5 OR SWAP1 SSTORE MLOAD DUP4 SWAP3 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 PUSH2 0x520 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x55D JUMP JUMPDEST PUSH2 0xC84 DUP3 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0xCA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0xCBF SWAP3 DUP5 ADD SWAP1 PUSH2 0xFDE JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD20 DUP4 PUSH2 0x983 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD45 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEF7 JUMP JUMPDEST ISZERO PUSH2 0xE41 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x150B7A02 PUSH2 0xD61 PUSH2 0x772 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD83 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xDCD JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xDCA SWAP2 DUP2 ADD SWAP1 PUSH2 0x12E2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE27 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE00 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xE1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP1 PUSH2 0x142D JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x660 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xE59 DUP4 PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xEEA JUMPI PUSH2 0xEEF JUMP JUMPDEST PUSH2 0xEBB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xF45 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xF71 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xF8F JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xFA7 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xFBB JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xFCD JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x29E JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xFEA SWAP1 PUSH2 0x17C7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x100C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1052 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1025 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1052 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1052 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1052 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1037 JUMP JUMPDEST POP PUSH2 0x105E SWAP3 SWAP2 POP PUSH2 0x1062 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x105E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1092 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10BA PUSH2 0x1802 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x10D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1115 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6CC DUP3 PUSH2 0x10ED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1130 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1139 DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH2 0x1147 PUSH1 0x20 DUP5 ADD PUSH2 0x10ED JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1164 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x116D DUP5 PUSH2 0x10ED JUMP JUMPDEST SWAP3 POP PUSH2 0x117B PUSH1 0x20 DUP6 ADD PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11A0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x11A9 DUP6 PUSH2 0x10ED JUMP JUMPDEST SWAP4 POP PUSH2 0x11B7 PUSH1 0x20 DUP7 ADD PUSH2 0x10ED JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11D9 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x11E9 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x11F8 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1216 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x121F DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1233 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1250 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1259 DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1274 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1284 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1293 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12AF JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x12B8 DUP4 PUSH2 0x10ED JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6CC DUP2 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6CC DUP2 PUSH2 0x1818 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x132E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x179B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1354 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x179B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1368 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x179B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x13B8 SWAP1 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x6CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1316 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17B6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x179E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x55D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17DB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x70A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0xCD SWAP10 DUP1 0xBE EXTCODECOPY 0xC EXTCODEHASH ISZERO DUP16 DELEGATECALL CREATE PUSH13 0x4E8F98F6CD1B1DB0938E03AB4E GASLIMIT LOG2 0xC7 0xE5 0xC5 0xDD PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ","sourceMap":"301:571:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:205:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:4;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3468:406::-;;;;;;:::i;:::-;;:::i;:::-;;774:96:20;;;:::i;:::-;;;;;;;:::i;4612:296:4:-;;;;;;:::i;:::-;;:::i;4974:149::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;1201:85::-;;;:::i;2633:102:4:-;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5189:276::-;;;;;;:::i;:::-;;:::i;806:608:7:-;;;;;;:::i;:::-;;:::i;4388:162:4:-;;;;;;:::i;:::-;;:::i;478:290:20:-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;535:205:7:-;637:4;-1:-1:-1;;;;;;660:33:7;;-1:-1:-1;;;660:33:7;;:73;;;697:36;721:11;697:23;:36::i;:::-;653:80;;535:205;;;;:::o;2471:98:4:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:4;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:4;:2;-1:-1:-1;;;;;3605:11:4;;;3597:57;;;;-1:-1:-1;;;3597:57:4;;;;;;;:::i;:::-;;;;;;;;;3702:5;-1:-1:-1;;;;;3686:21:4;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3686:21:4;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:4;;;;;;;:::i;:::-;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3468:406;;;:::o;774:96:20:-;818:7;844:19;:9;:17;:19::i;:::-;837:26;;774:96;:::o;4612:296:4:-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;-1:-1:-1;;;4763:99:4;;;;;;;:::i;:::-;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;-1:-1:-1;;;;;;2332:19:4;;2324:56;;;;-1:-1:-1;;;2324:56:4;;;;;;;:::i;1929:204::-;2001:7;-1:-1:-1;;;;;2028:19:4;;2020:73;;;;-1:-1:-1;;;2020:73:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2110:16:4;;;;;:9;:16;;;;;;;1929:204::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;:::o;2633:102:4:-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;-1:-1:-1;;;5311:99:4;;;;;;;:::i;:::-;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;806:608:7:-;879:13;904:23;919:7;904:14;:23::i;:::-;938;964:19;;;:10;:19;;;;;938:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:18;1014:10;:8;:10::i;:::-;993:31;;1103:4;1097:18;1119:1;1097:23;1093:70;;;-1:-1:-1;1143:9:7;-1:-1:-1;1136:16:7;;1093:70;1265:23;;:27;1261:106;;1339:4;1345:9;1322:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1308:48;;;;;;1261:106;1384:23;1399:7;1384:14;:23::i;:::-;1377:30;806:608;-1:-1:-1;;;;806:608:7:o;4388:162:4:-;-1:-1:-1;;;;;4508:25:4;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;478:290:20:-;564:7;1094:13:0;:11;:13::i;:::-;583:21:20::1;:9;:19;:21::i;:::-;615:17;635:19;:9;:17;:19::i;:::-;615:39;;664:27;670:9;681;664:5;:27::i;:::-;701:33;714:9;725:8;701:12;:33::i;:::-;752:9:::0;478:290;-1:-1:-1;;;478:290:20:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;;-1:-1:-1::0;;;2154:73:0::1;;;;;;;:::i;:::-;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1570:300:4:-;1672:4;-1:-1:-1;;;;;;1707:40:4;;-1:-1:-1;;;1707:40:4;;:104;;-1:-1:-1;;;;;;;1763:48:4;;-1:-1:-1;;;1763:48:4;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;13240:133::-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;-1:-1:-1;;;13313:53:4;;;;;;;:::i;655:96:10:-;734:10;655:96;:::o;12572:171:4:-;12646:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12646:29:4;-1:-1:-1;;;;;12646:29:4;;;;;;;;:24;;12699:23;12646:24;12699:14;:23::i;:::-;-1:-1:-1;;;;;12690:46:4;;;;;;;;;;;12572:171;;:::o;827:112:11:-;918:14;;827:112::o;7404:261:4:-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;-1:-1:-1;;;;;7570:16:4;:7;-1:-1:-1;;;;;7570:16:4;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:87;;;;7650:7;-1:-1:-1;;;;;7626:31:4;:20;7638:7;7626:11;:20::i;:::-;-1:-1:-1;;;;;7626:31:4;;7562:96;7404:261;-1:-1:-1;;;;7404:261:4:o;11257:1203::-;11381:4;-1:-1:-1;;;;;11354:31:4;:23;11369:7;11354:14;:23::i;:::-;-1:-1:-1;;;;;11354:31:4;;11346:81;;;;-1:-1:-1;;;11346:81:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;11445:16:4;;11437:65;;;;-1:-1:-1;;;11437:65:4;;;;;;;:::i;:::-;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;-1:-1:-1;;;;;11655:31:4;:23;11670:7;11655:14;:23::i;:::-;-1:-1:-1;;;;;11655:31:4;;11647:81;;;;-1:-1:-1;;;11647:81:4;;;;;;;:::i;:::-;11797:24;;;;:15;:24;;;;;;;;11790:31;;-1:-1:-1;;;;;;11790:31:4;;;;;;-1:-1:-1;;;;;12265:15:4;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12265:20:4;;;12299:13;;;;;;;;;:18;;11790:31;12299:18;;;12337:16;;;:7;:16;;;;;;:21;;;;;;;;;;12374:27;;11813:7;;12374:27;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;6702:115::-;6768:7;6794:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6794:16:4;;6702:115::o;1359:130:0:-;1433:12;:10;:12::i;:::-;-1:-1:-1;;;;;1422:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1422:23:0;;1414:68;;;;-1:-1:-1;;;1414:68:0;;;;;;;:::i;2426:187::-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2426:187;;:::o;12879:277:4:-;12999:8;-1:-1:-1;;;;;12990:17:4;:5;-1:-1:-1;;;;;12990:17:4;;;12982:55;;;;-1:-1:-1;;;12982:55:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;13047:25:4;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;:46;;-1:-1:-1;;13047:46:4;;;;;;;13108:41;;;;;13047:46;;13108:41;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;-1:-1:-1;;;6476:110:4;;;;;;;:::i;3319:92::-;3395:9;;;;;;;;;-1:-1:-1;3395:9:4;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2977:93;2801:276;-1:-1:-1;;;2801:276:4:o;945:123:11:-;1032:19;;1050:1;1032:19;;;945:123::o;8925:920:4:-;-1:-1:-1;;;;;9004:16:4;;8996:61;;;;-1:-1:-1;;;8996:61:4;;;;;;;:::i;:::-;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;-1:-1:-1;;;9067:58:4;;;;;;;:::i;:::-;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;-1:-1:-1;;;9271:58:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;9671:13:4;;;;;;:9;:13;;;;;;;;:18;;9688:1;9671:18;;;9710:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9710:21:4;;;;;9747:33;9718:7;;9671:13;;9747:33;;9671:13;;9747:33;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;1599:253:7:-;1698:16;1706:7;1698;:16::i;:::-;1690:75;;;;-1:-1:-1;;;1690:75:7;;;;;;;:::i;:::-;1775:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;:::-;;1822:23;1837:7;1822:23;;;;;;:::i;:::-;;;;;;;;1599:253;;:::o;829:155:13:-;-1:-1:-1;;;;;;937:40:13;;-1:-1:-1;;;937:40:13;829:155;;;:::o;7120:126:4:-;7185:4;;7208:17;7217:7;7208:8;:17::i;:::-;-1:-1:-1;;;;;7208:31:4;;;;7120:126;-1:-1:-1;;7120:126:4:o;13925:831::-;14074:4;14094:15;:2;-1:-1:-1;;;;;14094:13:4;;:15::i;:::-;14090:660;;;14145:2;-1:-1:-1;;;;;14129:36:4;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14129:71:4;;;;;;;;-1:-1:-1;;14129:71:4;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14367:13:4;;14363:321;;14409:60;;-1:-1:-1;;;14409:60:4;;;;;;;:::i;14363:321::-;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;-1:-1:-1;;;;;;14250:51:4;-1:-1:-1;;;14250:51:4;;-1:-1:-1;14243:58:4;;14090:660;-1:-1:-1;14735:4:4;13925:831;;;;;;:::o;447:696:12:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;-1:-1:-1;;;627:18:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:12;-1:-1:-1;604:41:12;-1:-1:-1;765:28:12;;;781:2;765:28;820:280;-1:-1:-1;;851:5:12;-1:-1:-1;;;985:2:12;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1068:10:12;1064:21;;1080:5;;1064:21;820:280;;;-1:-1:-1;1120:6:12;447:696;-1:-1:-1;;;447:696:12:o;1412:320:9:-;-1:-1:-1;;;;;1702:19:9;;:23;;;1412:320::o;10139:916:15:-;10192:7;;-1:-1:-1;;;10267:17:15;;10263:103;;-1:-1:-1;;;10304:17:15;;;-1:-1:-1;10349:2:15;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:15;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:15;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:15;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:15;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:15;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;10139:916;-1:-1:-1;;10139:916:15:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:633:22;;110:18;151:2;143:6;140:14;137:2;;;157:18;;:::i;:::-;232:2;226:9;200:2;286:15;;-1:-1:-1;;282:24:22;;;308:2;278:33;274:42;262:55;;;332:18;;;352:22;;;329:46;326:2;;;378:18;;:::i;:::-;418:10;414:2;407:22;447:6;438:15;;477:6;469;462:22;517:3;508:6;503:3;499:16;496:25;493:2;;;534:1;531;524:12;493:2;584:6;579:3;572:4;564:6;560:17;547:44;639:1;632:4;623:6;615;611:19;607:30;600:41;;;;90:557;;;;;:::o;652:175::-;722:20;;-1:-1:-1;;;;;771:31:22;;761:42;;751:2;;817:1;814;807:12;832:198;;944:2;932:9;923:7;919:23;915:32;912:2;;;965:6;957;950:22;912:2;993:31;1014:9;993:31;:::i;1035:274::-;;;1164:2;1152:9;1143:7;1139:23;1135:32;1132:2;;;1185:6;1177;1170:22;1132:2;1213:31;1234:9;1213:31;:::i;:::-;1203:41;;1263:40;1299:2;1288:9;1284:18;1263:40;:::i;:::-;1253:50;;1122:187;;;;;:::o;1314:342::-;;;;1460:2;1448:9;1439:7;1435:23;1431:32;1428:2;;;1481:6;1473;1466:22;1428:2;1509:31;1530:9;1509:31;:::i;:::-;1499:41;;1559:40;1595:2;1584:9;1580:18;1559:40;:::i;:::-;1549:50;;1646:2;1635:9;1631:18;1618:32;1608:42;;1418:238;;;;;:::o;1661:702::-;;;;;1833:3;1821:9;1812:7;1808:23;1804:33;1801:2;;;1855:6;1847;1840:22;1801:2;1883:31;1904:9;1883:31;:::i;:::-;1873:41;;1933:40;1969:2;1958:9;1954:18;1933:40;:::i;:::-;1923:50;;2020:2;2009:9;2005:18;1992:32;1982:42;;2075:2;2064:9;2060:18;2047:32;2102:18;2094:6;2091:30;2088:2;;;2139:6;2131;2124:22;2088:2;2167:22;;2220:4;2212:13;;2208:27;-1:-1:-1;2198:2:22;;2254:6;2246;2239:22;2198:2;2282:75;2349:7;2344:2;2331:16;2326:2;2322;2318:11;2282:75;:::i;:::-;2272:85;;;1791:572;;;;;;;:::o;2368:369::-;;;2494:2;2482:9;2473:7;2469:23;2465:32;2462:2;;;2515:6;2507;2500:22;2462:2;2543:31;2564:9;2543:31;:::i;:::-;2533:41;;2624:2;2613:9;2609:18;2596:32;2671:5;2664:13;2657:21;2650:5;2647:32;2637:2;;2698:6;2690;2683:22;2637:2;2726:5;2716:15;;;2452:285;;;;;:::o;2742:558::-;;;2881:2;2869:9;2860:7;2856:23;2852:32;2849:2;;;2902:6;2894;2887:22;2849:2;2930:31;2951:9;2930:31;:::i;:::-;2920:41;;3012:2;3001:9;2997:18;2984:32;3039:18;3031:6;3028:30;3025:2;;;3076:6;3068;3061:22;3025:2;3104:22;;3157:4;3149:13;;3145:27;-1:-1:-1;3135:2:22;;3191:6;3183;3176:22;3135:2;3219:75;3286:7;3281:2;3268:16;3263:2;3259;3255:11;3219:75;:::i;:::-;3209:85;;;2839:461;;;;;:::o;3305:266::-;;;3434:2;3422:9;3413:7;3409:23;3405:32;3402:2;;;3455:6;3447;3440:22;3402:2;3483:31;3504:9;3483:31;:::i;:::-;3473:41;3561:2;3546:18;;;;3533:32;;-1:-1:-1;;;3392:179:22:o;3576:257::-;;3687:2;3675:9;3666:7;3662:23;3658:32;3655:2;;;3708:6;3700;3693:22;3655:2;3752:9;3739:23;3771:32;3797:5;3771:32;:::i;3838:261::-;;3960:2;3948:9;3939:7;3935:23;3931:32;3928:2;;;3981:6;3973;3966:22;3928:2;4018:9;4012:16;4037:32;4063:5;4037:32;:::i;4104:190::-;;4216:2;4204:9;4195:7;4191:23;4187:32;4184:2;;;4237:6;4229;4222:22;4184:2;-1:-1:-1;4265:23:22;;4174:120;-1:-1:-1;4174:120:22:o;4299:259::-;;4380:5;4374:12;4407:6;4402:3;4395:19;4423:63;4479:6;4472:4;4467:3;4463:14;4456:4;4449:5;4445:16;4423:63;:::i;:::-;4540:2;4519:15;-1:-1:-1;;4515:29:22;4506:39;;;;4547:4;4502:50;;4350:208;-1:-1:-1;;4350:208:22:o;4563:470::-;;4780:6;4774:13;4796:53;4842:6;4837:3;4830:4;4822:6;4818:17;4796:53;:::i;:::-;4912:13;;4871:16;;;;4934:57;4912:13;4871:16;4968:4;4956:17;;4934:57;:::i;:::-;5007:20;;4750:283;-1:-1:-1;;;;4750:283:22:o;5038:203::-;-1:-1:-1;;;;;5202:32:22;;;;5184:51;;5172:2;5157:18;;5139:102::o;5246:490::-;-1:-1:-1;;;;;5515:15:22;;;5497:34;;5567:15;;5562:2;5547:18;;5540:43;5614:2;5599:18;;5592:34;;;5662:3;5657:2;5642:18;;5635:31;;;5246:490;;5683:47;;5710:19;;5702:6;5683:47;:::i;:::-;5675:55;5449:287;-1:-1:-1;;;;;;5449:287:22:o;5741:187::-;5906:14;;5899:22;5881:41;;5869:2;5854:18;;5836:92::o;5933:221::-;;6082:2;6071:9;6064:21;6102:46;6144:2;6133:9;6129:18;6121:6;6102:46;:::i;6159:409::-;6361:2;6343:21;;;6400:2;6380:18;;;6373:30;6439:34;6434:2;6419:18;;6412:62;-1:-1:-1;;;6505:2:22;6490:18;;6483:43;6558:3;6543:19;;6333:235::o;6573:414::-;6775:2;6757:21;;;6814:2;6794:18;;;6787:30;6853:34;6848:2;6833:18;;6826:62;-1:-1:-1;;;6919:2:22;6904:18;;6897:48;6977:3;6962:19;;6747:240::o;6992:402::-;7194:2;7176:21;;;7233:2;7213:18;;;7206:30;7272:34;7267:2;7252:18;;7245:62;-1:-1:-1;;;7338:2:22;7323:18;;7316:36;7384:3;7369:19;;7166:228::o;7399:401::-;7601:2;7583:21;;;7640:2;7620:18;;;7613:30;7679:34;7674:2;7659:18;;7652:62;-1:-1:-1;;;7745:2:22;7730:18;;7723:35;7790:3;7775:19;;7573:227::o;7805:352::-;8007:2;7989:21;;;8046:2;8026:18;;;8019:30;8085;8080:2;8065:18;;8058:58;8148:2;8133:18;;7979:178::o;8162:400::-;8364:2;8346:21;;;8403:2;8383:18;;;8376:30;8442:34;8437:2;8422:18;;8415:62;-1:-1:-1;;;8508:2:22;8493:18;;8486:34;8552:3;8537:19;;8336:226::o;8567:349::-;8769:2;8751:21;;;8808:2;8788:18;;;8781:30;8847:27;8842:2;8827:18;;8820:55;8907:2;8892:18;;8741:175::o;8921:405::-;9123:2;9105:21;;;9162:2;9142:18;;;9135:30;9201:34;9196:2;9181:18;;9174:62;-1:-1:-1;;;9267:2:22;9252:18;;9245:39;9316:3;9301:19;;9095:231::o;9331:410::-;9533:2;9515:21;;;9572:2;9552:18;;;9545:30;9611:34;9606:2;9591:18;;9584:62;-1:-1:-1;;;9677:2:22;9662:18;;9655:44;9731:3;9716:19;;9505:236::o;9746:356::-;9948:2;9930:21;;;9967:18;;;9960:30;10026:34;10021:2;10006:18;;9999:62;10093:2;10078:18;;9920:182::o;10107:356::-;10309:2;10291:21;;;10328:18;;;10321:30;10387:34;10382:2;10367:18;;10360:62;10454:2;10439:18;;10281:182::o;10468:348::-;10670:2;10652:21;;;10709:2;10689:18;;;10682:30;10748:26;10743:2;10728:18;;10721:54;10807:2;10792:18;;10642:174::o;10821:397::-;11023:2;11005:21;;;11062:2;11042:18;;;11035:30;11101:34;11096:2;11081:18;;11074:62;-1:-1:-1;;;11167:2:22;11152:18;;11145:31;11208:3;11193:19;;10995:223::o;11223:425::-;11425:2;11407:21;;;11464:2;11444:18;;;11437:30;11503:34;11498:2;11483:18;;11476:62;11574:31;11569:2;11554:18;;11547:59;11638:3;11623:19;;11397:251::o;11653:177::-;11799:25;;;11787:2;11772:18;;11754:76::o;11835:258::-;11907:1;11917:113;11931:6;11928:1;11925:13;11917:113;;;12007:11;;;12001:18;11988:11;;;11981:39;11953:2;11946:10;11917:113;;;12048:6;12045:1;12042:13;12039:2;;;-1:-1:-1;;12083:1:22;12065:16;;12058:27;11888:205::o;12098:380::-;12183:1;12173:12;;12230:1;12220:12;;;12241:2;;12295:4;12287:6;12283:17;12273:27;;12241:2;12348;12340:6;12337:14;12317:18;12314:38;12311:2;;;12394:10;12389:3;12385:20;12382:1;12375:31;12429:4;12426:1;12419:15;12457:4;12454:1;12447:15;12311:2;;12153:325;;;:::o;12483:127::-;12544:10;12539:3;12535:20;12532:1;12525:31;12575:4;12572:1;12565:15;12599:4;12596:1;12589:15;12615:133;-1:-1:-1;;;;;;12691:32:22;;12681:43;;12671:2;;12738:1;12735;12728:12"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNFT(address,string)":"eacabe14","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT.sol\":\"MyNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MyNFT.sol\":{\"keccak256\":\"0xe1ebb60b02d5569524dcf6b940d5d81f31acacaf99cc125b3210b5a612d517d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6645505061aaa0d7b01f02238399821ae583e2c09e91102ec49587742e23b81b\",\"dweb:/ipfs/QmbUBxBhV5z7zRjn5M7x4tvoctiSVC3eWvYmcxBJgNvxvw\"]}},\"version\":1}"}}}}}